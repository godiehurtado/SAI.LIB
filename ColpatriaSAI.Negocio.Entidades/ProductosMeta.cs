//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Amparo))]
    [KnownType(typeof(LineaNegocio))]
    [KnownType(typeof(Meta))]
    [KnownType(typeof(ModalidadPago))]
    [KnownType(typeof(Producto))]
    [KnownType(typeof(Ramo))]
    [KnownType(typeof(Compania))]
    public partial class ProductosMeta: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> meta_id
        {
            get { return _meta_id; }
            set
            {
                if (_meta_id != value)
                {
                    ChangeTracker.RecordOriginalValue("meta_id", _meta_id);
                    if (!IsDeserializing)
                    {
                        if (Meta != null && Meta.id != value)
                        {
                            Meta = null;
                        }
                    }
                    _meta_id = value;
                    OnPropertyChanged("meta_id");
                }
            }
        }
        private Nullable<int> _meta_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramo_id", _ramo_id);
                    if (!IsDeserializing)
                    {
                        if (Ramo != null && Ramo.id != value)
                        {
                            Ramo = null;
                        }
                    }
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public Nullable<int> producto_id
        {
            get { return _producto_id; }
            set
            {
                if (_producto_id != value)
                {
                    ChangeTracker.RecordOriginalValue("producto_id", _producto_id);
                    if (!IsDeserializing)
                    {
                        if (Producto != null && Producto.id != value)
                        {
                            Producto = null;
                        }
                        if (Producto1 != null && Producto1.id != value)
                        {
                            Producto1 = null;
                        }
                    }
                    _producto_id = value;
                    OnPropertyChanged("producto_id");
                }
            }
        }
        private Nullable<int> _producto_id;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    ChangeTracker.RecordOriginalValue("lineaNegocio_id", _lineaNegocio_id);
                    if (!IsDeserializing)
                    {
                        if (LineaNegocio != null && LineaNegocio.id != value)
                        {
                            LineaNegocio = null;
                        }
                    }
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> modalidadPago_id
        {
            get { return _modalidadPago_id; }
            set
            {
                if (_modalidadPago_id != value)
                {
                    ChangeTracker.RecordOriginalValue("modalidadPago_id", _modalidadPago_id);
                    if (!IsDeserializing)
                    {
                        if (ModalidadPago != null && ModalidadPago.id != value)
                        {
                            ModalidadPago = null;
                        }
                    }
                    _modalidadPago_id = value;
                    OnPropertyChanged("modalidadPago_id");
                }
            }
        }
        private Nullable<int> _modalidadPago_id;
    
        [DataMember]
        public Nullable<int> amparo_id
        {
            get { return _amparo_id; }
            set
            {
                if (_amparo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("amparo_id", _amparo_id);
                    if (!IsDeserializing)
                    {
                        if (Amparo != null && Amparo.id != value)
                        {
                            Amparo = null;
                        }
                    }
                    _amparo_id = value;
                    OnPropertyChanged("amparo_id");
                }
            }
        }
        private Nullable<int> _amparo_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Amparo Amparo
        {
            get { return _amparo; }
            set
            {
                if (!ReferenceEquals(_amparo, value))
                {
                    var previousValue = _amparo;
                    _amparo = value;
                    FixupAmparo(previousValue);
                    OnNavigationPropertyChanged("Amparo");
                }
            }
        }
        private Amparo _amparo;
    
        [DataMember]
        public LineaNegocio LineaNegocio
        {
            get { return _lineaNegocio; }
            set
            {
                if (!ReferenceEquals(_lineaNegocio, value))
                {
                    var previousValue = _lineaNegocio;
                    _lineaNegocio = value;
                    FixupLineaNegocio(previousValue);
                    OnNavigationPropertyChanged("LineaNegocio");
                }
            }
        }
        private LineaNegocio _lineaNegocio;
    
        [DataMember]
        public Meta Meta
        {
            get { return _meta; }
            set
            {
                if (!ReferenceEquals(_meta, value))
                {
                    var previousValue = _meta;
                    _meta = value;
                    FixupMeta(previousValue);
                    OnNavigationPropertyChanged("Meta");
                }
            }
        }
        private Meta _meta;
    
        [DataMember]
        public ModalidadPago ModalidadPago
        {
            get { return _modalidadPago; }
            set
            {
                if (!ReferenceEquals(_modalidadPago, value))
                {
                    var previousValue = _modalidadPago;
                    _modalidadPago = value;
                    FixupModalidadPago(previousValue);
                    OnNavigationPropertyChanged("ModalidadPago");
                }
            }
        }
        private ModalidadPago _modalidadPago;
    
        [DataMember]
        public Producto Producto
        {
            get { return _producto; }
            set
            {
                if (!ReferenceEquals(_producto, value))
                {
                    var previousValue = _producto;
                    _producto = value;
                    FixupProducto(previousValue);
                    OnNavigationPropertyChanged("Producto");
                }
            }
        }
        private Producto _producto;
    
        [DataMember]
        public Producto Producto1
        {
            get { return _producto1; }
            set
            {
                if (!ReferenceEquals(_producto1, value))
                {
                    var previousValue = _producto1;
                    _producto1 = value;
                    FixupProducto1(previousValue);
                    OnNavigationPropertyChanged("Producto1");
                }
            }
        }
        private Producto _producto1;
    
        [DataMember]
        public Ramo Ramo
        {
            get { return _ramo; }
            set
            {
                if (!ReferenceEquals(_ramo, value))
                {
                    var previousValue = _ramo;
                    _ramo = value;
                    FixupRamo(previousValue);
                    OnNavigationPropertyChanged("Ramo");
                }
            }
        }
        private Ramo _ramo;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Amparo = null;
            LineaNegocio = null;
            Meta = null;
            ModalidadPago = null;
            Producto = null;
            Producto1 = null;
            Ramo = null;
            Compania = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupAmparo(Amparo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas.Contains(this))
            {
                previousValue.ProductosMetas.Remove(this);
            }
    
            if (Amparo != null)
            {
                if (!Amparo.ProductosMetas.Contains(this))
                {
                    Amparo.ProductosMetas.Add(this);
                }
    
                amparo_id = Amparo.id;
            }
            else if (!skipKeys)
            {
                amparo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Amparo")
                    && (ChangeTracker.OriginalValues["Amparo"] == Amparo))
                {
                    ChangeTracker.OriginalValues.Remove("Amparo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Amparo", previousValue);
                }
                if (Amparo != null && !Amparo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Amparo.StartTracking();
                }
            }
        }
    
        private void FixupLineaNegocio(LineaNegocio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas.Contains(this))
            {
                previousValue.ProductosMetas.Remove(this);
            }
    
            if (LineaNegocio != null)
            {
                if (!LineaNegocio.ProductosMetas.Contains(this))
                {
                    LineaNegocio.ProductosMetas.Add(this);
                }
    
                lineaNegocio_id = LineaNegocio.id;
            }
            else if (!skipKeys)
            {
                lineaNegocio_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LineaNegocio")
                    && (ChangeTracker.OriginalValues["LineaNegocio"] == LineaNegocio))
                {
                    ChangeTracker.OriginalValues.Remove("LineaNegocio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LineaNegocio", previousValue);
                }
                if (LineaNegocio != null && !LineaNegocio.ChangeTracker.ChangeTrackingEnabled)
                {
                    LineaNegocio.StartTracking();
                }
            }
        }
    
        private void FixupMeta(Meta previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas.Contains(this))
            {
                previousValue.ProductosMetas.Remove(this);
            }
    
            if (Meta != null)
            {
                if (!Meta.ProductosMetas.Contains(this))
                {
                    Meta.ProductosMetas.Add(this);
                }
    
                meta_id = Meta.id;
            }
            else if (!skipKeys)
            {
                meta_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Meta")
                    && (ChangeTracker.OriginalValues["Meta"] == Meta))
                {
                    ChangeTracker.OriginalValues.Remove("Meta");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Meta", previousValue);
                }
                if (Meta != null && !Meta.ChangeTracker.ChangeTrackingEnabled)
                {
                    Meta.StartTracking();
                }
            }
        }
    
        private void FixupModalidadPago(ModalidadPago previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas.Contains(this))
            {
                previousValue.ProductosMetas.Remove(this);
            }
    
            if (ModalidadPago != null)
            {
                if (!ModalidadPago.ProductosMetas.Contains(this))
                {
                    ModalidadPago.ProductosMetas.Add(this);
                }
    
                modalidadPago_id = ModalidadPago.id;
            }
            else if (!skipKeys)
            {
                modalidadPago_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ModalidadPago")
                    && (ChangeTracker.OriginalValues["ModalidadPago"] == ModalidadPago))
                {
                    ChangeTracker.OriginalValues.Remove("ModalidadPago");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ModalidadPago", previousValue);
                }
                if (ModalidadPago != null && !ModalidadPago.ChangeTracker.ChangeTrackingEnabled)
                {
                    ModalidadPago.StartTracking();
                }
            }
        }
    
        private void FixupProducto(Producto previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas.Contains(this))
            {
                previousValue.ProductosMetas.Remove(this);
            }
    
            if (Producto != null)
            {
                if (!Producto.ProductosMetas.Contains(this))
                {
                    Producto.ProductosMetas.Add(this);
                }
    
                producto_id = Producto.id;
            }
            else if (!skipKeys)
            {
                producto_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Producto")
                    && (ChangeTracker.OriginalValues["Producto"] == Producto))
                {
                    ChangeTracker.OriginalValues.Remove("Producto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Producto", previousValue);
                }
                if (Producto != null && !Producto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Producto.StartTracking();
                }
            }
        }
    
        private void FixupProducto1(Producto previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas1.Contains(this))
            {
                previousValue.ProductosMetas1.Remove(this);
            }
    
            if (Producto1 != null)
            {
                if (!Producto1.ProductosMetas1.Contains(this))
                {
                    Producto1.ProductosMetas1.Add(this);
                }
    
                producto_id = Producto1.id;
            }
            else if (!skipKeys)
            {
                producto_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Producto1")
                    && (ChangeTracker.OriginalValues["Producto1"] == Producto1))
                {
                    ChangeTracker.OriginalValues.Remove("Producto1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Producto1", previousValue);
                }
                if (Producto1 != null && !Producto1.ChangeTracker.ChangeTrackingEnabled)
                {
                    Producto1.StartTracking();
                }
            }
        }
    
        private void FixupRamo(Ramo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas.Contains(this))
            {
                previousValue.ProductosMetas.Remove(this);
            }
    
            if (Ramo != null)
            {
                if (!Ramo.ProductosMetas.Contains(this))
                {
                    Ramo.ProductosMetas.Add(this);
                }
    
                ramo_id = Ramo.id;
            }
            else if (!skipKeys)
            {
                ramo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Ramo")
                    && (ChangeTracker.OriginalValues["Ramo"] == Ramo))
                {
                    ChangeTracker.OriginalValues.Remove("Ramo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Ramo", previousValue);
                }
                if (Ramo != null && !Ramo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Ramo.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ProductosMetas.Contains(this))
            {
                previousValue.ProductosMetas.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.ProductosMetas.Contains(this))
                {
                    Compania.ProductosMetas.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }

        #endregion
    }
}
