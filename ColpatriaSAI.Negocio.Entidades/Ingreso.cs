//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    public partial class Ingreso: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public int participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private int _participante_id;
    
        [DataMember]
        public int estadoParticipante_id
        {
            get { return _estadoParticipante_id; }
            set
            {
                if (_estadoParticipante_id != value)
                {
                    _estadoParticipante_id = value;
                    OnPropertyChanged("estadoParticipante_id");
                }
            }
        }
        private int _estadoParticipante_id;
    
        [DataMember]
        public Nullable<System.DateTime> fechaIngreso
        {
            get { return _fechaIngreso; }
            set
            {
                if (_fechaIngreso != value)
                {
                    _fechaIngreso = value;
                    OnPropertyChanged("fechaIngreso");
                }
            }
        }
        private Nullable<System.DateTime> _fechaIngreso;
    
        [DataMember]
        public Nullable<System.DateTime> fechaRetiro
        {
            get { return _fechaRetiro; }
            set
            {
                if (_fechaRetiro != value)
                {
                    _fechaRetiro = value;
                    OnPropertyChanged("fechaRetiro");
                }
            }
        }
        private Nullable<System.DateTime> _fechaRetiro;
    
        [DataMember]
        public Nullable<double> ComisionesCAPI
        {
            get { return _comisionesCAPI; }
            set
            {
                if (_comisionesCAPI != value)
                {
                    _comisionesCAPI = value;
                    OnPropertyChanged("ComisionesCAPI");
                }
            }
        }
        private Nullable<double> _comisionesCAPI;
    
        [DataMember]
        public Nullable<double> ComisionesVIDA
        {
            get { return _comisionesVIDA; }
            set
            {
                if (_comisionesVIDA != value)
                {
                    _comisionesVIDA = value;
                    OnPropertyChanged("ComisionesVIDA");
                }
            }
        }
        private Nullable<double> _comisionesVIDA;
    
        [DataMember]
        public Nullable<double> ComisionesGENERALES
        {
            get { return _comisionesGENERALES; }
            set
            {
                if (_comisionesGENERALES != value)
                {
                    _comisionesGENERALES = value;
                    OnPropertyChanged("ComisionesGENERALES");
                }
            }
        }
        private Nullable<double> _comisionesGENERALES;
    
        [DataMember]
        public Nullable<double> ComisionesORV
        {
            get { return _comisionesORV; }
            set
            {
                if (_comisionesORV != value)
                {
                    _comisionesORV = value;
                    OnPropertyChanged("ComisionesORV");
                }
            }
        }
        private Nullable<double> _comisionesORV;
    
        [DataMember]
        public Nullable<double> ComisionesORG
        {
            get { return _comisionesORG; }
            set
            {
                if (_comisionesORG != value)
                {
                    _comisionesORG = value;
                    OnPropertyChanged("ComisionesORG");
                }
            }
        }
        private Nullable<double> _comisionesORG;
    
        [DataMember]
        public Nullable<double> ComisionesSALUD
        {
            get { return _comisionesSALUD; }
            set
            {
                if (_comisionesSALUD != value)
                {
                    _comisionesSALUD = value;
                    OnPropertyChanged("ComisionesSALUD");
                }
            }
        }
        private Nullable<double> _comisionesSALUD;
    
        [DataMember]
        public Nullable<double> ComisionesSOAT
        {
            get { return _comisionesSOAT; }
            set
            {
                if (_comisionesSOAT != value)
                {
                    _comisionesSOAT = value;
                    OnPropertyChanged("ComisionesSOAT");
                }
            }
        }
        private Nullable<double> _comisionesSOAT;
    
        [DataMember]
        public Nullable<double> TotalComisiones
        {
            get { return _totalComisiones; }
            set
            {
                if (_totalComisiones != value)
                {
                    _totalComisiones = value;
                    OnPropertyChanged("TotalComisiones");
                }
            }
        }
        private Nullable<double> _totalComisiones;
    
        [DataMember]
        public Nullable<System.DateTime> Periodo
        {
            get { return _periodo; }
            set
            {
                if (_periodo != value)
                {
                    _periodo = value;
                    OnPropertyChanged("Periodo");
                }
            }
        }
        private Nullable<System.DateTime> _periodo;
    
        [DataMember]
        public Nullable<double> ComisionesARL
        {
            get { return _comisionesARL; }
            set
            {
                if (_comisionesARL != value)
                {
                    _comisionesARL = value;
                    OnPropertyChanged("ComisionesARL");
                }
            }
        }
        private Nullable<double> _comisionesARL;
    
        [DataMember]
        public Nullable<double> ComisionesEMERMEDICA
        {
            get { return _comisionesEMERMEDICA; }
            set
            {
                if (_comisionesEMERMEDICA != value)
                {
                    _comisionesEMERMEDICA = value;
                    OnPropertyChanged("ComisionesEMERMEDICA");
                }
            }
        }
        private Nullable<double> _comisionesEMERMEDICA;
    
        [DataMember]
        public Nullable<double> ComisionesHYC
        {
            get { return _comisionesHYC; }
            set
            {
                if (_comisionesHYC != value)
                {
                    _comisionesHYC = value;
                    OnPropertyChanged("ComisionesHYC");
                }
            }
        }
        private Nullable<double> _comisionesHYC;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
