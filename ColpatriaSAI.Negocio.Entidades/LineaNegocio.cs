//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Comision))]
    [KnownType(typeof(ConsolidadoMe))]
    [KnownType(typeof(Participacione))]
    [KnownType(typeof(ProductoConcurso))]
    [KnownType(typeof(ProductosMeta))]
    [KnownType(typeof(Negocio))]
    [KnownType(typeof(Recaudo))]
    [KnownType(typeof(Excepcion))]
    [KnownType(typeof(MonedaxNegocio))]
    public partial class LineaNegocio: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string codigoCore
        {
            get { return _codigoCore; }
            set
            {
                if (_codigoCore != value)
                {
                    _codigoCore = value;
                    OnPropertyChanged("codigoCore");
                }
            }
        }
        private string _codigoCore;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Comision> Comisions
        {
            get
            {
                if (_comisions == null)
                {
                    _comisions = new TrackableCollection<Comision>();
                    _comisions.CollectionChanged += FixupComisions;
                }
                return _comisions;
            }
            set
            {
                if (!ReferenceEquals(_comisions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged -= FixupComisions;
                    }
                    _comisions = value;
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged += FixupComisions;
                    }
                    OnNavigationPropertyChanged("Comisions");
                }
            }
        }
        private TrackableCollection<Comision> _comisions;
    
        [DataMember]
        public TrackableCollection<ConsolidadoMe> ConsolidadoMes
        {
            get
            {
                if (_consolidadoMes == null)
                {
                    _consolidadoMes = new TrackableCollection<ConsolidadoMe>();
                    _consolidadoMes.CollectionChanged += FixupConsolidadoMes;
                }
                return _consolidadoMes;
            }
            set
            {
                if (!ReferenceEquals(_consolidadoMes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_consolidadoMes != null)
                    {
                        _consolidadoMes.CollectionChanged -= FixupConsolidadoMes;
                    }
                    _consolidadoMes = value;
                    if (_consolidadoMes != null)
                    {
                        _consolidadoMes.CollectionChanged += FixupConsolidadoMes;
                    }
                    OnNavigationPropertyChanged("ConsolidadoMes");
                }
            }
        }
        private TrackableCollection<ConsolidadoMe> _consolidadoMes;
    
        [DataMember]
        public TrackableCollection<Participacione> Participaciones
        {
            get
            {
                if (_participaciones == null)
                {
                    _participaciones = new TrackableCollection<Participacione>();
                    _participaciones.CollectionChanged += FixupParticipaciones;
                }
                return _participaciones;
            }
            set
            {
                if (!ReferenceEquals(_participaciones, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participaciones != null)
                    {
                        _participaciones.CollectionChanged -= FixupParticipaciones;
                    }
                    _participaciones = value;
                    if (_participaciones != null)
                    {
                        _participaciones.CollectionChanged += FixupParticipaciones;
                    }
                    OnNavigationPropertyChanged("Participaciones");
                }
            }
        }
        private TrackableCollection<Participacione> _participaciones;
    
        [DataMember]
        public TrackableCollection<ProductoConcurso> ProductoConcursoes
        {
            get
            {
                if (_productoConcursoes == null)
                {
                    _productoConcursoes = new TrackableCollection<ProductoConcurso>();
                    _productoConcursoes.CollectionChanged += FixupProductoConcursoes;
                }
                return _productoConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_productoConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productoConcursoes != null)
                    {
                        _productoConcursoes.CollectionChanged -= FixupProductoConcursoes;
                    }
                    _productoConcursoes = value;
                    if (_productoConcursoes != null)
                    {
                        _productoConcursoes.CollectionChanged += FixupProductoConcursoes;
                    }
                    OnNavigationPropertyChanged("ProductoConcursoes");
                }
            }
        }
        private TrackableCollection<ProductoConcurso> _productoConcursoes;
    
        [DataMember]
        public TrackableCollection<ProductosMeta> ProductosMetas
        {
            get
            {
                if (_productosMetas == null)
                {
                    _productosMetas = new TrackableCollection<ProductosMeta>();
                    _productosMetas.CollectionChanged += FixupProductosMetas;
                }
                return _productosMetas;
            }
            set
            {
                if (!ReferenceEquals(_productosMetas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged -= FixupProductosMetas;
                    }
                    _productosMetas = value;
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged += FixupProductosMetas;
                    }
                    OnNavigationPropertyChanged("ProductosMetas");
                }
            }
        }
        private TrackableCollection<ProductosMeta> _productosMetas;
    
        [DataMember]
        public TrackableCollection<Negocio> Negocios
        {
            get
            {
                if (_negocios == null)
                {
                    _negocios = new TrackableCollection<Negocio>();
                    _negocios.CollectionChanged += FixupNegocios;
                }
                return _negocios;
            }
            set
            {
                if (!ReferenceEquals(_negocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged -= FixupNegocios;
                    }
                    _negocios = value;
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged += FixupNegocios;
                    }
                    OnNavigationPropertyChanged("Negocios");
                }
            }
        }
        private TrackableCollection<Negocio> _negocios;
    
        [DataMember]
        public TrackableCollection<Recaudo> Recaudoes
        {
            get
            {
                if (_recaudoes == null)
                {
                    _recaudoes = new TrackableCollection<Recaudo>();
                    _recaudoes.CollectionChanged += FixupRecaudoes;
                }
                return _recaudoes;
            }
            set
            {
                if (!ReferenceEquals(_recaudoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged -= FixupRecaudoes;
                    }
                    _recaudoes = value;
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged += FixupRecaudoes;
                    }
                    OnNavigationPropertyChanged("Recaudoes");
                }
            }
        }
        private TrackableCollection<Recaudo> _recaudoes;
    
        [DataMember]
        public TrackableCollection<Excepcion> Excepcions
        {
            get
            {
                if (_excepcions == null)
                {
                    _excepcions = new TrackableCollection<Excepcion>();
                    _excepcions.CollectionChanged += FixupExcepcions;
                }
                return _excepcions;
            }
            set
            {
                if (!ReferenceEquals(_excepcions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged -= FixupExcepcions;
                    }
                    _excepcions = value;
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged += FixupExcepcions;
                    }
                    OnNavigationPropertyChanged("Excepcions");
                }
            }
        }
        private TrackableCollection<Excepcion> _excepcions;
    
        [DataMember]
        public TrackableCollection<MonedaxNegocio> MonedaxNegocios
        {
            get
            {
                if (_monedaxNegocios == null)
                {
                    _monedaxNegocios = new TrackableCollection<MonedaxNegocio>();
                    _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                }
                return _monedaxNegocios;
            }
            set
            {
                if (!ReferenceEquals(_monedaxNegocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged -= FixupMonedaxNegocios;
                    }
                    _monedaxNegocios = value;
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                    }
                    OnNavigationPropertyChanged("MonedaxNegocios");
                }
            }
        }
        private TrackableCollection<MonedaxNegocio> _monedaxNegocios;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Comisions.Clear();
            ConsolidadoMes.Clear();
            Participaciones.Clear();
            ProductoConcursoes.Clear();
            ProductosMetas.Clear();
            Negocios.Clear();
            Recaudoes.Clear();
            Excepcions.Clear();
            MonedaxNegocios.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupComisions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Comision item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Comisions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comision item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Comisions", item);
                    }
                }
            }
        }
    
        private void FixupConsolidadoMes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ConsolidadoMe item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ConsolidadoMes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ConsolidadoMe item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ConsolidadoMes", item);
                    }
                }
            }
        }
    
        private void FixupParticipaciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Participacione item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Participaciones", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Participacione item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Participaciones", item);
                    }
                }
            }
        }
    
        private void FixupProductoConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductoConcurso item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductoConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductoConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductoConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupProductosMetas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductosMeta item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductosMetas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductosMeta item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductosMetas", item);
                    }
                }
            }
        }
    
        private void FixupNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Negocio item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Negocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Negocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Negocios", item);
                    }
                }
            }
        }
    
        private void FixupRecaudoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Recaudo item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Recaudoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recaudo item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Recaudoes", item);
                    }
                }
            }
        }
    
        private void FixupExcepcions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Excepcion item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Excepcions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Excepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Excepcions", item);
                    }
                }
            }
        }
    
        private void FixupMonedaxNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MonedaxNegocio item in e.NewItems)
                {
                    item.LineaNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MonedaxNegocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.LineaNegocio, this))
                    {
                        item.LineaNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
        }

        #endregion
    }
}
