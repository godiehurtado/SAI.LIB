//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(RangosXNeto))]
    [KnownType(typeof(RangosYNuevo))]
    [KnownType(typeof(ModeloComision))]
    public partial class MatrizComisionVariable: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int modelo_id
        {
            get { return _modelo_id; }
            set
            {
                if (_modelo_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'modelo_id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (ModeloComision != null && ModeloComision.id != value)
                        {
                            ModeloComision = null;
                        }
                    }
                    _modelo_id = value;
                    OnPropertyChanged("modelo_id");
                }
            }
        }
        private int _modelo_id;
    
        [DataMember]
        public int rangoynuevos_id
        {
            get { return _rangoynuevos_id; }
            set
            {
                if (_rangoynuevos_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'rangoynuevos_id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (RangosYNuevo != null && RangosYNuevo.id != value)
                        {
                            RangosYNuevo = null;
                        }
                    }
                    _rangoynuevos_id = value;
                    OnPropertyChanged("rangoynuevos_id");
                }
            }
        }
        private int _rangoynuevos_id;
    
        [DataMember]
        public int rangoxnetos_id
        {
            get { return _rangoxnetos_id; }
            set
            {
                if (_rangoxnetos_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'rangoxnetos_id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    if (!IsDeserializing)
                    {
                        if (RangosXNeto != null && RangosXNeto.id != value)
                        {
                            RangosXNeto = null;
                        }
                    }
                    _rangoxnetos_id = value;
                    OnPropertyChanged("rangoxnetos_id");
                }
            }
        }
        private int _rangoxnetos_id;
    
        [DataMember]
        public double factor
        {
            get { return _factor; }
            set
            {
                if (_factor != value)
                {
                    _factor = value;
                    OnPropertyChanged("factor");
                }
            }
        }
        private double _factor;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public RangosXNeto RangosXNeto
        {
            get { return _rangosXNeto; }
            set
            {
                if (!ReferenceEquals(_rangosXNeto, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (rangoxnetos_id != value.id)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _rangosXNeto;
                    _rangosXNeto = value;
                    FixupRangosXNeto(previousValue);
                    OnNavigationPropertyChanged("RangosXNeto");
                }
            }
        }
        private RangosXNeto _rangosXNeto;
    
        [DataMember]
        public RangosYNuevo RangosYNuevo
        {
            get { return _rangosYNuevo; }
            set
            {
                if (!ReferenceEquals(_rangosYNuevo, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (rangoynuevos_id != value.id)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _rangosYNuevo;
                    _rangosYNuevo = value;
                    FixupRangosYNuevo(previousValue);
                    OnNavigationPropertyChanged("RangosYNuevo");
                }
            }
        }
        private RangosYNuevo _rangosYNuevo;
    
        [DataMember]
        public ModeloComision ModeloComision
        {
            get { return _modeloComision; }
            set
            {
                if (!ReferenceEquals(_modeloComision, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added && value != null)
                    {
                        // This the dependent end of an identifying relationship, so the principal end cannot be changed if it is already set,
                        // otherwise it can only be set to an entity with a primary key that is the same value as the dependent's foreign key.
                        if (modelo_id != value.id)
                        {
                            throw new InvalidOperationException("The principal end of an identifying relationship can only be changed when the dependent end is in the Added state.");
                        }
                    }
                    var previousValue = _modeloComision;
                    _modeloComision = value;
                    FixupModeloComision(previousValue);
                    OnNavigationPropertyChanged("ModeloComision");
                }
            }
        }
        private ModeloComision _modeloComision;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            RangosXNeto = null;
            RangosYNuevo = null;
            ModeloComision = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupRangosXNeto(RangosXNeto previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MatrizComisionVariables.Contains(this))
            {
                previousValue.MatrizComisionVariables.Remove(this);
            }
    
            if (RangosXNeto != null)
            {
                if (!RangosXNeto.MatrizComisionVariables.Contains(this))
                {
                    RangosXNeto.MatrizComisionVariables.Add(this);
                }
    
                rangoxnetos_id = RangosXNeto.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RangosXNeto")
                    && (ChangeTracker.OriginalValues["RangosXNeto"] == RangosXNeto))
                {
                    ChangeTracker.OriginalValues.Remove("RangosXNeto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RangosXNeto", previousValue);
                }
                if (RangosXNeto != null && !RangosXNeto.ChangeTracker.ChangeTrackingEnabled)
                {
                    RangosXNeto.StartTracking();
                }
            }
        }
    
        private void FixupRangosYNuevo(RangosYNuevo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MatrizComisionVariables.Contains(this))
            {
                previousValue.MatrizComisionVariables.Remove(this);
            }
    
            if (RangosYNuevo != null)
            {
                if (!RangosYNuevo.MatrizComisionVariables.Contains(this))
                {
                    RangosYNuevo.MatrizComisionVariables.Add(this);
                }
    
                rangoynuevos_id = RangosYNuevo.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RangosYNuevo")
                    && (ChangeTracker.OriginalValues["RangosYNuevo"] == RangosYNuevo))
                {
                    ChangeTracker.OriginalValues.Remove("RangosYNuevo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RangosYNuevo", previousValue);
                }
                if (RangosYNuevo != null && !RangosYNuevo.ChangeTracker.ChangeTrackingEnabled)
                {
                    RangosYNuevo.StartTracking();
                }
            }
        }
    
        private void FixupModeloComision(ModeloComision previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MatrizComisionVariables.Contains(this))
            {
                previousValue.MatrizComisionVariables.Remove(this);
            }
    
            if (ModeloComision != null)
            {
                if (!ModeloComision.MatrizComisionVariables.Contains(this))
                {
                    ModeloComision.MatrizComisionVariables.Add(this);
                }
    
                modelo_id = ModeloComision.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ModeloComision")
                    && (ChangeTracker.OriginalValues["ModeloComision"] == ModeloComision))
                {
                    ChangeTracker.OriginalValues.Remove("ModeloComision");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ModeloComision", previousValue);
                }
                if (ModeloComision != null && !ModeloComision.ChangeTracker.ChangeTrackingEnabled)
                {
                    ModeloComision.StartTracking();
                }
            }
        }

        #endregion
    }
}
