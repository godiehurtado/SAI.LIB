//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(TopeMoneda))]
    [KnownType(typeof(Moneda))]
    [KnownType(typeof(TopexEdad))]
    [KnownType(typeof(MonedaxNegocio))]
    public partial class MaestroMonedaxNegocio: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> moneda_id
        {
            get { return _moneda_id; }
            set
            {
                if (_moneda_id != value)
                {
                    ChangeTracker.RecordOriginalValue("moneda_id", _moneda_id);
                    if (!IsDeserializing)
                    {
                        if (Moneda != null && Moneda.id != value)
                        {
                            Moneda = null;
                        }
                    }
                    _moneda_id = value;
                    OnPropertyChanged("moneda_id");
                }
            }
        }
        private Nullable<int> _moneda_id;
    
        [DataMember]
        public Nullable<System.DateTime> fecha_inicial
        {
            get { return _fecha_inicial; }
            set
            {
                if (_fecha_inicial != value)
                {
                    _fecha_inicial = value;
                    OnPropertyChanged("fecha_inicial");
                }
            }
        }
        private Nullable<System.DateTime> _fecha_inicial;
    
        [DataMember]
        public Nullable<System.DateTime> fecha_final
        {
            get { return _fecha_final; }
            set
            {
                if (_fecha_final != value)
                {
                    _fecha_final = value;
                    OnPropertyChanged("fecha_final");
                }
            }
        }
        private Nullable<System.DateTime> _fecha_final;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<TopeMoneda> TopeMonedas
        {
            get
            {
                if (_topeMonedas == null)
                {
                    _topeMonedas = new TrackableCollection<TopeMoneda>();
                    _topeMonedas.CollectionChanged += FixupTopeMonedas;
                }
                return _topeMonedas;
            }
            set
            {
                if (!ReferenceEquals(_topeMonedas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_topeMonedas != null)
                    {
                        _topeMonedas.CollectionChanged -= FixupTopeMonedas;
                    }
                    _topeMonedas = value;
                    if (_topeMonedas != null)
                    {
                        _topeMonedas.CollectionChanged += FixupTopeMonedas;
                    }
                    OnNavigationPropertyChanged("TopeMonedas");
                }
            }
        }
        private TrackableCollection<TopeMoneda> _topeMonedas;
    
        [DataMember]
        public Moneda Moneda
        {
            get { return _moneda; }
            set
            {
                if (!ReferenceEquals(_moneda, value))
                {
                    var previousValue = _moneda;
                    _moneda = value;
                    FixupMoneda(previousValue);
                    OnNavigationPropertyChanged("Moneda");
                }
            }
        }
        private Moneda _moneda;
    
        [DataMember]
        public TrackableCollection<TopexEdad> TopexEdads
        {
            get
            {
                if (_topexEdads == null)
                {
                    _topexEdads = new TrackableCollection<TopexEdad>();
                    _topexEdads.CollectionChanged += FixupTopexEdads;
                }
                return _topexEdads;
            }
            set
            {
                if (!ReferenceEquals(_topexEdads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_topexEdads != null)
                    {
                        _topexEdads.CollectionChanged -= FixupTopexEdads;
                    }
                    _topexEdads = value;
                    if (_topexEdads != null)
                    {
                        _topexEdads.CollectionChanged += FixupTopexEdads;
                    }
                    OnNavigationPropertyChanged("TopexEdads");
                }
            }
        }
        private TrackableCollection<TopexEdad> _topexEdads;
    
        [DataMember]
        public TrackableCollection<MonedaxNegocio> MonedaxNegocios
        {
            get
            {
                if (_monedaxNegocios == null)
                {
                    _monedaxNegocios = new TrackableCollection<MonedaxNegocio>();
                    _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                }
                return _monedaxNegocios;
            }
            set
            {
                if (!ReferenceEquals(_monedaxNegocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged -= FixupMonedaxNegocios;
                    }
                    _monedaxNegocios = value;
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                    }
                    OnNavigationPropertyChanged("MonedaxNegocios");
                }
            }
        }
        private TrackableCollection<MonedaxNegocio> _monedaxNegocios;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            TopeMonedas.Clear();
            Moneda = null;
            TopexEdads.Clear();
            MonedaxNegocios.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupMoneda(Moneda previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MaestroMonedaxNegocios.Contains(this))
            {
                previousValue.MaestroMonedaxNegocios.Remove(this);
            }
    
            if (Moneda != null)
            {
                if (!Moneda.MaestroMonedaxNegocios.Contains(this))
                {
                    Moneda.MaestroMonedaxNegocios.Add(this);
                }
    
                moneda_id = Moneda.id;
            }
            else if (!skipKeys)
            {
                moneda_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Moneda")
                    && (ChangeTracker.OriginalValues["Moneda"] == Moneda))
                {
                    ChangeTracker.OriginalValues.Remove("Moneda");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Moneda", previousValue);
                }
                if (Moneda != null && !Moneda.ChangeTracker.ChangeTrackingEnabled)
                {
                    Moneda.StartTracking();
                }
            }
        }
    
        private void FixupTopeMonedas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TopeMoneda item in e.NewItems)
                {
                    item.MaestroMonedaxNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TopeMonedas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TopeMoneda item in e.OldItems)
                {
                    if (ReferenceEquals(item.MaestroMonedaxNegocio, this))
                    {
                        item.MaestroMonedaxNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TopeMonedas", item);
                    }
                }
            }
        }
    
        private void FixupTopexEdads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TopexEdad item in e.NewItems)
                {
                    item.MaestroMonedaxNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TopexEdads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TopexEdad item in e.OldItems)
                {
                    if (ReferenceEquals(item.MaestroMonedaxNegocio, this))
                    {
                        item.MaestroMonedaxNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TopexEdads", item);
                    }
                }
            }
        }
    
        private void FixupMonedaxNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MonedaxNegocio item in e.NewItems)
                {
                    item.MaestroMonedaxNegocio = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MonedaxNegocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.MaestroMonedaxNegocio, this))
                    {
                        item.MaestroMonedaxNegocio = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
        }

        #endregion
    }
}
