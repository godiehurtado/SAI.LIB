//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AnticipoFranquicia))]
    [KnownType(typeof(Comision))]
    [KnownType(typeof(ConsolidadoMe))]
    [KnownType(typeof(IngresoLocalidad))]
    [KnownType(typeof(TipoLocalidad))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(ModeloxNodo))]
    [KnownType(typeof(ParticipacionFranquicia))]
    [KnownType(typeof(ParticipanteConcurso))]
    [KnownType(typeof(JerarquiaDetalle))]
    [KnownType(typeof(Negocio))]
    [KnownType(typeof(Recaudo))]
    [KnownType(typeof(PersistenciadeCAPIDetalle))]
    [KnownType(typeof(Excepcion))]
    [KnownType(typeof(MonedaxNegocio))]
    [KnownType(typeof(Participante))]
    public partial class Localidad: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> tipo_localidad_id
        {
            get { return _tipo_localidad_id; }
            set
            {
                if (_tipo_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipo_localidad_id", _tipo_localidad_id);
                    if (!IsDeserializing)
                    {
                        if (TipoLocalidad != null && TipoLocalidad.id != value)
                        {
                            TipoLocalidad = null;
                        }
                    }
                    _tipo_localidad_id = value;
                    OnPropertyChanged("tipo_localidad_id");
                }
            }
        }
        private Nullable<int> _tipo_localidad_id;
    
        [DataMember]
        public string codigo_SISE
        {
            get { return _codigo_SISE; }
            set
            {
                if (_codigo_SISE != value)
                {
                    _codigo_SISE = value;
                    OnPropertyChanged("codigo_SISE");
                }
            }
        }
        private string _codigo_SISE;
    
        [DataMember]
        public Nullable<int> codigo_CAPI
        {
            get { return _codigo_CAPI; }
            set
            {
                if (_codigo_CAPI != value)
                {
                    _codigo_CAPI = value;
                    OnPropertyChanged("codigo_CAPI");
                }
            }
        }
        private Nullable<int> _codigo_CAPI;
    
        [DataMember]
        public string codigo_BH
        {
            get { return _codigo_BH; }
            set
            {
                if (_codigo_BH != value)
                {
                    _codigo_BH = value;
                    OnPropertyChanged("codigo_BH");
                }
            }
        }
        private string _codigo_BH;
    
        [DataMember]
        public string codigo_EMERMEDICA
        {
            get { return _codigo_EMERMEDICA; }
            set
            {
                if (_codigo_EMERMEDICA != value)
                {
                    _codigo_EMERMEDICA = value;
                    OnPropertyChanged("codigo_EMERMEDICA");
                }
            }
        }
        private string _codigo_EMERMEDICA;
    
        [DataMember]
        public string codigo_ARP
        {
            get { return _codigo_ARP; }
            set
            {
                if (_codigo_ARP != value)
                {
                    _codigo_ARP = value;
                    OnPropertyChanged("codigo_ARP");
                }
            }
        }
        private string _codigo_ARP;
    
        [DataMember]
        public string clavePago
        {
            get { return _clavePago; }
            set
            {
                if (_clavePago != value)
                {
                    _clavePago = value;
                    OnPropertyChanged("clavePago");
                }
            }
        }
        private string _clavePago;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AnticipoFranquicia> AnticipoFranquicias
        {
            get
            {
                if (_anticipoFranquicias == null)
                {
                    _anticipoFranquicias = new TrackableCollection<AnticipoFranquicia>();
                    _anticipoFranquicias.CollectionChanged += FixupAnticipoFranquicias;
                }
                return _anticipoFranquicias;
            }
            set
            {
                if (!ReferenceEquals(_anticipoFranquicias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_anticipoFranquicias != null)
                    {
                        _anticipoFranquicias.CollectionChanged -= FixupAnticipoFranquicias;
                    }
                    _anticipoFranquicias = value;
                    if (_anticipoFranquicias != null)
                    {
                        _anticipoFranquicias.CollectionChanged += FixupAnticipoFranquicias;
                    }
                    OnNavigationPropertyChanged("AnticipoFranquicias");
                }
            }
        }
        private TrackableCollection<AnticipoFranquicia> _anticipoFranquicias;
    
        [DataMember]
        public TrackableCollection<Comision> Comisions
        {
            get
            {
                if (_comisions == null)
                {
                    _comisions = new TrackableCollection<Comision>();
                    _comisions.CollectionChanged += FixupComisions;
                }
                return _comisions;
            }
            set
            {
                if (!ReferenceEquals(_comisions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged -= FixupComisions;
                    }
                    _comisions = value;
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged += FixupComisions;
                    }
                    OnNavigationPropertyChanged("Comisions");
                }
            }
        }
        private TrackableCollection<Comision> _comisions;
    
        [DataMember]
        public TrackableCollection<ConsolidadoMe> ConsolidadoMes
        {
            get
            {
                if (_consolidadoMes == null)
                {
                    _consolidadoMes = new TrackableCollection<ConsolidadoMe>();
                    _consolidadoMes.CollectionChanged += FixupConsolidadoMes;
                }
                return _consolidadoMes;
            }
            set
            {
                if (!ReferenceEquals(_consolidadoMes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_consolidadoMes != null)
                    {
                        _consolidadoMes.CollectionChanged -= FixupConsolidadoMes;
                    }
                    _consolidadoMes = value;
                    if (_consolidadoMes != null)
                    {
                        _consolidadoMes.CollectionChanged += FixupConsolidadoMes;
                    }
                    OnNavigationPropertyChanged("ConsolidadoMes");
                }
            }
        }
        private TrackableCollection<ConsolidadoMe> _consolidadoMes;
    
        [DataMember]
        public TrackableCollection<IngresoLocalidad> IngresoLocalidads
        {
            get
            {
                if (_ingresoLocalidads == null)
                {
                    _ingresoLocalidads = new TrackableCollection<IngresoLocalidad>();
                    _ingresoLocalidads.CollectionChanged += FixupIngresoLocalidads;
                }
                return _ingresoLocalidads;
            }
            set
            {
                if (!ReferenceEquals(_ingresoLocalidads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ingresoLocalidads != null)
                    {
                        _ingresoLocalidads.CollectionChanged -= FixupIngresoLocalidads;
                    }
                    _ingresoLocalidads = value;
                    if (_ingresoLocalidads != null)
                    {
                        _ingresoLocalidads.CollectionChanged += FixupIngresoLocalidads;
                    }
                    OnNavigationPropertyChanged("IngresoLocalidads");
                }
            }
        }
        private TrackableCollection<IngresoLocalidad> _ingresoLocalidads;
    
        [DataMember]
        public TipoLocalidad TipoLocalidad
        {
            get { return _tipoLocalidad; }
            set
            {
                if (!ReferenceEquals(_tipoLocalidad, value))
                {
                    var previousValue = _tipoLocalidad;
                    _tipoLocalidad = value;
                    FixupTipoLocalidad(previousValue);
                    OnNavigationPropertyChanged("TipoLocalidad");
                }
            }
        }
        private TipoLocalidad _tipoLocalidad;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public TrackableCollection<ModeloxNodo> ModeloxNodoes
        {
            get
            {
                if (_modeloxNodoes == null)
                {
                    _modeloxNodoes = new TrackableCollection<ModeloxNodo>();
                    _modeloxNodoes.CollectionChanged += FixupModeloxNodoes;
                }
                return _modeloxNodoes;
            }
            set
            {
                if (!ReferenceEquals(_modeloxNodoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_modeloxNodoes != null)
                    {
                        _modeloxNodoes.CollectionChanged -= FixupModeloxNodoes;
                    }
                    _modeloxNodoes = value;
                    if (_modeloxNodoes != null)
                    {
                        _modeloxNodoes.CollectionChanged += FixupModeloxNodoes;
                    }
                    OnNavigationPropertyChanged("ModeloxNodoes");
                }
            }
        }
        private TrackableCollection<ModeloxNodo> _modeloxNodoes;
    
        [DataMember]
        public TrackableCollection<ParticipacionFranquicia> ParticipacionFranquicias
        {
            get
            {
                if (_participacionFranquicias == null)
                {
                    _participacionFranquicias = new TrackableCollection<ParticipacionFranquicia>();
                    _participacionFranquicias.CollectionChanged += FixupParticipacionFranquicias;
                }
                return _participacionFranquicias;
            }
            set
            {
                if (!ReferenceEquals(_participacionFranquicias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participacionFranquicias != null)
                    {
                        _participacionFranquicias.CollectionChanged -= FixupParticipacionFranquicias;
                    }
                    _participacionFranquicias = value;
                    if (_participacionFranquicias != null)
                    {
                        _participacionFranquicias.CollectionChanged += FixupParticipacionFranquicias;
                    }
                    OnNavigationPropertyChanged("ParticipacionFranquicias");
                }
            }
        }
        private TrackableCollection<ParticipacionFranquicia> _participacionFranquicias;
    
        [DataMember]
        public TrackableCollection<ParticipanteConcurso> ParticipanteConcursoes
        {
            get
            {
                if (_participanteConcursoes == null)
                {
                    _participanteConcursoes = new TrackableCollection<ParticipanteConcurso>();
                    _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                }
                return _participanteConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_participanteConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged -= FixupParticipanteConcursoes;
                    }
                    _participanteConcursoes = value;
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                    }
                    OnNavigationPropertyChanged("ParticipanteConcursoes");
                }
            }
        }
        private TrackableCollection<ParticipanteConcurso> _participanteConcursoes;
    
        [DataMember]
        public TrackableCollection<JerarquiaDetalle> JerarquiaDetalles
        {
            get
            {
                if (_jerarquiaDetalles == null)
                {
                    _jerarquiaDetalles = new TrackableCollection<JerarquiaDetalle>();
                    _jerarquiaDetalles.CollectionChanged += FixupJerarquiaDetalles;
                }
                return _jerarquiaDetalles;
            }
            set
            {
                if (!ReferenceEquals(_jerarquiaDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_jerarquiaDetalles != null)
                    {
                        _jerarquiaDetalles.CollectionChanged -= FixupJerarquiaDetalles;
                    }
                    _jerarquiaDetalles = value;
                    if (_jerarquiaDetalles != null)
                    {
                        _jerarquiaDetalles.CollectionChanged += FixupJerarquiaDetalles;
                    }
                    OnNavigationPropertyChanged("JerarquiaDetalles");
                }
            }
        }
        private TrackableCollection<JerarquiaDetalle> _jerarquiaDetalles;
    
        [DataMember]
        public TrackableCollection<Negocio> Negocios
        {
            get
            {
                if (_negocios == null)
                {
                    _negocios = new TrackableCollection<Negocio>();
                    _negocios.CollectionChanged += FixupNegocios;
                }
                return _negocios;
            }
            set
            {
                if (!ReferenceEquals(_negocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged -= FixupNegocios;
                    }
                    _negocios = value;
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged += FixupNegocios;
                    }
                    OnNavigationPropertyChanged("Negocios");
                }
            }
        }
        private TrackableCollection<Negocio> _negocios;
    
        [DataMember]
        public TrackableCollection<Recaudo> Recaudoes
        {
            get
            {
                if (_recaudoes == null)
                {
                    _recaudoes = new TrackableCollection<Recaudo>();
                    _recaudoes.CollectionChanged += FixupRecaudoes;
                }
                return _recaudoes;
            }
            set
            {
                if (!ReferenceEquals(_recaudoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged -= FixupRecaudoes;
                    }
                    _recaudoes = value;
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged += FixupRecaudoes;
                    }
                    OnNavigationPropertyChanged("Recaudoes");
                }
            }
        }
        private TrackableCollection<Recaudo> _recaudoes;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIDetalle> PersistenciadeCAPIDetalles
        {
            get
            {
                if (_persistenciadeCAPIDetalles == null)
                {
                    _persistenciadeCAPIDetalles = new TrackableCollection<PersistenciadeCAPIDetalle>();
                    _persistenciadeCAPIDetalles.CollectionChanged += FixupPersistenciadeCAPIDetalles;
                }
                return _persistenciadeCAPIDetalles;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIDetalles != null)
                    {
                        _persistenciadeCAPIDetalles.CollectionChanged -= FixupPersistenciadeCAPIDetalles;
                    }
                    _persistenciadeCAPIDetalles = value;
                    if (_persistenciadeCAPIDetalles != null)
                    {
                        _persistenciadeCAPIDetalles.CollectionChanged += FixupPersistenciadeCAPIDetalles;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIDetalles");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIDetalle> _persistenciadeCAPIDetalles;
    
        [DataMember]
        public TrackableCollection<Excepcion> Excepcions
        {
            get
            {
                if (_excepcions == null)
                {
                    _excepcions = new TrackableCollection<Excepcion>();
                    _excepcions.CollectionChanged += FixupExcepcions;
                }
                return _excepcions;
            }
            set
            {
                if (!ReferenceEquals(_excepcions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged -= FixupExcepcions;
                    }
                    _excepcions = value;
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged += FixupExcepcions;
                    }
                    OnNavigationPropertyChanged("Excepcions");
                }
            }
        }
        private TrackableCollection<Excepcion> _excepcions;
    
        [DataMember]
        public TrackableCollection<Excepcion> Excepcions1
        {
            get
            {
                if (_excepcions1 == null)
                {
                    _excepcions1 = new TrackableCollection<Excepcion>();
                    _excepcions1.CollectionChanged += FixupExcepcions1;
                }
                return _excepcions1;
            }
            set
            {
                if (!ReferenceEquals(_excepcions1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcions1 != null)
                    {
                        _excepcions1.CollectionChanged -= FixupExcepcions1;
                    }
                    _excepcions1 = value;
                    if (_excepcions1 != null)
                    {
                        _excepcions1.CollectionChanged += FixupExcepcions1;
                    }
                    OnNavigationPropertyChanged("Excepcions1");
                }
            }
        }
        private TrackableCollection<Excepcion> _excepcions1;
    
        [DataMember]
        public TrackableCollection<MonedaxNegocio> MonedaxNegocios
        {
            get
            {
                if (_monedaxNegocios == null)
                {
                    _monedaxNegocios = new TrackableCollection<MonedaxNegocio>();
                    _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                }
                return _monedaxNegocios;
            }
            set
            {
                if (!ReferenceEquals(_monedaxNegocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged -= FixupMonedaxNegocios;
                    }
                    _monedaxNegocios = value;
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                    }
                    OnNavigationPropertyChanged("MonedaxNegocios");
                }
            }
        }
        private TrackableCollection<MonedaxNegocio> _monedaxNegocios;
    
        [DataMember]
        public TrackableCollection<Participante> Participantes
        {
            get
            {
                if (_participantes == null)
                {
                    _participantes = new TrackableCollection<Participante>();
                    _participantes.CollectionChanged += FixupParticipantes;
                }
                return _participantes;
            }
            set
            {
                if (!ReferenceEquals(_participantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged -= FixupParticipantes;
                    }
                    _participantes = value;
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged += FixupParticipantes;
                    }
                    OnNavigationPropertyChanged("Participantes");
                }
            }
        }
        private TrackableCollection<Participante> _participantes;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AnticipoFranquicias.Clear();
            Comisions.Clear();
            ConsolidadoMes.Clear();
            IngresoLocalidads.Clear();
            TipoLocalidad = null;
            Zona = null;
            ModeloxNodoes.Clear();
            ParticipacionFranquicias.Clear();
            ParticipanteConcursoes.Clear();
            JerarquiaDetalles.Clear();
            Negocios.Clear();
            Recaudoes.Clear();
            PersistenciadeCAPIDetalles.Clear();
            Excepcions.Clear();
            Excepcions1.Clear();
            MonedaxNegocios.Clear();
            Participantes.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupTipoLocalidad(TipoLocalidad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Localidads.Contains(this))
            {
                previousValue.Localidads.Remove(this);
            }
    
            if (TipoLocalidad != null)
            {
                if (!TipoLocalidad.Localidads.Contains(this))
                {
                    TipoLocalidad.Localidads.Add(this);
                }
    
                tipo_localidad_id = TipoLocalidad.id;
            }
            else if (!skipKeys)
            {
                tipo_localidad_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoLocalidad")
                    && (ChangeTracker.OriginalValues["TipoLocalidad"] == TipoLocalidad))
                {
                    ChangeTracker.OriginalValues.Remove("TipoLocalidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoLocalidad", previousValue);
                }
                if (TipoLocalidad != null && !TipoLocalidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoLocalidad.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Localidads.Contains(this))
            {
                previousValue.Localidads.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.Localidads.Contains(this))
                {
                    Zona.Localidads.Add(this);
                }
    
                zona_id = Zona.id;
            }
            else if (!skipKeys)
            {
                zona_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupAnticipoFranquicias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AnticipoFranquicia item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AnticipoFranquicias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnticipoFranquicia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AnticipoFranquicias", item);
                    }
                }
            }
        }
    
        private void FixupComisions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Comision item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Comisions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comision item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Comisions", item);
                    }
                }
            }
        }
    
        private void FixupConsolidadoMes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ConsolidadoMe item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ConsolidadoMes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ConsolidadoMe item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ConsolidadoMes", item);
                    }
                }
            }
        }
    
        private void FixupIngresoLocalidads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (IngresoLocalidad item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("IngresoLocalidads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (IngresoLocalidad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("IngresoLocalidads", item);
                    }
                }
            }
        }
    
        private void FixupModeloxNodoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ModeloxNodo item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ModeloxNodoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ModeloxNodo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ModeloxNodoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipacionFranquicias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipacionFranquicia item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipacionFranquicias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipacionFranquicia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipacionFranquicias", item);
                    }
                }
            }
        }
    
        private void FixupParticipanteConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipanteConcurso item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipanteConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupJerarquiaDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JerarquiaDetalle item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JerarquiaDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JerarquiaDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JerarquiaDetalles", item);
                    }
                }
            }
        }
    
        private void FixupNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Negocio item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Negocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Negocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Negocios", item);
                    }
                }
            }
        }
    
        private void FixupRecaudoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Recaudo item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Recaudoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recaudo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Recaudoes", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIDetalle item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIDetalles", item);
                    }
                }
            }
        }
    
        private void FixupExcepcions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Excepcion item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Excepcions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Excepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Excepcions", item);
                    }
                }
            }
        }
    
        private void FixupExcepcions1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Excepcion item in e.NewItems)
                {
                    item.Localidad1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Excepcions1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Excepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad1, this))
                    {
                        item.Localidad1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Excepcions1", item);
                    }
                }
            }
        }
    
        private void FixupMonedaxNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MonedaxNegocio item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MonedaxNegocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
        }
    
        private void FixupParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Participante item in e.NewItems)
                {
                    item.Localidad = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Participantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Participante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Localidad, this))
                    {
                        item.Localidad = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Participantes", item);
                    }
                }
            }
        }

        #endregion
    }
}
