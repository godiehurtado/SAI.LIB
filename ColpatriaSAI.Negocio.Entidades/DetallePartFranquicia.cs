//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Amparo))]
    [KnownType(typeof(ParticipacionFranquicia))]
    [KnownType(typeof(Plan))]
    [KnownType(typeof(Producto))]
    [KnownType(typeof(Ramo))]
    [KnownType(typeof(TipoVehiculo))]
    [KnownType(typeof(Compania))]
    public partial class DetallePartFranquicia: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> part_franquicia_id
        {
            get { return _part_franquicia_id; }
            set
            {
                if (_part_franquicia_id != value)
                {
                    ChangeTracker.RecordOriginalValue("part_franquicia_id", _part_franquicia_id);
                    if (!IsDeserializing)
                    {
                        if (ParticipacionFranquicia != null && ParticipacionFranquicia.id != value)
                        {
                            ParticipacionFranquicia = null;
                        }
                    }
                    _part_franquicia_id = value;
                    OnPropertyChanged("part_franquicia_id");
                }
            }
        }
        private Nullable<int> _part_franquicia_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramo_id", _ramo_id);
                    if (!IsDeserializing)
                    {
                        if (Ramo != null && Ramo.id != value)
                        {
                            Ramo = null;
                        }
                    }
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public Nullable<int> producto_id
        {
            get { return _producto_id; }
            set
            {
                if (_producto_id != value)
                {
                    ChangeTracker.RecordOriginalValue("producto_id", _producto_id);
                    if (!IsDeserializing)
                    {
                        if (Producto != null && Producto.id != value)
                        {
                            Producto = null;
                        }
                    }
                    _producto_id = value;
                    OnPropertyChanged("producto_id");
                }
            }
        }
        private Nullable<int> _producto_id;
    
        [DataMember]
        public Nullable<double> porcentaje
        {
            get { return _porcentaje; }
            set
            {
                if (_porcentaje != value)
                {
                    _porcentaje = value;
                    OnPropertyChanged("porcentaje");
                }
            }
        }
        private Nullable<double> _porcentaje;
    
        [DataMember]
        public Nullable<double> rangoinferior
        {
            get { return _rangoinferior; }
            set
            {
                if (_rangoinferior != value)
                {
                    _rangoinferior = value;
                    OnPropertyChanged("rangoinferior");
                }
            }
        }
        private Nullable<double> _rangoinferior;
    
        [DataMember]
        public Nullable<double> rangosuperior
        {
            get { return _rangosuperior; }
            set
            {
                if (_rangosuperior != value)
                {
                    _rangosuperior = value;
                    OnPropertyChanged("rangosuperior");
                }
            }
        }
        private Nullable<double> _rangosuperior;
    
        [DataMember]
        public Nullable<int> plan_id
        {
            get { return _plan_id; }
            set
            {
                if (_plan_id != value)
                {
                    ChangeTracker.RecordOriginalValue("plan_id", _plan_id);
                    if (!IsDeserializing)
                    {
                        if (Plan != null && Plan.id != value)
                        {
                            Plan = null;
                        }
                    }
                    _plan_id = value;
                    OnPropertyChanged("plan_id");
                }
            }
        }
        private Nullable<int> _plan_id;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public int tipoVehiculo_id
        {
            get { return _tipoVehiculo_id; }
            set
            {
                if (_tipoVehiculo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoVehiculo_id", _tipoVehiculo_id);
                    if (!IsDeserializing)
                    {
                        if (TipoVehiculo != null && TipoVehiculo.id != value)
                        {
                            TipoVehiculo = null;
                        }
                    }
                    _tipoVehiculo_id = value;
                    OnPropertyChanged("tipoVehiculo_id");
                }
            }
        }
        private int _tipoVehiculo_id;
    
        [DataMember]
        public Nullable<int> amparo_id
        {
            get { return _amparo_id; }
            set
            {
                if (_amparo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("amparo_id", _amparo_id);
                    if (!IsDeserializing)
                    {
                        if (Amparo != null && Amparo.id != value)
                        {
                            Amparo = null;
                        }
                    }
                    _amparo_id = value;
                    OnPropertyChanged("amparo_id");
                }
            }
        }
        private Nullable<int> _amparo_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Amparo Amparo
        {
            get { return _amparo; }
            set
            {
                if (!ReferenceEquals(_amparo, value))
                {
                    var previousValue = _amparo;
                    _amparo = value;
                    FixupAmparo(previousValue);
                    OnNavigationPropertyChanged("Amparo");
                }
            }
        }
        private Amparo _amparo;
    
        [DataMember]
        public ParticipacionFranquicia ParticipacionFranquicia
        {
            get { return _participacionFranquicia; }
            set
            {
                if (!ReferenceEquals(_participacionFranquicia, value))
                {
                    var previousValue = _participacionFranquicia;
                    _participacionFranquicia = value;
                    FixupParticipacionFranquicia(previousValue);
                    OnNavigationPropertyChanged("ParticipacionFranquicia");
                }
            }
        }
        private ParticipacionFranquicia _participacionFranquicia;
    
        [DataMember]
        public Plan Plan
        {
            get { return _plan; }
            set
            {
                if (!ReferenceEquals(_plan, value))
                {
                    var previousValue = _plan;
                    _plan = value;
                    FixupPlan(previousValue);
                    OnNavigationPropertyChanged("Plan");
                }
            }
        }
        private Plan _plan;
    
        [DataMember]
        public Producto Producto
        {
            get { return _producto; }
            set
            {
                if (!ReferenceEquals(_producto, value))
                {
                    var previousValue = _producto;
                    _producto = value;
                    FixupProducto(previousValue);
                    OnNavigationPropertyChanged("Producto");
                }
            }
        }
        private Producto _producto;
    
        [DataMember]
        public Ramo Ramo
        {
            get { return _ramo; }
            set
            {
                if (!ReferenceEquals(_ramo, value))
                {
                    var previousValue = _ramo;
                    _ramo = value;
                    FixupRamo(previousValue);
                    OnNavigationPropertyChanged("Ramo");
                }
            }
        }
        private Ramo _ramo;
    
        [DataMember]
        public TipoVehiculo TipoVehiculo
        {
            get { return _tipoVehiculo; }
            set
            {
                if (!ReferenceEquals(_tipoVehiculo, value))
                {
                    var previousValue = _tipoVehiculo;
                    _tipoVehiculo = value;
                    FixupTipoVehiculo(previousValue);
                    OnNavigationPropertyChanged("TipoVehiculo");
                }
            }
        }
        private TipoVehiculo _tipoVehiculo;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Amparo = null;
            ParticipacionFranquicia = null;
            Plan = null;
            Producto = null;
            Ramo = null;
            TipoVehiculo = null;
            Compania = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupAmparo(Amparo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePartFranquicias.Contains(this))
            {
                previousValue.DetallePartFranquicias.Remove(this);
            }
    
            if (Amparo != null)
            {
                if (!Amparo.DetallePartFranquicias.Contains(this))
                {
                    Amparo.DetallePartFranquicias.Add(this);
                }
    
                amparo_id = Amparo.id;
            }
            else if (!skipKeys)
            {
                amparo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Amparo")
                    && (ChangeTracker.OriginalValues["Amparo"] == Amparo))
                {
                    ChangeTracker.OriginalValues.Remove("Amparo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Amparo", previousValue);
                }
                if (Amparo != null && !Amparo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Amparo.StartTracking();
                }
            }
        }
    
        private void FixupParticipacionFranquicia(ParticipacionFranquicia previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePartFranquicias.Contains(this))
            {
                previousValue.DetallePartFranquicias.Remove(this);
            }
    
            if (ParticipacionFranquicia != null)
            {
                if (!ParticipacionFranquicia.DetallePartFranquicias.Contains(this))
                {
                    ParticipacionFranquicia.DetallePartFranquicias.Add(this);
                }
    
                part_franquicia_id = ParticipacionFranquicia.id;
            }
            else if (!skipKeys)
            {
                part_franquicia_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ParticipacionFranquicia")
                    && (ChangeTracker.OriginalValues["ParticipacionFranquicia"] == ParticipacionFranquicia))
                {
                    ChangeTracker.OriginalValues.Remove("ParticipacionFranquicia");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ParticipacionFranquicia", previousValue);
                }
                if (ParticipacionFranquicia != null && !ParticipacionFranquicia.ChangeTracker.ChangeTrackingEnabled)
                {
                    ParticipacionFranquicia.StartTracking();
                }
            }
        }
    
        private void FixupPlan(Plan previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePartFranquicias.Contains(this))
            {
                previousValue.DetallePartFranquicias.Remove(this);
            }
    
            if (Plan != null)
            {
                if (!Plan.DetallePartFranquicias.Contains(this))
                {
                    Plan.DetallePartFranquicias.Add(this);
                }
    
                plan_id = Plan.id;
            }
            else if (!skipKeys)
            {
                plan_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Plan")
                    && (ChangeTracker.OriginalValues["Plan"] == Plan))
                {
                    ChangeTracker.OriginalValues.Remove("Plan");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Plan", previousValue);
                }
                if (Plan != null && !Plan.ChangeTracker.ChangeTrackingEnabled)
                {
                    Plan.StartTracking();
                }
            }
        }
    
        private void FixupProducto(Producto previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePartFranquicias.Contains(this))
            {
                previousValue.DetallePartFranquicias.Remove(this);
            }
    
            if (Producto != null)
            {
                if (!Producto.DetallePartFranquicias.Contains(this))
                {
                    Producto.DetallePartFranquicias.Add(this);
                }
    
                producto_id = Producto.id;
            }
            else if (!skipKeys)
            {
                producto_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Producto")
                    && (ChangeTracker.OriginalValues["Producto"] == Producto))
                {
                    ChangeTracker.OriginalValues.Remove("Producto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Producto", previousValue);
                }
                if (Producto != null && !Producto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Producto.StartTracking();
                }
            }
        }
    
        private void FixupRamo(Ramo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePartFranquicias.Contains(this))
            {
                previousValue.DetallePartFranquicias.Remove(this);
            }
    
            if (Ramo != null)
            {
                if (!Ramo.DetallePartFranquicias.Contains(this))
                {
                    Ramo.DetallePartFranquicias.Add(this);
                }
    
                ramo_id = Ramo.id;
            }
            else if (!skipKeys)
            {
                ramo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Ramo")
                    && (ChangeTracker.OriginalValues["Ramo"] == Ramo))
                {
                    ChangeTracker.OriginalValues.Remove("Ramo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Ramo", previousValue);
                }
                if (Ramo != null && !Ramo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Ramo.StartTracking();
                }
            }
        }
    
        private void FixupTipoVehiculo(TipoVehiculo previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePartFranquicias.Contains(this))
            {
                previousValue.DetallePartFranquicias.Remove(this);
            }
    
            if (TipoVehiculo != null)
            {
                if (!TipoVehiculo.DetallePartFranquicias.Contains(this))
                {
                    TipoVehiculo.DetallePartFranquicias.Add(this);
                }
    
                tipoVehiculo_id = TipoVehiculo.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoVehiculo")
                    && (ChangeTracker.OriginalValues["TipoVehiculo"] == TipoVehiculo))
                {
                    ChangeTracker.OriginalValues.Remove("TipoVehiculo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoVehiculo", previousValue);
                }
                if (TipoVehiculo != null && !TipoVehiculo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoVehiculo.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePartFranquicias.Contains(this))
            {
                previousValue.DetallePartFranquicias.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.DetallePartFranquicias.Contains(this))
                {
                    Compania.DetallePartFranquicias.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }

        #endregion
    }
}
