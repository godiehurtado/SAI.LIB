//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    
    public partial class TraerRecaudosPorFranquicias_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnComplexPropertyChanging();
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> red_id
        {
            get { return _red_id; }
            set
            {
                if (_red_id != value)
                {
                    OnComplexPropertyChanging();
                    _red_id = value;
                    OnPropertyChanged("red_id");
                }
            }
        }
        private Nullable<int> _red_id;
    
        [DataMember]
        public Nullable<double> valor
        {
            get { return _valor; }
            set
            {
                if (_valor != value)
                {
                    OnComplexPropertyChanging();
                    _valor = value;
                    OnPropertyChanged("valor");
                }
            }
        }
        private Nullable<double> _valor;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    OnComplexPropertyChanging();
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    OnComplexPropertyChanging();
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    OnComplexPropertyChanging();
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public Nullable<int> amparo_id
        {
            get { return _amparo_id; }
            set
            {
                if (_amparo_id != value)
                {
                    OnComplexPropertyChanging();
                    _amparo_id = value;
                    OnPropertyChanged("amparo_id");
                }
            }
        }
        private Nullable<int> _amparo_id;
    
        [DataMember]
        public Nullable<int> cobertura_id
        {
            get { return _cobertura_id; }
            set
            {
                if (_cobertura_id != value)
                {
                    OnComplexPropertyChanging();
                    _cobertura_id = value;
                    OnPropertyChanged("cobertura_id");
                }
            }
        }
        private Nullable<int> _cobertura_id;
    
        [DataMember]
        public Nullable<int> modalidadpago_id
        {
            get { return _modalidadpago_id; }
            set
            {
                if (_modalidadpago_id != value)
                {
                    OnComplexPropertyChanging();
                    _modalidadpago_id = value;
                    OnPropertyChanged("modalidadpago_id");
                }
            }
        }
        private Nullable<int> _modalidadpago_id;
    
        [DataMember]
        public Nullable<int> producto_id
        {
            get { return _producto_id; }
            set
            {
                if (_producto_id != value)
                {
                    OnComplexPropertyChanging();
                    _producto_id = value;
                    OnPropertyChanged("producto_id");
                }
            }
        }
        private Nullable<int> _producto_id;
    
        [DataMember]
        public Nullable<int> plan_id
        {
            get { return _plan_id; }
            set
            {
                if (_plan_id != value)
                {
                    OnComplexPropertyChanging();
                    _plan_id = value;
                    OnPropertyChanged("plan_id");
                }
            }
        }
        private Nullable<int> _plan_id;
    
        [DataMember]
        public Nullable<int> tipoRecaudo_id
        {
            get { return _tipoRecaudo_id; }
            set
            {
                if (_tipoRecaudo_id != value)
                {
                    OnComplexPropertyChanging();
                    _tipoRecaudo_id = value;
                    OnPropertyChanged("tipoRecaudo_id");
                }
            }
        }
        private Nullable<int> _tipoRecaudo_id;
    
        [DataMember]
        public Nullable<int> formaPago_id
        {
            get { return _formaPago_id; }
            set
            {
                if (_formaPago_id != value)
                {
                    OnComplexPropertyChanging();
                    _formaPago_id = value;
                    OnPropertyChanged("formaPago_id");
                }
            }
        }
        private Nullable<int> _formaPago_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    OnComplexPropertyChanging();
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    OnComplexPropertyChanging();
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    OnComplexPropertyChanging();
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private Nullable<int> _participante_id;
    
        [DataMember]
        public string clave
        {
            get { return _clave; }
            set
            {
                if (_clave != value)
                {
                    OnComplexPropertyChanging();
                    _clave = value;
                    OnPropertyChanged("clave");
                }
            }
        }
        private string _clave;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    OnComplexPropertyChanging();
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public Nullable<System.DateTime> fecharecaudo
        {
            get { return _fecharecaudo; }
            set
            {
                if (_fecharecaudo != value)
                {
                    OnComplexPropertyChanging();
                    _fecharecaudo = value;
                    OnPropertyChanged("fecharecaudo");
                }
            }
        }
        private Nullable<System.DateTime> _fecharecaudo;
    
        [DataMember]
        public Nullable<System.DateTime> fechaGrabacion
        {
            get { return _fechaGrabacion; }
            set
            {
                if (_fechaGrabacion != value)
                {
                    OnComplexPropertyChanging();
                    _fechaGrabacion = value;
                    OnPropertyChanged("fechaGrabacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaGrabacion;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCobranza
        {
            get { return _fechaCobranza; }
            set
            {
                if (_fechaCobranza != value)
                {
                    OnComplexPropertyChanging();
                    _fechaCobranza = value;
                    OnPropertyChanged("fechaCobranza");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCobranza;
    
        [DataMember]
        public Nullable<double> valorRecaudo
        {
            get { return _valorRecaudo; }
            set
            {
                if (_valorRecaudo != value)
                {
                    OnComplexPropertyChanging();
                    _valorRecaudo = value;
                    OnPropertyChanged("valorRecaudo");
                }
            }
        }
        private Nullable<double> _valorRecaudo;
    
        [DataMember]
        public string numeroRecibo
        {
            get { return _numeroRecibo; }
            set
            {
                if (_numeroRecibo != value)
                {
                    OnComplexPropertyChanging();
                    _numeroRecibo = value;
                    OnPropertyChanged("numeroRecibo");
                }
            }
        }
        private string _numeroRecibo;
    
        [DataMember]
        public Nullable<int> periodoFacturado
        {
            get { return _periodoFacturado; }
            set
            {
                if (_periodoFacturado != value)
                {
                    OnComplexPropertyChanging();
                    _periodoFacturado = value;
                    OnPropertyChanged("periodoFacturado");
                }
            }
        }
        private Nullable<int> _periodoFacturado;
    
        [DataMember]
        public Nullable<int> Altura
        {
            get { return _altura; }
            set
            {
                if (_altura != value)
                {
                    OnComplexPropertyChanging();
                    _altura = value;
                    OnPropertyChanged("Altura");
                }
            }
        }
        private Nullable<int> _altura;
    
        [DataMember]
        public Nullable<double> porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    OnComplexPropertyChanging();
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private Nullable<double> _porcentajeParticipacion;
    
        [DataMember]
        public string Concepto
        {
            get { return _concepto; }
            set
            {
                if (_concepto != value)
                {
                    OnComplexPropertyChanging();
                    _concepto = value;
                    OnPropertyChanged("Concepto");
                }
            }
        }
        private string _concepto;
    
        [DataMember]
        public Nullable<double> porcentajeAhorro_Inversion
        {
            get { return _porcentajeAhorro_Inversion; }
            set
            {
                if (_porcentajeAhorro_Inversion != value)
                {
                    OnComplexPropertyChanging();
                    _porcentajeAhorro_Inversion = value;
                    OnPropertyChanged("porcentajeAhorro_Inversion");
                }
            }
        }
        private Nullable<double> _porcentajeAhorro_Inversion;
    
        [DataMember]
        public string codigoOcupacion
        {
            get { return _codigoOcupacion; }
            set
            {
                if (_codigoOcupacion != value)
                {
                    OnComplexPropertyChanging();
                    _codigoOcupacion = value;
                    OnPropertyChanged("codigoOcupacion");
                }
            }
        }
        private string _codigoOcupacion;
    
        [DataMember]
        public string sistema
        {
            get { return _sistema; }
            set
            {
                if (_sistema != value)
                {
                    OnComplexPropertyChanging();
                    _sistema = value;
                    OnPropertyChanged("sistema");
                }
            }
        }
        private string _sistema;
    
        [DataMember]
        public Nullable<int> codigoBanco
        {
            get { return _codigoBanco; }
            set
            {
                if (_codigoBanco != value)
                {
                    OnComplexPropertyChanging();
                    _codigoBanco = value;
                    OnPropertyChanged("codigoBanco");
                }
            }
        }
        private Nullable<int> _codigoBanco;
    
        [DataMember]
        public Nullable<int> tipoVehiculo
        {
            get { return _tipoVehiculo; }
            set
            {
                if (_tipoVehiculo != value)
                {
                    OnComplexPropertyChanging();
                    _tipoVehiculo = value;
                    OnPropertyChanged("tipoVehiculo");
                }
            }
        }
        private Nullable<int> _tipoVehiculo;

        #endregion
        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, TraerRecaudosPorFranquicias_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.id", parentPropertyName), complexObject == null ? null : (object)complexObject.id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.red_id", parentPropertyName), complexObject == null ? null : (object)complexObject.red_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.valor", parentPropertyName), complexObject == null ? null : (object)complexObject.valor);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.compania_id", parentPropertyName), complexObject == null ? null : (object)complexObject.compania_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.lineaNegocio_id", parentPropertyName), complexObject == null ? null : (object)complexObject.lineaNegocio_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ramo_id", parentPropertyName), complexObject == null ? null : (object)complexObject.ramo_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.amparo_id", parentPropertyName), complexObject == null ? null : (object)complexObject.amparo_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.cobertura_id", parentPropertyName), complexObject == null ? null : (object)complexObject.cobertura_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.modalidadpago_id", parentPropertyName), complexObject == null ? null : (object)complexObject.modalidadpago_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.producto_id", parentPropertyName), complexObject == null ? null : (object)complexObject.producto_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.plan_id", parentPropertyName), complexObject == null ? null : (object)complexObject.plan_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tipoRecaudo_id", parentPropertyName), complexObject == null ? null : (object)complexObject.tipoRecaudo_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.formaPago_id", parentPropertyName), complexObject == null ? null : (object)complexObject.formaPago_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.zona_id", parentPropertyName), complexObject == null ? null : (object)complexObject.zona_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.localidad_id", parentPropertyName), complexObject == null ? null : (object)complexObject.localidad_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.participante_id", parentPropertyName), complexObject == null ? null : (object)complexObject.participante_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.clave", parentPropertyName), complexObject == null ? null : (object)complexObject.clave);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.numeroNegocio", parentPropertyName), complexObject == null ? null : (object)complexObject.numeroNegocio);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fecharecaudo", parentPropertyName), complexObject == null ? null : (object)complexObject.fecharecaudo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fechaGrabacion", parentPropertyName), complexObject == null ? null : (object)complexObject.fechaGrabacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fechaCobranza", parentPropertyName), complexObject == null ? null : (object)complexObject.fechaCobranza);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.valorRecaudo", parentPropertyName), complexObject == null ? null : (object)complexObject.valorRecaudo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.numeroRecibo", parentPropertyName), complexObject == null ? null : (object)complexObject.numeroRecibo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.periodoFacturado", parentPropertyName), complexObject == null ? null : (object)complexObject.periodoFacturado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Altura", parentPropertyName), complexObject == null ? null : (object)complexObject.Altura);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.porcentajeParticipacion", parentPropertyName), complexObject == null ? null : (object)complexObject.porcentajeParticipacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Concepto", parentPropertyName), complexObject == null ? null : (object)complexObject.Concepto);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.porcentajeAhorro_Inversion", parentPropertyName), complexObject == null ? null : (object)complexObject.porcentajeAhorro_Inversion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.codigoOcupacion", parentPropertyName), complexObject == null ? null : (object)complexObject.codigoOcupacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.sistema", parentPropertyName), complexObject == null ? null : (object)complexObject.sistema);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.codigoBanco", parentPropertyName), complexObject == null ? null : (object)complexObject.codigoBanco);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tipoVehiculo", parentPropertyName), complexObject == null ? null : (object)complexObject.tipoVehiculo);
        }

        #endregion
    }
}
