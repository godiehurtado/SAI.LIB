//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Meta))]
    [KnownType(typeof(Presupuesto))]
    public partial class DetallePresupuesto: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<System.DateTime> fechaIni
        {
            get { return _fechaIni; }
            set
            {
                if (_fechaIni != value)
                {
                    _fechaIni = value;
                    OnPropertyChanged("fechaIni");
                }
            }
        }
        private Nullable<System.DateTime> _fechaIni;
    
        [DataMember]
        public Nullable<System.DateTime> fechaFin
        {
            get { return _fechaFin; }
            set
            {
                if (_fechaFin != value)
                {
                    _fechaFin = value;
                    OnPropertyChanged("fechaFin");
                }
            }
        }
        private Nullable<System.DateTime> _fechaFin;
    
        [DataMember]
        public Nullable<double> valor
        {
            get { return _valor; }
            set
            {
                if (_valor != value)
                {
                    _valor = value;
                    OnPropertyChanged("valor");
                }
            }
        }
        private Nullable<double> _valor;
    
        [DataMember]
        public Nullable<int> meta_id
        {
            get { return _meta_id; }
            set
            {
                if (_meta_id != value)
                {
                    ChangeTracker.RecordOriginalValue("meta_id", _meta_id);
                    if (!IsDeserializing)
                    {
                        if (Meta != null && Meta.id != value)
                        {
                            Meta = null;
                        }
                    }
                    _meta_id = value;
                    OnPropertyChanged("meta_id");
                }
            }
        }
        private Nullable<int> _meta_id;
    
        [DataMember]
        public Nullable<int> presupuesto_id
        {
            get { return _presupuesto_id; }
            set
            {
                if (_presupuesto_id != value)
                {
                    ChangeTracker.RecordOriginalValue("presupuesto_id", _presupuesto_id);
                    if (!IsDeserializing)
                    {
                        if (Presupuesto != null && Presupuesto.id != value)
                        {
                            Presupuesto = null;
                        }
                    }
                    _presupuesto_id = value;
                    OnPropertyChanged("presupuesto_id");
                }
            }
        }
        private Nullable<int> _presupuesto_id;
    
        [DataMember]
        public Nullable<int> jerarquiaDetalle_id
        {
            get { return _jerarquiaDetalle_id; }
            set
            {
                if (_jerarquiaDetalle_id != value)
                {
                    _jerarquiaDetalle_id = value;
                    OnPropertyChanged("jerarquiaDetalle_id");
                }
            }
        }
        private Nullable<int> _jerarquiaDetalle_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Meta Meta
        {
            get { return _meta; }
            set
            {
                if (!ReferenceEquals(_meta, value))
                {
                    var previousValue = _meta;
                    _meta = value;
                    FixupMeta(previousValue);
                    OnNavigationPropertyChanged("Meta");
                }
            }
        }
        private Meta _meta;
    
        [DataMember]
        public Presupuesto Presupuesto
        {
            get { return _presupuesto; }
            set
            {
                if (!ReferenceEquals(_presupuesto, value))
                {
                    var previousValue = _presupuesto;
                    _presupuesto = value;
                    FixupPresupuesto(previousValue);
                    OnNavigationPropertyChanged("Presupuesto");
                }
            }
        }
        private Presupuesto _presupuesto;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Meta = null;
            Presupuesto = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupMeta(Meta previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePresupuestoes.Contains(this))
            {
                previousValue.DetallePresupuestoes.Remove(this);
            }
    
            if (Meta != null)
            {
                if (!Meta.DetallePresupuestoes.Contains(this))
                {
                    Meta.DetallePresupuestoes.Add(this);
                }
    
                meta_id = Meta.id;
            }
            else if (!skipKeys)
            {
                meta_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Meta")
                    && (ChangeTracker.OriginalValues["Meta"] == Meta))
                {
                    ChangeTracker.OriginalValues.Remove("Meta");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Meta", previousValue);
                }
                if (Meta != null && !Meta.ChangeTracker.ChangeTrackingEnabled)
                {
                    Meta.StartTracking();
                }
            }
        }
    
        private void FixupPresupuesto(Presupuesto previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetallePresupuestoes.Contains(this))
            {
                previousValue.DetallePresupuestoes.Remove(this);
            }
    
            if (Presupuesto != null)
            {
                if (!Presupuesto.DetallePresupuestoes.Contains(this))
                {
                    Presupuesto.DetallePresupuestoes.Add(this);
                }
    
                presupuesto_id = Presupuesto.id;
            }
            else if (!skipKeys)
            {
                presupuesto_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Presupuesto")
                    && (ChangeTracker.OriginalValues["Presupuesto"] == Presupuesto))
                {
                    ChangeTracker.OriginalValues.Remove("Presupuesto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Presupuesto", previousValue);
                }
                if (Presupuesto != null && !Presupuesto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Presupuesto.StartTracking();
                }
            }
        }

        #endregion
    }
}
