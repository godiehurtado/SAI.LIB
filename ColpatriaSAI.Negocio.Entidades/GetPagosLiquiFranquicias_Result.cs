//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    
    public partial class GetPagosLiquiFranquicias_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    OnComplexPropertyChanging();
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public string claveParticipante
        {
            get { return _claveParticipante; }
            set
            {
                if (_claveParticipante != value)
                {
                    OnComplexPropertyChanging();
                    _claveParticipante = value;
                    OnPropertyChanged("claveParticipante");
                }
            }
        }
        private string _claveParticipante;
    
        [DataMember]
        public Nullable<int> tipoDocumento_id
        {
            get { return _tipoDocumento_id; }
            set
            {
                if (_tipoDocumento_id != value)
                {
                    OnComplexPropertyChanging();
                    _tipoDocumento_id = value;
                    OnPropertyChanged("tipoDocumento_id");
                }
            }
        }
        private Nullable<int> _tipoDocumento_id;
    
        [DataMember]
        public string documento
        {
            get { return _documento; }
            set
            {
                if (_documento != value)
                {
                    OnComplexPropertyChanging();
                    _documento = value;
                    OnPropertyChanged("documento");
                }
            }
        }
        private string _documento;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    OnComplexPropertyChanging();
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public string ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    OnComplexPropertyChanging();
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private string _ramo_id;
    
        [DataMember]
        public System.DateTime fechaRecaudo
        {
            get { return _fechaRecaudo; }
            set
            {
                if (_fechaRecaudo != value)
                {
                    OnComplexPropertyChanging();
                    _fechaRecaudo = value;
                    OnPropertyChanged("fechaRecaudo");
                }
            }
        }
        private System.DateTime _fechaRecaudo;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    OnComplexPropertyChanging();
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<double> totalParticipacion
        {
            get { return _totalParticipacion; }
            set
            {
                if (_totalParticipacion != value)
                {
                    OnComplexPropertyChanging();
                    _totalParticipacion = value;
                    OnPropertyChanged("totalParticipacion");
                }
            }
        }
        private Nullable<double> _totalParticipacion;
    
        [DataMember]
        public string porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    OnComplexPropertyChanging();
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private string _porcentajeParticipacion;
    
        [DataMember]
        public string porcentajeComision
        {
            get { return _porcentajeComision; }
            set
            {
                if (_porcentajeComision != value)
                {
                    OnComplexPropertyChanging();
                    _porcentajeComision = value;
                    OnPropertyChanged("porcentajeComision");
                }
            }
        }
        private string _porcentajeComision;
    
        [DataMember]
        public Nullable<int> liquidacionFranquicia_id
        {
            get { return _liquidacionFranquicia_id; }
            set
            {
                if (_liquidacionFranquicia_id != value)
                {
                    OnComplexPropertyChanging();
                    _liquidacionFranquicia_id = value;
                    OnPropertyChanged("liquidacionFranquicia_id");
                }
            }
        }
        private Nullable<int> _liquidacionFranquicia_id;
    
        [DataMember]
        public string codigoFranquicias
        {
            get { return _codigoFranquicias; }
            set
            {
                if (_codigoFranquicias != value)
                {
                    OnComplexPropertyChanging();
                    _codigoFranquicias = value;
                    OnPropertyChanged("codigoFranquicias");
                }
            }
        }
        private string _codigoFranquicias;
    
        [DataMember]
        public string descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    OnComplexPropertyChanging();
                    _descripcion = value;
                    OnPropertyChanged("descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    OnComplexPropertyChanging();
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;

        #endregion
        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, GetPagosLiquiFranquicias_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.compania_id", parentPropertyName), complexObject == null ? null : (object)complexObject.compania_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.claveParticipante", parentPropertyName), complexObject == null ? null : (object)complexObject.claveParticipante);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tipoDocumento_id", parentPropertyName), complexObject == null ? null : (object)complexObject.tipoDocumento_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.documento", parentPropertyName), complexObject == null ? null : (object)complexObject.documento);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.numeroNegocio", parentPropertyName), complexObject == null ? null : (object)complexObject.numeroNegocio);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ramo_id", parentPropertyName), complexObject == null ? null : (object)complexObject.ramo_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fechaRecaudo", parentPropertyName), complexObject == null ? null : (object)complexObject.fechaRecaudo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.localidad_id", parentPropertyName), complexObject == null ? null : (object)complexObject.localidad_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.totalParticipacion", parentPropertyName), complexObject == null ? null : (object)complexObject.totalParticipacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.porcentajeParticipacion", parentPropertyName), complexObject == null ? null : (object)complexObject.porcentajeParticipacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.porcentajeComision", parentPropertyName), complexObject == null ? null : (object)complexObject.porcentajeComision);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.liquidacionFranquicia_id", parentPropertyName), complexObject == null ? null : (object)complexObject.liquidacionFranquicia_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.codigoFranquicias", parentPropertyName), complexObject == null ? null : (object)complexObject.codigoFranquicias);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.descripcion", parentPropertyName), complexObject == null ? null : (object)complexObject.descripcion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nombre", parentPropertyName), complexObject == null ? null : (object)complexObject.nombre);
        }

        #endregion
    }
}
