//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(LiquidacionFranquicia))]
    public partial class DetalleLiquidacionFranquicia: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private long _id;
    
        [DataMember]
        public Nullable<double> porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private Nullable<double> _porcentajeParticipacion;
    
        [DataMember]
        public Nullable<double> totalParticipacion
        {
            get { return _totalParticipacion; }
            set
            {
                if (_totalParticipacion != value)
                {
                    _totalParticipacion = value;
                    OnPropertyChanged("totalParticipacion");
                }
            }
        }
        private Nullable<double> _totalParticipacion;
    
        [DataMember]
        public Nullable<int> liquidacionFranquicia_id
        {
            get { return _liquidacionFranquicia_id; }
            set
            {
                if (_liquidacionFranquicia_id != value)
                {
                    ChangeTracker.RecordOriginalValue("liquidacionFranquicia_id", _liquidacionFranquicia_id);
                    if (!IsDeserializing)
                    {
                        if (LiquidacionFranquicia != null && LiquidacionFranquicia.id != value)
                        {
                            LiquidacionFranquicia = null;
                        }
                    }
                    _liquidacionFranquicia_id = value;
                    OnPropertyChanged("liquidacionFranquicia_id");
                }
            }
        }
        private Nullable<int> _liquidacionFranquicia_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public Nullable<int> producto_id
        {
            get { return _producto_id; }
            set
            {
                if (_producto_id != value)
                {
                    _producto_id = value;
                    OnPropertyChanged("producto_id");
                }
            }
        }
        private Nullable<int> _producto_id;
    
        [DataMember]
        public Nullable<double> valorRecaudo
        {
            get { return _valorRecaudo; }
            set
            {
                if (_valorRecaudo != value)
                {
                    _valorRecaudo = value;
                    OnPropertyChanged("valorRecaudo");
                }
            }
        }
        private Nullable<double> _valorRecaudo;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public string nivelDirector
        {
            get { return _nivelDirector; }
            set
            {
                if (_nivelDirector != value)
                {
                    _nivelDirector = value;
                    OnPropertyChanged("nivelDirector");
                }
            }
        }
        private string _nivelDirector;
    
        [DataMember]
        public string claveParticipante
        {
            get { return _claveParticipante; }
            set
            {
                if (_claveParticipante != value)
                {
                    _claveParticipante = value;
                    OnPropertyChanged("claveParticipante");
                }
            }
        }
        private string _claveParticipante;
    
        [DataMember]
        public int modalidadPagoId
        {
            get { return _modalidadPagoId; }
            set
            {
                if (_modalidadPagoId != value)
                {
                    _modalidadPagoId = value;
                    OnPropertyChanged("modalidadPagoId");
                }
            }
        }
        private int _modalidadPagoId;
    
        [DataMember]
        public string numeroRecibo
        {
            get { return _numeroRecibo; }
            set
            {
                if (_numeroRecibo != value)
                {
                    _numeroRecibo = value;
                    OnPropertyChanged("numeroRecibo");
                }
            }
        }
        private string _numeroRecibo;
    
        [DataMember]
        public System.DateTime fechaRecaudo
        {
            get { return _fechaRecaudo; }
            set
            {
                if (_fechaRecaudo != value)
                {
                    _fechaRecaudo = value;
                    OnPropertyChanged("fechaRecaudo");
                }
            }
        }
        private System.DateTime _fechaRecaudo;
    
        [DataMember]
        public Nullable<System.DateTime> fechaContabl
        {
            get { return _fechaContabl; }
            set
            {
                if (_fechaContabl != value)
                {
                    _fechaContabl = value;
                    OnPropertyChanged("fechaContabl");
                }
            }
        }
        private Nullable<System.DateTime> _fechaContabl;
    
        [DataMember]
        public Nullable<int> amparo_Id
        {
            get { return _amparo_Id; }
            set
            {
                if (_amparo_Id != value)
                {
                    _amparo_Id = value;
                    OnPropertyChanged("amparo_Id");
                }
            }
        }
        private Nullable<int> _amparo_Id;
    
        [DataMember]
        public Nullable<double> colquines
        {
            get { return _colquines; }
            set
            {
                if (_colquines != value)
                {
                    _colquines = value;
                    OnPropertyChanged("colquines");
                }
            }
        }
        private Nullable<double> _colquines;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public string codigo_agrupador
        {
            get { return _codigo_agrupador; }
            set
            {
                if (_codigo_agrupador != value)
                {
                    _codigo_agrupador = value;
                    OnPropertyChanged("codigo_agrupador");
                }
            }
        }
        private string _codigo_agrupador;
    
        [DataMember]
        public string tipoVehiculo
        {
            get { return _tipoVehiculo; }
            set
            {
                if (_tipoVehiculo != value)
                {
                    _tipoVehiculo = value;
                    OnPropertyChanged("tipoVehiculo");
                }
            }
        }
        private string _tipoVehiculo;
    
        [DataMember]
        public Nullable<int> liquidadoPor
        {
            get { return _liquidadoPor; }
            set
            {
                if (_liquidadoPor != value)
                {
                    _liquidadoPor = value;
                    OnPropertyChanged("liquidadoPor");
                }
            }
        }
        private Nullable<int> _liquidadoPor;
    
        [DataMember]
        public Nullable<int> ramo_id_agrupado
        {
            get { return _ramo_id_agrupado; }
            set
            {
                if (_ramo_id_agrupado != value)
                {
                    _ramo_id_agrupado = value;
                    OnPropertyChanged("ramo_id_agrupado");
                }
            }
        }
        private Nullable<int> _ramo_id_agrupado;
    
        [DataMember]
        public Nullable<int> producto_id_agrupado
        {
            get { return _producto_id_agrupado; }
            set
            {
                if (_producto_id_agrupado != value)
                {
                    _producto_id_agrupado = value;
                    OnPropertyChanged("producto_id_agrupado");
                }
            }
        }
        private Nullable<int> _producto_id_agrupado;
    
        [DataMember]
        public string concepto
        {
            get { return _concepto; }
            set
            {
                if (_concepto != value)
                {
                    _concepto = value;
                    OnPropertyChanged("concepto");
                }
            }
        }
        private string _concepto;
    
        [DataMember]
        public Nullable<int> altura
        {
            get { return _altura; }
            set
            {
                if (_altura != value)
                {
                    _altura = value;
                    OnPropertyChanged("altura");
                }
            }
        }
        private Nullable<int> _altura;
    
        [DataMember]
        public Nullable<int> segmento_id
        {
            get { return _segmento_id; }
            set
            {
                if (_segmento_id != value)
                {
                    _segmento_id = value;
                    OnPropertyChanged("segmento_id");
                }
            }
        }
        private Nullable<int> _segmento_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public LiquidacionFranquicia LiquidacionFranquicia
        {
            get { return _liquidacionFranquicia; }
            set
            {
                if (!ReferenceEquals(_liquidacionFranquicia, value))
                {
                    var previousValue = _liquidacionFranquicia;
                    _liquidacionFranquicia = value;
                    FixupLiquidacionFranquicia(previousValue);
                    OnNavigationPropertyChanged("LiquidacionFranquicia");
                }
            }
        }
        private LiquidacionFranquicia _liquidacionFranquicia;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            LiquidacionFranquicia = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupLiquidacionFranquicia(LiquidacionFranquicia previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DetalleLiquidacionFranquicias.Contains(this))
            {
                previousValue.DetalleLiquidacionFranquicias.Remove(this);
            }
    
            if (LiquidacionFranquicia != null)
            {
                if (!LiquidacionFranquicia.DetalleLiquidacionFranquicias.Contains(this))
                {
                    LiquidacionFranquicia.DetalleLiquidacionFranquicias.Add(this);
                }
    
                liquidacionFranquicia_id = LiquidacionFranquicia.id;
            }
            else if (!skipKeys)
            {
                liquidacionFranquicia_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LiquidacionFranquicia")
                    && (ChangeTracker.OriginalValues["LiquidacionFranquicia"] == LiquidacionFranquicia))
                {
                    ChangeTracker.OriginalValues.Remove("LiquidacionFranquicia");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LiquidacionFranquicia", previousValue);
                }
                if (LiquidacionFranquicia != null && !LiquidacionFranquicia.ChangeTracker.ChangeTrackingEnabled)
                {
                    LiquidacionFranquicia.StartTracking();
                }
            }
        }

        #endregion
    }
}
