//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Compania))]
    [KnownType(typeof(TipoContrato))]
    [KnownType(typeof(PlanDetalle))]
    [KnownType(typeof(ProductoDetalle))]
    [KnownType(typeof(RamoDetalle))]
    [KnownType(typeof(ModeloComision))]
    public partial class FactorComisionFija: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public int compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private int _compania_id;
    
        [DataMember]
        public byte tipocontrato_id
        {
            get { return _tipocontrato_id; }
            set
            {
                if (_tipocontrato_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipocontrato_id", _tipocontrato_id);
                    if (!IsDeserializing)
                    {
                        if (TipoContrato != null && TipoContrato.id != value)
                        {
                            TipoContrato = null;
                        }
                    }
                    _tipocontrato_id = value;
                    OnPropertyChanged("tipocontrato_id");
                }
            }
        }
        private byte _tipocontrato_id;
    
        [DataMember]
        public int modelo_id
        {
            get { return _modelo_id; }
            set
            {
                if (_modelo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("modelo_id", _modelo_id);
                    if (!IsDeserializing)
                    {
                        if (ModeloComision != null && ModeloComision.id != value)
                        {
                            ModeloComision = null;
                        }
                    }
                    _modelo_id = value;
                    OnPropertyChanged("modelo_id");
                }
            }
        }
        private int _modelo_id;
    
        [DataMember]
        public int edadminima
        {
            get { return _edadminima; }
            set
            {
                if (_edadminima != value)
                {
                    _edadminima = value;
                    OnPropertyChanged("edadminima");
                }
            }
        }
        private int _edadminima;
    
        [DataMember]
        public int edadmaxima
        {
            get { return _edadmaxima; }
            set
            {
                if (_edadmaxima != value)
                {
                    _edadmaxima = value;
                    OnPropertyChanged("edadmaxima");
                }
            }
        }
        private int _edadmaxima;
    
        [DataMember]
        public double factor
        {
            get { return _factor; }
            set
            {
                if (_factor != value)
                {
                    _factor = value;
                    OnPropertyChanged("factor");
                }
            }
        }
        private double _factor;
    
        [DataMember]
        public int ramoDetalle_id
        {
            get { return _ramoDetalle_id; }
            set
            {
                if (_ramoDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramoDetalle_id", _ramoDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (RamoDetalle != null && RamoDetalle.id != value)
                        {
                            RamoDetalle = null;
                        }
                    }
                    _ramoDetalle_id = value;
                    OnPropertyChanged("ramoDetalle_id");
                }
            }
        }
        private int _ramoDetalle_id;
    
        [DataMember]
        public Nullable<int> productoDetalle_id
        {
            get { return _productoDetalle_id; }
            set
            {
                if (_productoDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("productoDetalle_id", _productoDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (ProductoDetalle != null && ProductoDetalle.id != value)
                        {
                            ProductoDetalle = null;
                        }
                    }
                    _productoDetalle_id = value;
                    OnPropertyChanged("productoDetalle_id");
                }
            }
        }
        private Nullable<int> _productoDetalle_id;
    
        [DataMember]
        public Nullable<int> planDetalle_id
        {
            get { return _planDetalle_id; }
            set
            {
                if (_planDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("planDetalle_id", _planDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (PlanDetalle != null && PlanDetalle.id != value)
                        {
                            PlanDetalle = null;
                        }
                    }
                    _planDetalle_id = value;
                    OnPropertyChanged("planDetalle_id");
                }
            }
        }
        private Nullable<int> _planDetalle_id;
    
        [DataMember]
        public Nullable<int> estadoBeneficiario_id
        {
            get { return _estadoBeneficiario_id; }
            set
            {
                if (_estadoBeneficiario_id != value)
                {
                    _estadoBeneficiario_id = value;
                    OnPropertyChanged("estadoBeneficiario_id");
                }
            }
        }
        private Nullable<int> _estadoBeneficiario_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;
    
        [DataMember]
        public TipoContrato TipoContrato
        {
            get { return _tipoContrato; }
            set
            {
                if (!ReferenceEquals(_tipoContrato, value))
                {
                    var previousValue = _tipoContrato;
                    _tipoContrato = value;
                    FixupTipoContrato(previousValue);
                    OnNavigationPropertyChanged("TipoContrato");
                }
            }
        }
        private TipoContrato _tipoContrato;
    
        [DataMember]
        public PlanDetalle PlanDetalle
        {
            get { return _planDetalle; }
            set
            {
                if (!ReferenceEquals(_planDetalle, value))
                {
                    var previousValue = _planDetalle;
                    _planDetalle = value;
                    FixupPlanDetalle(previousValue);
                    OnNavigationPropertyChanged("PlanDetalle");
                }
            }
        }
        private PlanDetalle _planDetalle;
    
        [DataMember]
        public ProductoDetalle ProductoDetalle
        {
            get { return _productoDetalle; }
            set
            {
                if (!ReferenceEquals(_productoDetalle, value))
                {
                    var previousValue = _productoDetalle;
                    _productoDetalle = value;
                    FixupProductoDetalle(previousValue);
                    OnNavigationPropertyChanged("ProductoDetalle");
                }
            }
        }
        private ProductoDetalle _productoDetalle;
    
        [DataMember]
        public RamoDetalle RamoDetalle
        {
            get { return _ramoDetalle; }
            set
            {
                if (!ReferenceEquals(_ramoDetalle, value))
                {
                    var previousValue = _ramoDetalle;
                    _ramoDetalle = value;
                    FixupRamoDetalle(previousValue);
                    OnNavigationPropertyChanged("RamoDetalle");
                }
            }
        }
        private RamoDetalle _ramoDetalle;
    
        [DataMember]
        public ModeloComision ModeloComision
        {
            get { return _modeloComision; }
            set
            {
                if (!ReferenceEquals(_modeloComision, value))
                {
                    var previousValue = _modeloComision;
                    _modeloComision = value;
                    FixupModeloComision(previousValue);
                    OnNavigationPropertyChanged("ModeloComision");
                }
            }
        }
        private ModeloComision _modeloComision;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Compania = null;
            TipoContrato = null;
            PlanDetalle = null;
            ProductoDetalle = null;
            RamoDetalle = null;
            ModeloComision = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupCompania(Compania previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FactorComisionFijas.Contains(this))
            {
                previousValue.FactorComisionFijas.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.FactorComisionFijas.Contains(this))
                {
                    Compania.FactorComisionFijas.Add(this);
                }
    
                compania_id = Compania.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }
    
        private void FixupTipoContrato(TipoContrato previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FactorComisionFijas.Contains(this))
            {
                previousValue.FactorComisionFijas.Remove(this);
            }
    
            if (TipoContrato != null)
            {
                if (!TipoContrato.FactorComisionFijas.Contains(this))
                {
                    TipoContrato.FactorComisionFijas.Add(this);
                }
    
                tipocontrato_id = TipoContrato.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoContrato")
                    && (ChangeTracker.OriginalValues["TipoContrato"] == TipoContrato))
                {
                    ChangeTracker.OriginalValues.Remove("TipoContrato");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoContrato", previousValue);
                }
                if (TipoContrato != null && !TipoContrato.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoContrato.StartTracking();
                }
            }
        }
    
        private void FixupPlanDetalle(PlanDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FactorComisionFijas.Contains(this))
            {
                previousValue.FactorComisionFijas.Remove(this);
            }
    
            if (PlanDetalle != null)
            {
                if (!PlanDetalle.FactorComisionFijas.Contains(this))
                {
                    PlanDetalle.FactorComisionFijas.Add(this);
                }
    
                planDetalle_id = PlanDetalle.id;
            }
            else if (!skipKeys)
            {
                planDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PlanDetalle")
                    && (ChangeTracker.OriginalValues["PlanDetalle"] == PlanDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("PlanDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PlanDetalle", previousValue);
                }
                if (PlanDetalle != null && !PlanDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    PlanDetalle.StartTracking();
                }
            }
        }
    
        private void FixupProductoDetalle(ProductoDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FactorComisionFijas.Contains(this))
            {
                previousValue.FactorComisionFijas.Remove(this);
            }
    
            if (ProductoDetalle != null)
            {
                if (!ProductoDetalle.FactorComisionFijas.Contains(this))
                {
                    ProductoDetalle.FactorComisionFijas.Add(this);
                }
    
                productoDetalle_id = ProductoDetalle.id;
            }
            else if (!skipKeys)
            {
                productoDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProductoDetalle")
                    && (ChangeTracker.OriginalValues["ProductoDetalle"] == ProductoDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("ProductoDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProductoDetalle", previousValue);
                }
                if (ProductoDetalle != null && !ProductoDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProductoDetalle.StartTracking();
                }
            }
        }
    
        private void FixupRamoDetalle(RamoDetalle previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FactorComisionFijas.Contains(this))
            {
                previousValue.FactorComisionFijas.Remove(this);
            }
    
            if (RamoDetalle != null)
            {
                if (!RamoDetalle.FactorComisionFijas.Contains(this))
                {
                    RamoDetalle.FactorComisionFijas.Add(this);
                }
    
                ramoDetalle_id = RamoDetalle.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RamoDetalle")
                    && (ChangeTracker.OriginalValues["RamoDetalle"] == RamoDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("RamoDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RamoDetalle", previousValue);
                }
                if (RamoDetalle != null && !RamoDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    RamoDetalle.StartTracking();
                }
            }
        }
    
        private void FixupModeloComision(ModeloComision previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.FactorComisionFijas.Contains(this))
            {
                previousValue.FactorComisionFijas.Remove(this);
            }
    
            if (ModeloComision != null)
            {
                if (!ModeloComision.FactorComisionFijas.Contains(this))
                {
                    ModeloComision.FactorComisionFijas.Add(this);
                }
    
                modelo_id = ModeloComision.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ModeloComision")
                    && (ChangeTracker.OriginalValues["ModeloComision"] == ModeloComision))
                {
                    ChangeTracker.OriginalValues.Remove("ModeloComision");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ModeloComision", previousValue);
                }
                if (ModeloComision != null && !ModeloComision.ChangeTracker.ChangeTrackingEnabled)
                {
                    ModeloComision.StartTracking();
                }
            }
        }

        #endregion
    }
}
