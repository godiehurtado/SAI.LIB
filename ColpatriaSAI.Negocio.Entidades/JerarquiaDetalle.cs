//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Canal))]
    [KnownType(typeof(Jerarquia))]
    [KnownType(typeof(Localidad))]
    [KnownType(typeof(Nivel))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(JerarquiaDetalle))]
    [KnownType(typeof(LiquiContratFactorParticipante))]
    [KnownType(typeof(LiquidacionMoneda))]
    [KnownType(typeof(LiquidacionReglaxParticipante))]
    [KnownType(typeof(ModeloxNodo))]
    [KnownType(typeof(ParticipacionDirector))]
    [KnownType(typeof(ParticipanteConcurso))]
    [KnownType(typeof(Siniestralidad))]
    [KnownType(typeof(ExcepcionJerarquiaDetalle))]
    [KnownType(typeof(PersistenciadeCAPIPeriodo))]
    [KnownType(typeof(Participante))]
    [KnownType(typeof(PersistenciadeCAPIAcumulada))]
    public partial class JerarquiaDetalle: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public int jerarquia_id
        {
            get { return _jerarquia_id; }
            set
            {
                if (_jerarquia_id != value)
                {
                    ChangeTracker.RecordOriginalValue("jerarquia_id", _jerarquia_id);
                    if (!IsDeserializing)
                    {
                        if (Jerarquia != null && Jerarquia.id != value)
                        {
                            Jerarquia = null;
                        }
                    }
                    _jerarquia_id = value;
                    OnPropertyChanged("jerarquia_id");
                }
            }
        }
        private int _jerarquia_id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public Nullable<int> padre_id
        {
            get { return _padre_id; }
            set
            {
                if (_padre_id != value)
                {
                    ChangeTracker.RecordOriginalValue("padre_id", _padre_id);
                    if (!IsDeserializing)
                    {
                        if (JerarquiaDetalle2 != null && JerarquiaDetalle2.id != value)
                        {
                            JerarquiaDetalle2 = null;
                        }
                    }
                    _padre_id = value;
                    OnPropertyChanged("padre_id");
                }
            }
        }
        private Nullable<int> _padre_id;
    
        [DataMember]
        public int zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private int _zona_id;
    
        [DataMember]
        public int localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("localidad_id", _localidad_id);
                    if (!IsDeserializing)
                    {
                        if (Localidad != null && Localidad.id != value)
                        {
                            Localidad = null;
                        }
                    }
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private int _localidad_id;
    
        [DataMember]
        public int canal_id
        {
            get { return _canal_id; }
            set
            {
                if (_canal_id != value)
                {
                    ChangeTracker.RecordOriginalValue("canal_id", _canal_id);
                    if (!IsDeserializing)
                    {
                        if (Canal != null && Canal.id != value)
                        {
                            Canal = null;
                        }
                    }
                    _canal_id = value;
                    OnPropertyChanged("canal_id");
                }
            }
        }
        private int _canal_id;
    
        [DataMember]
        public int participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    ChangeTracker.RecordOriginalValue("participante_id", _participante_id);
                    if (!IsDeserializing)
                    {
                        if (Participante != null && Participante.id != value)
                        {
                            Participante = null;
                        }
                    }
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private int _participante_id;
    
        [DataMember]
        public string codigoNivel
        {
            get { return _codigoNivel; }
            set
            {
                if (_codigoNivel != value)
                {
                    _codigoNivel = value;
                    OnPropertyChanged("codigoNivel");
                }
            }
        }
        private string _codigoNivel;
    
        [DataMember]
        public Nullable<int> nivel_id
        {
            get { return _nivel_id; }
            set
            {
                if (_nivel_id != value)
                {
                    ChangeTracker.RecordOriginalValue("nivel_id", _nivel_id);
                    if (!IsDeserializing)
                    {
                        if (Nivel != null && Nivel.id != value)
                        {
                            Nivel = null;
                        }
                    }
                    _nivel_id = value;
                    OnPropertyChanged("nivel_id");
                }
            }
        }
        private Nullable<int> _nivel_id;
    
        [DataMember]
        public string codJerarquia
        {
            get { return _codJerarquia; }
            set
            {
                if (_codJerarquia != value)
                {
                    _codJerarquia = value;
                    OnPropertyChanged("codJerarquia");
                }
            }
        }
        private string _codJerarquia;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Canal Canal
        {
            get { return _canal; }
            set
            {
                if (!ReferenceEquals(_canal, value))
                {
                    var previousValue = _canal;
                    _canal = value;
                    FixupCanal(previousValue);
                    OnNavigationPropertyChanged("Canal");
                }
            }
        }
        private Canal _canal;
    
        [DataMember]
        public Jerarquia Jerarquia
        {
            get { return _jerarquia; }
            set
            {
                if (!ReferenceEquals(_jerarquia, value))
                {
                    var previousValue = _jerarquia;
                    _jerarquia = value;
                    FixupJerarquia(previousValue);
                    OnNavigationPropertyChanged("Jerarquia");
                }
            }
        }
        private Jerarquia _jerarquia;
    
        [DataMember]
        public Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                    OnNavigationPropertyChanged("Localidad");
                }
            }
        }
        private Localidad _localidad;
    
        [DataMember]
        public Nivel Nivel
        {
            get { return _nivel; }
            set
            {
                if (!ReferenceEquals(_nivel, value))
                {
                    var previousValue = _nivel;
                    _nivel = value;
                    FixupNivel(previousValue);
                    OnNavigationPropertyChanged("Nivel");
                }
            }
        }
        private Nivel _nivel;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public TrackableCollection<JerarquiaDetalle> JerarquiaDetalle1
        {
            get
            {
                if (_jerarquiaDetalle1 == null)
                {
                    _jerarquiaDetalle1 = new TrackableCollection<JerarquiaDetalle>();
                    _jerarquiaDetalle1.CollectionChanged += FixupJerarquiaDetalle1;
                }
                return _jerarquiaDetalle1;
            }
            set
            {
                if (!ReferenceEquals(_jerarquiaDetalle1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_jerarquiaDetalle1 != null)
                    {
                        _jerarquiaDetalle1.CollectionChanged -= FixupJerarquiaDetalle1;
                    }
                    _jerarquiaDetalle1 = value;
                    if (_jerarquiaDetalle1 != null)
                    {
                        _jerarquiaDetalle1.CollectionChanged += FixupJerarquiaDetalle1;
                    }
                    OnNavigationPropertyChanged("JerarquiaDetalle1");
                }
            }
        }
        private TrackableCollection<JerarquiaDetalle> _jerarquiaDetalle1;
    
        [DataMember]
        public JerarquiaDetalle JerarquiaDetalle2
        {
            get { return _jerarquiaDetalle2; }
            set
            {
                if (!ReferenceEquals(_jerarquiaDetalle2, value))
                {
                    var previousValue = _jerarquiaDetalle2;
                    _jerarquiaDetalle2 = value;
                    FixupJerarquiaDetalle2(previousValue);
                    OnNavigationPropertyChanged("JerarquiaDetalle2");
                }
            }
        }
        private JerarquiaDetalle _jerarquiaDetalle2;
    
        [DataMember]
        public TrackableCollection<LiquiContratFactorParticipante> LiquiContratFactorParticipantes
        {
            get
            {
                if (_liquiContratFactorParticipantes == null)
                {
                    _liquiContratFactorParticipantes = new TrackableCollection<LiquiContratFactorParticipante>();
                    _liquiContratFactorParticipantes.CollectionChanged += FixupLiquiContratFactorParticipantes;
                }
                return _liquiContratFactorParticipantes;
            }
            set
            {
                if (!ReferenceEquals(_liquiContratFactorParticipantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquiContratFactorParticipantes != null)
                    {
                        _liquiContratFactorParticipantes.CollectionChanged -= FixupLiquiContratFactorParticipantes;
                    }
                    _liquiContratFactorParticipantes = value;
                    if (_liquiContratFactorParticipantes != null)
                    {
                        _liquiContratFactorParticipantes.CollectionChanged += FixupLiquiContratFactorParticipantes;
                    }
                    OnNavigationPropertyChanged("LiquiContratFactorParticipantes");
                }
            }
        }
        private TrackableCollection<LiquiContratFactorParticipante> _liquiContratFactorParticipantes;
    
        [DataMember]
        public TrackableCollection<LiquidacionMoneda> LiquidacionMonedas
        {
            get
            {
                if (_liquidacionMonedas == null)
                {
                    _liquidacionMonedas = new TrackableCollection<LiquidacionMoneda>();
                    _liquidacionMonedas.CollectionChanged += FixupLiquidacionMonedas;
                }
                return _liquidacionMonedas;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionMonedas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionMonedas != null)
                    {
                        _liquidacionMonedas.CollectionChanged -= FixupLiquidacionMonedas;
                    }
                    _liquidacionMonedas = value;
                    if (_liquidacionMonedas != null)
                    {
                        _liquidacionMonedas.CollectionChanged += FixupLiquidacionMonedas;
                    }
                    OnNavigationPropertyChanged("LiquidacionMonedas");
                }
            }
        }
        private TrackableCollection<LiquidacionMoneda> _liquidacionMonedas;
    
        [DataMember]
        public TrackableCollection<LiquidacionReglaxParticipante> LiquidacionReglaxParticipantes
        {
            get
            {
                if (_liquidacionReglaxParticipantes == null)
                {
                    _liquidacionReglaxParticipantes = new TrackableCollection<LiquidacionReglaxParticipante>();
                    _liquidacionReglaxParticipantes.CollectionChanged += FixupLiquidacionReglaxParticipantes;
                }
                return _liquidacionReglaxParticipantes;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionReglaxParticipantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionReglaxParticipantes != null)
                    {
                        _liquidacionReglaxParticipantes.CollectionChanged -= FixupLiquidacionReglaxParticipantes;
                    }
                    _liquidacionReglaxParticipantes = value;
                    if (_liquidacionReglaxParticipantes != null)
                    {
                        _liquidacionReglaxParticipantes.CollectionChanged += FixupLiquidacionReglaxParticipantes;
                    }
                    OnNavigationPropertyChanged("LiquidacionReglaxParticipantes");
                }
            }
        }
        private TrackableCollection<LiquidacionReglaxParticipante> _liquidacionReglaxParticipantes;
    
        [DataMember]
        public TrackableCollection<ModeloxNodo> ModeloxNodoes
        {
            get
            {
                if (_modeloxNodoes == null)
                {
                    _modeloxNodoes = new TrackableCollection<ModeloxNodo>();
                    _modeloxNodoes.CollectionChanged += FixupModeloxNodoes;
                }
                return _modeloxNodoes;
            }
            set
            {
                if (!ReferenceEquals(_modeloxNodoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_modeloxNodoes != null)
                    {
                        _modeloxNodoes.CollectionChanged -= FixupModeloxNodoes;
                    }
                    _modeloxNodoes = value;
                    if (_modeloxNodoes != null)
                    {
                        _modeloxNodoes.CollectionChanged += FixupModeloxNodoes;
                    }
                    OnNavigationPropertyChanged("ModeloxNodoes");
                }
            }
        }
        private TrackableCollection<ModeloxNodo> _modeloxNodoes;
    
        [DataMember]
        public TrackableCollection<ParticipacionDirector> ParticipacionDirectors
        {
            get
            {
                if (_participacionDirectors == null)
                {
                    _participacionDirectors = new TrackableCollection<ParticipacionDirector>();
                    _participacionDirectors.CollectionChanged += FixupParticipacionDirectors;
                }
                return _participacionDirectors;
            }
            set
            {
                if (!ReferenceEquals(_participacionDirectors, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participacionDirectors != null)
                    {
                        _participacionDirectors.CollectionChanged -= FixupParticipacionDirectors;
                    }
                    _participacionDirectors = value;
                    if (_participacionDirectors != null)
                    {
                        _participacionDirectors.CollectionChanged += FixupParticipacionDirectors;
                    }
                    OnNavigationPropertyChanged("ParticipacionDirectors");
                }
            }
        }
        private TrackableCollection<ParticipacionDirector> _participacionDirectors;
    
        [DataMember]
        public TrackableCollection<ParticipanteConcurso> ParticipanteConcursoes
        {
            get
            {
                if (_participanteConcursoes == null)
                {
                    _participanteConcursoes = new TrackableCollection<ParticipanteConcurso>();
                    _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                }
                return _participanteConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_participanteConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged -= FixupParticipanteConcursoes;
                    }
                    _participanteConcursoes = value;
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                    }
                    OnNavigationPropertyChanged("ParticipanteConcursoes");
                }
            }
        }
        private TrackableCollection<ParticipanteConcurso> _participanteConcursoes;
    
        [DataMember]
        public TrackableCollection<Siniestralidad> Siniestralidads
        {
            get
            {
                if (_siniestralidads == null)
                {
                    _siniestralidads = new TrackableCollection<Siniestralidad>();
                    _siniestralidads.CollectionChanged += FixupSiniestralidads;
                }
                return _siniestralidads;
            }
            set
            {
                if (!ReferenceEquals(_siniestralidads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged -= FixupSiniestralidads;
                    }
                    _siniestralidads = value;
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged += FixupSiniestralidads;
                    }
                    OnNavigationPropertyChanged("Siniestralidads");
                }
            }
        }
        private TrackableCollection<Siniestralidad> _siniestralidads;
    
        [DataMember]
        public TrackableCollection<ExcepcionJerarquiaDetalle> ExcepcionJerarquiaDetalles
        {
            get
            {
                if (_excepcionJerarquiaDetalles == null)
                {
                    _excepcionJerarquiaDetalles = new TrackableCollection<ExcepcionJerarquiaDetalle>();
                    _excepcionJerarquiaDetalles.CollectionChanged += FixupExcepcionJerarquiaDetalles;
                }
                return _excepcionJerarquiaDetalles;
            }
            set
            {
                if (!ReferenceEquals(_excepcionJerarquiaDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionJerarquiaDetalles != null)
                    {
                        _excepcionJerarquiaDetalles.CollectionChanged -= FixupExcepcionJerarquiaDetalles;
                    }
                    _excepcionJerarquiaDetalles = value;
                    if (_excepcionJerarquiaDetalles != null)
                    {
                        _excepcionJerarquiaDetalles.CollectionChanged += FixupExcepcionJerarquiaDetalles;
                    }
                    OnNavigationPropertyChanged("ExcepcionJerarquiaDetalles");
                }
            }
        }
        private TrackableCollection<ExcepcionJerarquiaDetalle> _excepcionJerarquiaDetalles;
    
        [DataMember]
        public TrackableCollection<ExcepcionJerarquiaDetalle> ExcepcionJerarquiaDetalles1
        {
            get
            {
                if (_excepcionJerarquiaDetalles1 == null)
                {
                    _excepcionJerarquiaDetalles1 = new TrackableCollection<ExcepcionJerarquiaDetalle>();
                    _excepcionJerarquiaDetalles1.CollectionChanged += FixupExcepcionJerarquiaDetalles1;
                }
                return _excepcionJerarquiaDetalles1;
            }
            set
            {
                if (!ReferenceEquals(_excepcionJerarquiaDetalles1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionJerarquiaDetalles1 != null)
                    {
                        _excepcionJerarquiaDetalles1.CollectionChanged -= FixupExcepcionJerarquiaDetalles1;
                    }
                    _excepcionJerarquiaDetalles1 = value;
                    if (_excepcionJerarquiaDetalles1 != null)
                    {
                        _excepcionJerarquiaDetalles1.CollectionChanged += FixupExcepcionJerarquiaDetalles1;
                    }
                    OnNavigationPropertyChanged("ExcepcionJerarquiaDetalles1");
                }
            }
        }
        private TrackableCollection<ExcepcionJerarquiaDetalle> _excepcionJerarquiaDetalles1;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIPeriodo> PersistenciadeCAPIPeriodoes
        {
            get
            {
                if (_persistenciadeCAPIPeriodoes == null)
                {
                    _persistenciadeCAPIPeriodoes = new TrackableCollection<PersistenciadeCAPIPeriodo>();
                    _persistenciadeCAPIPeriodoes.CollectionChanged += FixupPersistenciadeCAPIPeriodoes;
                }
                return _persistenciadeCAPIPeriodoes;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIPeriodoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIPeriodoes != null)
                    {
                        _persistenciadeCAPIPeriodoes.CollectionChanged -= FixupPersistenciadeCAPIPeriodoes;
                    }
                    _persistenciadeCAPIPeriodoes = value;
                    if (_persistenciadeCAPIPeriodoes != null)
                    {
                        _persistenciadeCAPIPeriodoes.CollectionChanged += FixupPersistenciadeCAPIPeriodoes;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIPeriodoes");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIPeriodo> _persistenciadeCAPIPeriodoes;
    
        [DataMember]
        public Participante Participante
        {
            get { return _participante; }
            set
            {
                if (!ReferenceEquals(_participante, value))
                {
                    var previousValue = _participante;
                    _participante = value;
                    FixupParticipante(previousValue);
                    OnNavigationPropertyChanged("Participante");
                }
            }
        }
        private Participante _participante;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIAcumulada> PersistenciadeCAPIAcumuladas
        {
            get
            {
                if (_persistenciadeCAPIAcumuladas == null)
                {
                    _persistenciadeCAPIAcumuladas = new TrackableCollection<PersistenciadeCAPIAcumulada>();
                    _persistenciadeCAPIAcumuladas.CollectionChanged += FixupPersistenciadeCAPIAcumuladas;
                }
                return _persistenciadeCAPIAcumuladas;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIAcumuladas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIAcumuladas != null)
                    {
                        _persistenciadeCAPIAcumuladas.CollectionChanged -= FixupPersistenciadeCAPIAcumuladas;
                    }
                    _persistenciadeCAPIAcumuladas = value;
                    if (_persistenciadeCAPIAcumuladas != null)
                    {
                        _persistenciadeCAPIAcumuladas.CollectionChanged += FixupPersistenciadeCAPIAcumuladas;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIAcumuladas");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIAcumulada> _persistenciadeCAPIAcumuladas;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Canal = null;
            Jerarquia = null;
            Localidad = null;
            Nivel = null;
            Zona = null;
            JerarquiaDetalle1.Clear();
            JerarquiaDetalle2 = null;
            LiquiContratFactorParticipantes.Clear();
            LiquidacionMonedas.Clear();
            LiquidacionReglaxParticipantes.Clear();
            ModeloxNodoes.Clear();
            ParticipacionDirectors.Clear();
            ParticipanteConcursoes.Clear();
            Siniestralidads.Clear();
            ExcepcionJerarquiaDetalles.Clear();
            ExcepcionJerarquiaDetalles1.Clear();
            PersistenciadeCAPIPeriodoes.Clear();
            Participante = null;
            PersistenciadeCAPIAcumuladas.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupCanal(Canal previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JerarquiaDetalles.Contains(this))
            {
                previousValue.JerarquiaDetalles.Remove(this);
            }
    
            if (Canal != null)
            {
                if (!Canal.JerarquiaDetalles.Contains(this))
                {
                    Canal.JerarquiaDetalles.Add(this);
                }
    
                canal_id = Canal.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Canal")
                    && (ChangeTracker.OriginalValues["Canal"] == Canal))
                {
                    ChangeTracker.OriginalValues.Remove("Canal");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Canal", previousValue);
                }
                if (Canal != null && !Canal.ChangeTracker.ChangeTrackingEnabled)
                {
                    Canal.StartTracking();
                }
            }
        }
    
        private void FixupJerarquia(Jerarquia previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JerarquiaDetalles.Contains(this))
            {
                previousValue.JerarquiaDetalles.Remove(this);
            }
    
            if (Jerarquia != null)
            {
                if (!Jerarquia.JerarquiaDetalles.Contains(this))
                {
                    Jerarquia.JerarquiaDetalles.Add(this);
                }
    
                jerarquia_id = Jerarquia.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Jerarquia")
                    && (ChangeTracker.OriginalValues["Jerarquia"] == Jerarquia))
                {
                    ChangeTracker.OriginalValues.Remove("Jerarquia");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Jerarquia", previousValue);
                }
                if (Jerarquia != null && !Jerarquia.ChangeTracker.ChangeTrackingEnabled)
                {
                    Jerarquia.StartTracking();
                }
            }
        }
    
        private void FixupLocalidad(Localidad previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JerarquiaDetalles.Contains(this))
            {
                previousValue.JerarquiaDetalles.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.JerarquiaDetalles.Contains(this))
                {
                    Localidad.JerarquiaDetalles.Add(this);
                }
    
                localidad_id = Localidad.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localidad")
                    && (ChangeTracker.OriginalValues["Localidad"] == Localidad))
                {
                    ChangeTracker.OriginalValues.Remove("Localidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localidad", previousValue);
                }
                if (Localidad != null && !Localidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localidad.StartTracking();
                }
            }
        }
    
        private void FixupNivel(Nivel previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JerarquiaDetalles.Contains(this))
            {
                previousValue.JerarquiaDetalles.Remove(this);
            }
    
            if (Nivel != null)
            {
                if (!Nivel.JerarquiaDetalles.Contains(this))
                {
                    Nivel.JerarquiaDetalles.Add(this);
                }
    
                nivel_id = Nivel.id;
            }
            else if (!skipKeys)
            {
                nivel_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Nivel")
                    && (ChangeTracker.OriginalValues["Nivel"] == Nivel))
                {
                    ChangeTracker.OriginalValues.Remove("Nivel");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Nivel", previousValue);
                }
                if (Nivel != null && !Nivel.ChangeTracker.ChangeTrackingEnabled)
                {
                    Nivel.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JerarquiaDetalles.Contains(this))
            {
                previousValue.JerarquiaDetalles.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.JerarquiaDetalles.Contains(this))
                {
                    Zona.JerarquiaDetalles.Add(this);
                }
    
                zona_id = Zona.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupJerarquiaDetalle2(JerarquiaDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JerarquiaDetalle1.Contains(this))
            {
                previousValue.JerarquiaDetalle1.Remove(this);
            }
    
            if (JerarquiaDetalle2 != null)
            {
                if (!JerarquiaDetalle2.JerarquiaDetalle1.Contains(this))
                {
                    JerarquiaDetalle2.JerarquiaDetalle1.Add(this);
                }
    
                padre_id = JerarquiaDetalle2.id;
            }
            else if (!skipKeys)
            {
                padre_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JerarquiaDetalle2")
                    && (ChangeTracker.OriginalValues["JerarquiaDetalle2"] == JerarquiaDetalle2))
                {
                    ChangeTracker.OriginalValues.Remove("JerarquiaDetalle2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JerarquiaDetalle2", previousValue);
                }
                if (JerarquiaDetalle2 != null && !JerarquiaDetalle2.ChangeTracker.ChangeTrackingEnabled)
                {
                    JerarquiaDetalle2.StartTracking();
                }
            }
        }
    
        private void FixupParticipante(Participante previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.JerarquiaDetalles.Contains(this))
            {
                previousValue.JerarquiaDetalles.Remove(this);
            }
    
            if (Participante != null)
            {
                if (!Participante.JerarquiaDetalles.Contains(this))
                {
                    Participante.JerarquiaDetalles.Add(this);
                }
    
                participante_id = Participante.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Participante")
                    && (ChangeTracker.OriginalValues["Participante"] == Participante))
                {
                    ChangeTracker.OriginalValues.Remove("Participante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Participante", previousValue);
                }
                if (Participante != null && !Participante.ChangeTracker.ChangeTrackingEnabled)
                {
                    Participante.StartTracking();
                }
            }
        }
    
        private void FixupJerarquiaDetalle1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JerarquiaDetalle item in e.NewItems)
                {
                    item.JerarquiaDetalle2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JerarquiaDetalle1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JerarquiaDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle2, this))
                    {
                        item.JerarquiaDetalle2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JerarquiaDetalle1", item);
                    }
                }
            }
        }
    
        private void FixupLiquiContratFactorParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquiContratFactorParticipante item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquiContratFactorParticipantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquiContratFactorParticipante item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquiContratFactorParticipantes", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionMonedas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionMoneda item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionMonedas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionMoneda item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionMonedas", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionReglaxParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionReglaxParticipante item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionReglaxParticipantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionReglaxParticipante item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionReglaxParticipantes", item);
                    }
                }
            }
        }
    
        private void FixupModeloxNodoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ModeloxNodo item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ModeloxNodoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ModeloxNodo item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ModeloxNodoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipacionDirectors(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipacionDirector item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipacionDirectors", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipacionDirector item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipacionDirectors", item);
                    }
                }
            }
        }
    
        private void FixupParticipanteConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipanteConcurso item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipanteConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupSiniestralidads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Siniestralidad item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Siniestralidads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Siniestralidad item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Siniestralidads", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionJerarquiaDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionJerarquiaDetalle item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionJerarquiaDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionJerarquiaDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionJerarquiaDetalles", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionJerarquiaDetalles1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionJerarquiaDetalle item in e.NewItems)
                {
                    item.JerarquiaDetalle1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionJerarquiaDetalles1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionJerarquiaDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle1, this))
                    {
                        item.JerarquiaDetalle1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionJerarquiaDetalles1", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIPeriodoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIPeriodo item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIPeriodoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIPeriodo item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIPeriodoes", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIAcumuladas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIAcumulada item in e.NewItems)
                {
                    item.JerarquiaDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIAcumuladas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIAcumulada item in e.OldItems)
                {
                    if (ReferenceEquals(item.JerarquiaDetalle, this))
                    {
                        item.JerarquiaDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIAcumuladas", item);
                    }
                }
            }
        }

        #endregion
    }
}
