//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ActividadEconomica))]
    [KnownType(typeof(Beneficiario))]
    [KnownType(typeof(TipoDocumento))]
    [KnownType(typeof(Negocio))]
    public partial class Cliente: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string cedula
        {
            get { return _cedula; }
            set
            {
                if (_cedula != value)
                {
                    _cedula = value;
                    OnPropertyChanged("cedula");
                }
            }
        }
        private string _cedula;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public Nullable<System.DateTime> fechaNacimiento
        {
            get { return _fechaNacimiento; }
            set
            {
                if (_fechaNacimiento != value)
                {
                    _fechaNacimiento = value;
                    OnPropertyChanged("fechaNacimiento");
                }
            }
        }
        private Nullable<System.DateTime> _fechaNacimiento;
    
        [DataMember]
        public Nullable<int> actividadEconomica_id
        {
            get { return _actividadEconomica_id; }
            set
            {
                if (_actividadEconomica_id != value)
                {
                    ChangeTracker.RecordOriginalValue("actividadEconomica_id", _actividadEconomica_id);
                    if (!IsDeserializing)
                    {
                        if (ActividadEconomica != null && ActividadEconomica.id != value)
                        {
                            ActividadEconomica = null;
                        }
                    }
                    _actividadEconomica_id = value;
                    OnPropertyChanged("actividadEconomica_id");
                }
            }
        }
        private Nullable<int> _actividadEconomica_id;
    
        [DataMember]
        public Nullable<int> microsegmento_id
        {
            get { return _microsegmento_id; }
            set
            {
                if (_microsegmento_id != value)
                {
                    _microsegmento_id = value;
                    OnPropertyChanged("microsegmento_id");
                }
            }
        }
        private Nullable<int> _microsegmento_id;
    
        [DataMember]
        public Nullable<int> tipoDocumento_id
        {
            get { return _tipoDocumento_id; }
            set
            {
                if (_tipoDocumento_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoDocumento_id", _tipoDocumento_id);
                    if (!IsDeserializing)
                    {
                        if (TipoDocumento != null && TipoDocumento.id != value)
                        {
                            TipoDocumento = null;
                        }
                    }
                    _tipoDocumento_id = value;
                    OnPropertyChanged("tipoDocumento_id");
                }
            }
        }
        private Nullable<int> _tipoDocumento_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public ActividadEconomica ActividadEconomica
        {
            get { return _actividadEconomica; }
            set
            {
                if (!ReferenceEquals(_actividadEconomica, value))
                {
                    var previousValue = _actividadEconomica;
                    _actividadEconomica = value;
                    FixupActividadEconomica(previousValue);
                    OnNavigationPropertyChanged("ActividadEconomica");
                }
            }
        }
        private ActividadEconomica _actividadEconomica;
    
        [DataMember]
        public TrackableCollection<Beneficiario> Beneficiarios
        {
            get
            {
                if (_beneficiarios == null)
                {
                    _beneficiarios = new TrackableCollection<Beneficiario>();
                    _beneficiarios.CollectionChanged += FixupBeneficiarios;
                }
                return _beneficiarios;
            }
            set
            {
                if (!ReferenceEquals(_beneficiarios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_beneficiarios != null)
                    {
                        _beneficiarios.CollectionChanged -= FixupBeneficiarios;
                    }
                    _beneficiarios = value;
                    if (_beneficiarios != null)
                    {
                        _beneficiarios.CollectionChanged += FixupBeneficiarios;
                    }
                    OnNavigationPropertyChanged("Beneficiarios");
                }
            }
        }
        private TrackableCollection<Beneficiario> _beneficiarios;
    
        [DataMember]
        public TipoDocumento TipoDocumento
        {
            get { return _tipoDocumento; }
            set
            {
                if (!ReferenceEquals(_tipoDocumento, value))
                {
                    var previousValue = _tipoDocumento;
                    _tipoDocumento = value;
                    FixupTipoDocumento(previousValue);
                    OnNavigationPropertyChanged("TipoDocumento");
                }
            }
        }
        private TipoDocumento _tipoDocumento;
    
        [DataMember]
        public TrackableCollection<Negocio> Negocios
        {
            get
            {
                if (_negocios == null)
                {
                    _negocios = new TrackableCollection<Negocio>();
                    _negocios.CollectionChanged += FixupNegocios;
                }
                return _negocios;
            }
            set
            {
                if (!ReferenceEquals(_negocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged -= FixupNegocios;
                    }
                    _negocios = value;
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged += FixupNegocios;
                    }
                    OnNavigationPropertyChanged("Negocios");
                }
            }
        }
        private TrackableCollection<Negocio> _negocios;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            ActividadEconomica = null;
            Beneficiarios.Clear();
            TipoDocumento = null;
            Negocios.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupActividadEconomica(ActividadEconomica previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Clientes.Contains(this))
            {
                previousValue.Clientes.Remove(this);
            }
    
            if (ActividadEconomica != null)
            {
                if (!ActividadEconomica.Clientes.Contains(this))
                {
                    ActividadEconomica.Clientes.Add(this);
                }
    
                actividadEconomica_id = ActividadEconomica.id;
            }
            else if (!skipKeys)
            {
                actividadEconomica_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ActividadEconomica")
                    && (ChangeTracker.OriginalValues["ActividadEconomica"] == ActividadEconomica))
                {
                    ChangeTracker.OriginalValues.Remove("ActividadEconomica");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ActividadEconomica", previousValue);
                }
                if (ActividadEconomica != null && !ActividadEconomica.ChangeTracker.ChangeTrackingEnabled)
                {
                    ActividadEconomica.StartTracking();
                }
            }
        }
    
        private void FixupTipoDocumento(TipoDocumento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Clientes.Contains(this))
            {
                previousValue.Clientes.Remove(this);
            }
    
            if (TipoDocumento != null)
            {
                if (!TipoDocumento.Clientes.Contains(this))
                {
                    TipoDocumento.Clientes.Add(this);
                }
    
                tipoDocumento_id = TipoDocumento.id;
            }
            else if (!skipKeys)
            {
                tipoDocumento_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoDocumento")
                    && (ChangeTracker.OriginalValues["TipoDocumento"] == TipoDocumento))
                {
                    ChangeTracker.OriginalValues.Remove("TipoDocumento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoDocumento", previousValue);
                }
                if (TipoDocumento != null && !TipoDocumento.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoDocumento.StartTracking();
                }
            }
        }
    
        private void FixupBeneficiarios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Beneficiario item in e.NewItems)
                {
                    item.Cliente = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Beneficiarios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Beneficiario item in e.OldItems)
                {
                    if (ReferenceEquals(item.Cliente, this))
                    {
                        item.Cliente = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Beneficiarios", item);
                    }
                }
            }
        }
    
        private void FixupNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Negocio item in e.NewItems)
                {
                    item.Cliente = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Negocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Negocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Cliente, this))
                    {
                        item.Cliente = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Negocios", item);
                    }
                }
            }
        }

        #endregion
    }
}
