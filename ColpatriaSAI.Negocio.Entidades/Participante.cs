//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Anticipo))]
    [KnownType(typeof(BasexParticipante))]
    [KnownType(typeof(Canal))]
    [KnownType(typeof(Categoria))]
    [KnownType(typeof(Comision))]
    [KnownType(typeof(ComisionVariableAsesor))]
    [KnownType(typeof(Compania))]
    [KnownType(typeof(DetalleLiquidacion))]
    [KnownType(typeof(EstadoParticipante))]
    [KnownType(typeof(Excepcion))]
    [KnownType(typeof(ExcepcionFijaVariable))]
    [KnownType(typeof(ExcepcionPenalizacion))]
    [KnownType(typeof(JerarquiaDetalle))]
    [KnownType(typeof(LiquidacionMoneda))]
    [KnownType(typeof(LiquidacionReglaDetalleCondicion))]
    [KnownType(typeof(LiquidacionReglaPremio))]
    [KnownType(typeof(LiquidacionReglaxParticipante))]
    [KnownType(typeof(Localidad))]
    [KnownType(typeof(Nivel))]
    [KnownType(typeof(Recaudo))]
    [KnownType(typeof(TipoDocumento))]
    [KnownType(typeof(TipoParticipante))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(ParticipanteConcurso))]
    [KnownType(typeof(ParticipantexNivel))]
    [KnownType(typeof(Persistencia))]
    [KnownType(typeof(PersistenciadeCAPIPeriodo))]
    [KnownType(typeof(PersistenciadeCAPIDetalle))]
    [KnownType(typeof(Segmento))]
    [KnownType(typeof(Siniestralidad))]
    [KnownType(typeof(TipoIntermediario))]
    [KnownType(typeof(PersistenciadeCAPIAcumulada))]
    public partial class Participante: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string clave
        {
            get { return _clave; }
            set
            {
                if (_clave != value)
                {
                    _clave = value;
                    OnPropertyChanged("clave");
                }
            }
        }
        private string _clave;
    
        [DataMember]
        public string codProductor
        {
            get { return _codProductor; }
            set
            {
                if (_codProductor != value)
                {
                    _codProductor = value;
                    OnPropertyChanged("codProductor");
                }
            }
        }
        private string _codProductor;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string apellidos
        {
            get { return _apellidos; }
            set
            {
                if (_apellidos != value)
                {
                    _apellidos = value;
                    OnPropertyChanged("apellidos");
                }
            }
        }
        private string _apellidos;
    
        [DataMember]
        public string documento
        {
            get { return _documento; }
            set
            {
                if (_documento != value)
                {
                    _documento = value;
                    OnPropertyChanged("documento");
                }
            }
        }
        private string _documento;
    
        [DataMember]
        public string email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    _email = value;
                    OnPropertyChanged("email");
                }
            }
        }
        private string _email;
    
        [DataMember]
        public Nullable<int> estadoParticipante_id
        {
            get { return _estadoParticipante_id; }
            set
            {
                if (_estadoParticipante_id != value)
                {
                    ChangeTracker.RecordOriginalValue("estadoParticipante_id", _estadoParticipante_id);
                    if (!IsDeserializing)
                    {
                        if (EstadoParticipante != null && EstadoParticipante.id != value)
                        {
                            EstadoParticipante = null;
                        }
                    }
                    _estadoParticipante_id = value;
                    OnPropertyChanged("estadoParticipante_id");
                }
            }
        }
        private Nullable<int> _estadoParticipante_id;
    
        [DataMember]
        public Nullable<System.DateTime> fechaIngreso
        {
            get { return _fechaIngreso; }
            set
            {
                if (_fechaIngreso != value)
                {
                    _fechaIngreso = value;
                    OnPropertyChanged("fechaIngreso");
                }
            }
        }
        private Nullable<System.DateTime> _fechaIngreso;
    
        [DataMember]
        public Nullable<System.DateTime> fechaRetiro
        {
            get { return _fechaRetiro; }
            set
            {
                if (_fechaRetiro != value)
                {
                    _fechaRetiro = value;
                    OnPropertyChanged("fechaRetiro");
                }
            }
        }
        private Nullable<System.DateTime> _fechaRetiro;
    
        [DataMember]
        public Nullable<System.DateTime> fechaNacimiento
        {
            get { return _fechaNacimiento; }
            set
            {
                if (_fechaNacimiento != value)
                {
                    _fechaNacimiento = value;
                    OnPropertyChanged("fechaNacimiento");
                }
            }
        }
        private Nullable<System.DateTime> _fechaNacimiento;
    
        [DataMember]
        public Nullable<int> nivel_id
        {
            get { return _nivel_id; }
            set
            {
                if (_nivel_id != value)
                {
                    ChangeTracker.RecordOriginalValue("nivel_id", _nivel_id);
                    if (!IsDeserializing)
                    {
                        if (Nivel != null && Nivel.id != value)
                        {
                            Nivel = null;
                        }
                    }
                    _nivel_id = value;
                    OnPropertyChanged("nivel_id");
                }
            }
        }
        private Nullable<int> _nivel_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("localidad_id", _localidad_id);
                    if (!IsDeserializing)
                    {
                        if (Localidad != null && Localidad.id != value)
                        {
                            Localidad = null;
                        }
                    }
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> canal_id
        {
            get { return _canal_id; }
            set
            {
                if (_canal_id != value)
                {
                    ChangeTracker.RecordOriginalValue("canal_id", _canal_id);
                    if (!IsDeserializing)
                    {
                        if (Canal != null && Canal.id != value)
                        {
                            Canal = null;
                        }
                    }
                    _canal_id = value;
                    OnPropertyChanged("canal_id");
                }
            }
        }
        private Nullable<int> _canal_id;
    
        [DataMember]
        public Nullable<int> categoria_id
        {
            get { return _categoria_id; }
            set
            {
                if (_categoria_id != value)
                {
                    ChangeTracker.RecordOriginalValue("categoria_id", _categoria_id);
                    if (!IsDeserializing)
                    {
                        if (Categoria != null && Categoria.id != value)
                        {
                            Categoria = null;
                        }
                    }
                    _categoria_id = value;
                    OnPropertyChanged("categoria_id");
                }
            }
        }
        private Nullable<int> _categoria_id;
    
        [DataMember]
        public Nullable<double> ingresosMinimos
        {
            get { return _ingresosMinimos; }
            set
            {
                if (_ingresosMinimos != value)
                {
                    _ingresosMinimos = value;
                    OnPropertyChanged("ingresosMinimos");
                }
            }
        }
        private Nullable<double> _ingresosMinimos;
    
        [DataMember]
        public Nullable<int> tipoParticipante_id
        {
            get { return _tipoParticipante_id; }
            set
            {
                if (_tipoParticipante_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoParticipante_id", _tipoParticipante_id);
                    if (!IsDeserializing)
                    {
                        if (TipoParticipante != null && TipoParticipante.id != value)
                        {
                            TipoParticipante = null;
                        }
                    }
                    _tipoParticipante_id = value;
                    OnPropertyChanged("tipoParticipante_id");
                }
            }
        }
        private Nullable<int> _tipoParticipante_id;
    
        [DataMember]
        public Nullable<double> salario
        {
            get { return _salario; }
            set
            {
                if (_salario != value)
                {
                    _salario = value;
                    OnPropertyChanged("salario");
                }
            }
        }
        private Nullable<double> _salario;
    
        [DataMember]
        public Nullable<int> tipoDocumento_id
        {
            get { return _tipoDocumento_id; }
            set
            {
                if (_tipoDocumento_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoDocumento_id", _tipoDocumento_id);
                    if (!IsDeserializing)
                    {
                        if (TipoDocumento != null && TipoDocumento.id != value)
                        {
                            TipoDocumento = null;
                        }
                    }
                    _tipoDocumento_id = value;
                    OnPropertyChanged("tipoDocumento_id");
                }
            }
        }
        private Nullable<int> _tipoDocumento_id;
    
        [DataMember]
        public string telefono
        {
            get { return _telefono; }
            set
            {
                if (_telefono != value)
                {
                    _telefono = value;
                    OnPropertyChanged("telefono");
                }
            }
        }
        private string _telefono;
    
        [DataMember]
        public string direccion
        {
            get { return _direccion; }
            set
            {
                if (_direccion != value)
                {
                    _direccion = value;
                    OnPropertyChanged("direccion");
                }
            }
        }
        private string _direccion;
    
        [DataMember]
        public Nullable<int> segmento_id
        {
            get { return _segmento_id; }
            set
            {
                if (_segmento_id != value)
                {
                    ChangeTracker.RecordOriginalValue("segmento_id", _segmento_id);
                    if (!IsDeserializing)
                    {
                        if (Segmento != null && Segmento.id != value)
                        {
                            Segmento = null;
                        }
                    }
                    _segmento_id = value;
                    OnPropertyChanged("segmento_id");
                }
            }
        }
        private Nullable<int> _segmento_id;
    
        [DataMember]
        public Nullable<bool> GP
        {
            get { return _gP; }
            set
            {
                if (_gP != value)
                {
                    _gP = value;
                    OnPropertyChanged("GP");
                }
            }
        }
        private Nullable<bool> _gP;
    
        [DataMember]
        public Nullable<int> porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private Nullable<int> _porcentajeParticipacion;
    
        [DataMember]
        public Nullable<int> porcentajeSalario
        {
            get { return _porcentajeSalario; }
            set
            {
                if (_porcentajeSalario != value)
                {
                    _porcentajeSalario = value;
                    OnPropertyChanged("porcentajeSalario");
                }
            }
        }
        private Nullable<int> _porcentajeSalario;
    
        [DataMember]
        public Nullable<int> canaldetalle_id
        {
            get { return _canaldetalle_id; }
            set
            {
                if (_canaldetalle_id != value)
                {
                    _canaldetalle_id = value;
                    OnPropertyChanged("canaldetalle_id");
                }
            }
        }
        private Nullable<int> _canaldetalle_id;
    
        [DataMember]
        public Nullable<int> TipoIntermediario
        {
            get { return _tipoIntermediario; }
            set
            {
                if (_tipoIntermediario != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoIntermediario", _tipoIntermediario);
                    if (!IsDeserializing)
                    {
                        if (TipoIntermediario1 != null && TipoIntermediario1.Id != value)
                        {
                            TipoIntermediario1 = null;
                        }
                    }
                    _tipoIntermediario = value;
                    OnPropertyChanged("TipoIntermediario");
                }
            }
        }
        private Nullable<int> _tipoIntermediario;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Anticipo> Anticipoes
        {
            get
            {
                if (_anticipoes == null)
                {
                    _anticipoes = new TrackableCollection<Anticipo>();
                    _anticipoes.CollectionChanged += FixupAnticipoes;
                }
                return _anticipoes;
            }
            set
            {
                if (!ReferenceEquals(_anticipoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_anticipoes != null)
                    {
                        _anticipoes.CollectionChanged -= FixupAnticipoes;
                    }
                    _anticipoes = value;
                    if (_anticipoes != null)
                    {
                        _anticipoes.CollectionChanged += FixupAnticipoes;
                    }
                    OnNavigationPropertyChanged("Anticipoes");
                }
            }
        }
        private TrackableCollection<Anticipo> _anticipoes;
    
        [DataMember]
        public TrackableCollection<BasexParticipante> BasexParticipantes
        {
            get
            {
                if (_basexParticipantes == null)
                {
                    _basexParticipantes = new TrackableCollection<BasexParticipante>();
                    _basexParticipantes.CollectionChanged += FixupBasexParticipantes;
                }
                return _basexParticipantes;
            }
            set
            {
                if (!ReferenceEquals(_basexParticipantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_basexParticipantes != null)
                    {
                        _basexParticipantes.CollectionChanged -= FixupBasexParticipantes;
                    }
                    _basexParticipantes = value;
                    if (_basexParticipantes != null)
                    {
                        _basexParticipantes.CollectionChanged += FixupBasexParticipantes;
                    }
                    OnNavigationPropertyChanged("BasexParticipantes");
                }
            }
        }
        private TrackableCollection<BasexParticipante> _basexParticipantes;
    
        [DataMember]
        public Canal Canal
        {
            get { return _canal; }
            set
            {
                if (!ReferenceEquals(_canal, value))
                {
                    var previousValue = _canal;
                    _canal = value;
                    FixupCanal(previousValue);
                    OnNavigationPropertyChanged("Canal");
                }
            }
        }
        private Canal _canal;
    
        [DataMember]
        public Categoria Categoria
        {
            get { return _categoria; }
            set
            {
                if (!ReferenceEquals(_categoria, value))
                {
                    var previousValue = _categoria;
                    _categoria = value;
                    FixupCategoria(previousValue);
                    OnNavigationPropertyChanged("Categoria");
                }
            }
        }
        private Categoria _categoria;
    
        [DataMember]
        public TrackableCollection<Comision> Comisions
        {
            get
            {
                if (_comisions == null)
                {
                    _comisions = new TrackableCollection<Comision>();
                    _comisions.CollectionChanged += FixupComisions;
                }
                return _comisions;
            }
            set
            {
                if (!ReferenceEquals(_comisions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged -= FixupComisions;
                    }
                    _comisions = value;
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged += FixupComisions;
                    }
                    OnNavigationPropertyChanged("Comisions");
                }
            }
        }
        private TrackableCollection<Comision> _comisions;
    
        [DataMember]
        public TrackableCollection<ComisionVariableAsesor> ComisionVariableAsesors
        {
            get
            {
                if (_comisionVariableAsesors == null)
                {
                    _comisionVariableAsesors = new TrackableCollection<ComisionVariableAsesor>();
                    _comisionVariableAsesors.CollectionChanged += FixupComisionVariableAsesors;
                }
                return _comisionVariableAsesors;
            }
            set
            {
                if (!ReferenceEquals(_comisionVariableAsesors, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisionVariableAsesors != null)
                    {
                        _comisionVariableAsesors.CollectionChanged -= FixupComisionVariableAsesors;
                    }
                    _comisionVariableAsesors = value;
                    if (_comisionVariableAsesors != null)
                    {
                        _comisionVariableAsesors.CollectionChanged += FixupComisionVariableAsesors;
                    }
                    OnNavigationPropertyChanged("ComisionVariableAsesors");
                }
            }
        }
        private TrackableCollection<ComisionVariableAsesor> _comisionVariableAsesors;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;
    
        [DataMember]
        public TrackableCollection<DetalleLiquidacion> DetalleLiquidacions
        {
            get
            {
                if (_detalleLiquidacions == null)
                {
                    _detalleLiquidacions = new TrackableCollection<DetalleLiquidacion>();
                    _detalleLiquidacions.CollectionChanged += FixupDetalleLiquidacions;
                }
                return _detalleLiquidacions;
            }
            set
            {
                if (!ReferenceEquals(_detalleLiquidacions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detalleLiquidacions != null)
                    {
                        _detalleLiquidacions.CollectionChanged -= FixupDetalleLiquidacions;
                    }
                    _detalleLiquidacions = value;
                    if (_detalleLiquidacions != null)
                    {
                        _detalleLiquidacions.CollectionChanged += FixupDetalleLiquidacions;
                    }
                    OnNavigationPropertyChanged("DetalleLiquidacions");
                }
            }
        }
        private TrackableCollection<DetalleLiquidacion> _detalleLiquidacions;
    
        [DataMember]
        public EstadoParticipante EstadoParticipante
        {
            get { return _estadoParticipante; }
            set
            {
                if (!ReferenceEquals(_estadoParticipante, value))
                {
                    var previousValue = _estadoParticipante;
                    _estadoParticipante = value;
                    FixupEstadoParticipante(previousValue);
                    OnNavigationPropertyChanged("EstadoParticipante");
                }
            }
        }
        private EstadoParticipante _estadoParticipante;
    
        [DataMember]
        public TrackableCollection<Excepcion> Excepcions
        {
            get
            {
                if (_excepcions == null)
                {
                    _excepcions = new TrackableCollection<Excepcion>();
                    _excepcions.CollectionChanged += FixupExcepcions;
                }
                return _excepcions;
            }
            set
            {
                if (!ReferenceEquals(_excepcions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged -= FixupExcepcions;
                    }
                    _excepcions = value;
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged += FixupExcepcions;
                    }
                    OnNavigationPropertyChanged("Excepcions");
                }
            }
        }
        private TrackableCollection<Excepcion> _excepcions;
    
        [DataMember]
        public TrackableCollection<ExcepcionFijaVariable> ExcepcionFijaVariables
        {
            get
            {
                if (_excepcionFijaVariables == null)
                {
                    _excepcionFijaVariables = new TrackableCollection<ExcepcionFijaVariable>();
                    _excepcionFijaVariables.CollectionChanged += FixupExcepcionFijaVariables;
                }
                return _excepcionFijaVariables;
            }
            set
            {
                if (!ReferenceEquals(_excepcionFijaVariables, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionFijaVariables != null)
                    {
                        _excepcionFijaVariables.CollectionChanged -= FixupExcepcionFijaVariables;
                    }
                    _excepcionFijaVariables = value;
                    if (_excepcionFijaVariables != null)
                    {
                        _excepcionFijaVariables.CollectionChanged += FixupExcepcionFijaVariables;
                    }
                    OnNavigationPropertyChanged("ExcepcionFijaVariables");
                }
            }
        }
        private TrackableCollection<ExcepcionFijaVariable> _excepcionFijaVariables;
    
        [DataMember]
        public TrackableCollection<ExcepcionPenalizacion> ExcepcionPenalizacions
        {
            get
            {
                if (_excepcionPenalizacions == null)
                {
                    _excepcionPenalizacions = new TrackableCollection<ExcepcionPenalizacion>();
                    _excepcionPenalizacions.CollectionChanged += FixupExcepcionPenalizacions;
                }
                return _excepcionPenalizacions;
            }
            set
            {
                if (!ReferenceEquals(_excepcionPenalizacions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionPenalizacions != null)
                    {
                        _excepcionPenalizacions.CollectionChanged -= FixupExcepcionPenalizacions;
                    }
                    _excepcionPenalizacions = value;
                    if (_excepcionPenalizacions != null)
                    {
                        _excepcionPenalizacions.CollectionChanged += FixupExcepcionPenalizacions;
                    }
                    OnNavigationPropertyChanged("ExcepcionPenalizacions");
                }
            }
        }
        private TrackableCollection<ExcepcionPenalizacion> _excepcionPenalizacions;
    
        [DataMember]
        public TrackableCollection<ExcepcionPenalizacion> ExcepcionPenalizacions1
        {
            get
            {
                if (_excepcionPenalizacions1 == null)
                {
                    _excepcionPenalizacions1 = new TrackableCollection<ExcepcionPenalizacion>();
                    _excepcionPenalizacions1.CollectionChanged += FixupExcepcionPenalizacions1;
                }
                return _excepcionPenalizacions1;
            }
            set
            {
                if (!ReferenceEquals(_excepcionPenalizacions1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionPenalizacions1 != null)
                    {
                        _excepcionPenalizacions1.CollectionChanged -= FixupExcepcionPenalizacions1;
                    }
                    _excepcionPenalizacions1 = value;
                    if (_excepcionPenalizacions1 != null)
                    {
                        _excepcionPenalizacions1.CollectionChanged += FixupExcepcionPenalizacions1;
                    }
                    OnNavigationPropertyChanged("ExcepcionPenalizacions1");
                }
            }
        }
        private TrackableCollection<ExcepcionPenalizacion> _excepcionPenalizacions1;
    
        [DataMember]
        public TrackableCollection<JerarquiaDetalle> JerarquiaDetalles
        {
            get
            {
                if (_jerarquiaDetalles == null)
                {
                    _jerarquiaDetalles = new TrackableCollection<JerarquiaDetalle>();
                    _jerarquiaDetalles.CollectionChanged += FixupJerarquiaDetalles;
                }
                return _jerarquiaDetalles;
            }
            set
            {
                if (!ReferenceEquals(_jerarquiaDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_jerarquiaDetalles != null)
                    {
                        _jerarquiaDetalles.CollectionChanged -= FixupJerarquiaDetalles;
                    }
                    _jerarquiaDetalles = value;
                    if (_jerarquiaDetalles != null)
                    {
                        _jerarquiaDetalles.CollectionChanged += FixupJerarquiaDetalles;
                    }
                    OnNavigationPropertyChanged("JerarquiaDetalles");
                }
            }
        }
        private TrackableCollection<JerarquiaDetalle> _jerarquiaDetalles;
    
        [DataMember]
        public TrackableCollection<LiquidacionMoneda> LiquidacionMonedas
        {
            get
            {
                if (_liquidacionMonedas == null)
                {
                    _liquidacionMonedas = new TrackableCollection<LiquidacionMoneda>();
                    _liquidacionMonedas.CollectionChanged += FixupLiquidacionMonedas;
                }
                return _liquidacionMonedas;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionMonedas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionMonedas != null)
                    {
                        _liquidacionMonedas.CollectionChanged -= FixupLiquidacionMonedas;
                    }
                    _liquidacionMonedas = value;
                    if (_liquidacionMonedas != null)
                    {
                        _liquidacionMonedas.CollectionChanged += FixupLiquidacionMonedas;
                    }
                    OnNavigationPropertyChanged("LiquidacionMonedas");
                }
            }
        }
        private TrackableCollection<LiquidacionMoneda> _liquidacionMonedas;
    
        [DataMember]
        public TrackableCollection<LiquidacionReglaDetalleCondicion> LiquidacionReglaDetalleCondicions
        {
            get
            {
                if (_liquidacionReglaDetalleCondicions == null)
                {
                    _liquidacionReglaDetalleCondicions = new TrackableCollection<LiquidacionReglaDetalleCondicion>();
                    _liquidacionReglaDetalleCondicions.CollectionChanged += FixupLiquidacionReglaDetalleCondicions;
                }
                return _liquidacionReglaDetalleCondicions;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionReglaDetalleCondicions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionReglaDetalleCondicions != null)
                    {
                        _liquidacionReglaDetalleCondicions.CollectionChanged -= FixupLiquidacionReglaDetalleCondicions;
                    }
                    _liquidacionReglaDetalleCondicions = value;
                    if (_liquidacionReglaDetalleCondicions != null)
                    {
                        _liquidacionReglaDetalleCondicions.CollectionChanged += FixupLiquidacionReglaDetalleCondicions;
                    }
                    OnNavigationPropertyChanged("LiquidacionReglaDetalleCondicions");
                }
            }
        }
        private TrackableCollection<LiquidacionReglaDetalleCondicion> _liquidacionReglaDetalleCondicions;
    
        [DataMember]
        public TrackableCollection<LiquidacionReglaPremio> LiquidacionReglaPremios
        {
            get
            {
                if (_liquidacionReglaPremios == null)
                {
                    _liquidacionReglaPremios = new TrackableCollection<LiquidacionReglaPremio>();
                    _liquidacionReglaPremios.CollectionChanged += FixupLiquidacionReglaPremios;
                }
                return _liquidacionReglaPremios;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionReglaPremios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionReglaPremios != null)
                    {
                        _liquidacionReglaPremios.CollectionChanged -= FixupLiquidacionReglaPremios;
                    }
                    _liquidacionReglaPremios = value;
                    if (_liquidacionReglaPremios != null)
                    {
                        _liquidacionReglaPremios.CollectionChanged += FixupLiquidacionReglaPremios;
                    }
                    OnNavigationPropertyChanged("LiquidacionReglaPremios");
                }
            }
        }
        private TrackableCollection<LiquidacionReglaPremio> _liquidacionReglaPremios;
    
        [DataMember]
        public TrackableCollection<LiquidacionReglaxParticipante> LiquidacionReglaxParticipantes
        {
            get
            {
                if (_liquidacionReglaxParticipantes == null)
                {
                    _liquidacionReglaxParticipantes = new TrackableCollection<LiquidacionReglaxParticipante>();
                    _liquidacionReglaxParticipantes.CollectionChanged += FixupLiquidacionReglaxParticipantes;
                }
                return _liquidacionReglaxParticipantes;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionReglaxParticipantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionReglaxParticipantes != null)
                    {
                        _liquidacionReglaxParticipantes.CollectionChanged -= FixupLiquidacionReglaxParticipantes;
                    }
                    _liquidacionReglaxParticipantes = value;
                    if (_liquidacionReglaxParticipantes != null)
                    {
                        _liquidacionReglaxParticipantes.CollectionChanged += FixupLiquidacionReglaxParticipantes;
                    }
                    OnNavigationPropertyChanged("LiquidacionReglaxParticipantes");
                }
            }
        }
        private TrackableCollection<LiquidacionReglaxParticipante> _liquidacionReglaxParticipantes;
    
        [DataMember]
        public Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                    OnNavigationPropertyChanged("Localidad");
                }
            }
        }
        private Localidad _localidad;
    
        [DataMember]
        public Nivel Nivel
        {
            get { return _nivel; }
            set
            {
                if (!ReferenceEquals(_nivel, value))
                {
                    var previousValue = _nivel;
                    _nivel = value;
                    FixupNivel(previousValue);
                    OnNavigationPropertyChanged("Nivel");
                }
            }
        }
        private Nivel _nivel;
    
        [DataMember]
        public TrackableCollection<Recaudo> Recaudoes
        {
            get
            {
                if (_recaudoes == null)
                {
                    _recaudoes = new TrackableCollection<Recaudo>();
                    _recaudoes.CollectionChanged += FixupRecaudoes;
                }
                return _recaudoes;
            }
            set
            {
                if (!ReferenceEquals(_recaudoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged -= FixupRecaudoes;
                    }
                    _recaudoes = value;
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged += FixupRecaudoes;
                    }
                    OnNavigationPropertyChanged("Recaudoes");
                }
            }
        }
        private TrackableCollection<Recaudo> _recaudoes;
    
        [DataMember]
        public TipoDocumento TipoDocumento
        {
            get { return _tipoDocumento; }
            set
            {
                if (!ReferenceEquals(_tipoDocumento, value))
                {
                    var previousValue = _tipoDocumento;
                    _tipoDocumento = value;
                    FixupTipoDocumento(previousValue);
                    OnNavigationPropertyChanged("TipoDocumento");
                }
            }
        }
        private TipoDocumento _tipoDocumento;
    
        [DataMember]
        public TipoParticipante TipoParticipante
        {
            get { return _tipoParticipante; }
            set
            {
                if (!ReferenceEquals(_tipoParticipante, value))
                {
                    var previousValue = _tipoParticipante;
                    _tipoParticipante = value;
                    FixupTipoParticipante(previousValue);
                    OnNavigationPropertyChanged("TipoParticipante");
                }
            }
        }
        private TipoParticipante _tipoParticipante;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public TrackableCollection<ParticipanteConcurso> ParticipanteConcursoes
        {
            get
            {
                if (_participanteConcursoes == null)
                {
                    _participanteConcursoes = new TrackableCollection<ParticipanteConcurso>();
                    _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                }
                return _participanteConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_participanteConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged -= FixupParticipanteConcursoes;
                    }
                    _participanteConcursoes = value;
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                    }
                    OnNavigationPropertyChanged("ParticipanteConcursoes");
                }
            }
        }
        private TrackableCollection<ParticipanteConcurso> _participanteConcursoes;
    
        [DataMember]
        public TrackableCollection<ParticipantexNivel> ParticipantexNivels
        {
            get
            {
                if (_participantexNivels == null)
                {
                    _participantexNivels = new TrackableCollection<ParticipantexNivel>();
                    _participantexNivels.CollectionChanged += FixupParticipantexNivels;
                }
                return _participantexNivels;
            }
            set
            {
                if (!ReferenceEquals(_participantexNivels, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participantexNivels != null)
                    {
                        _participantexNivels.CollectionChanged -= FixupParticipantexNivels;
                    }
                    _participantexNivels = value;
                    if (_participantexNivels != null)
                    {
                        _participantexNivels.CollectionChanged += FixupParticipantexNivels;
                    }
                    OnNavigationPropertyChanged("ParticipantexNivels");
                }
            }
        }
        private TrackableCollection<ParticipantexNivel> _participantexNivels;
    
        [DataMember]
        public TrackableCollection<Persistencia> Persistencias
        {
            get
            {
                if (_persistencias == null)
                {
                    _persistencias = new TrackableCollection<Persistencia>();
                    _persistencias.CollectionChanged += FixupPersistencias;
                }
                return _persistencias;
            }
            set
            {
                if (!ReferenceEquals(_persistencias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistencias != null)
                    {
                        _persistencias.CollectionChanged -= FixupPersistencias;
                    }
                    _persistencias = value;
                    if (_persistencias != null)
                    {
                        _persistencias.CollectionChanged += FixupPersistencias;
                    }
                    OnNavigationPropertyChanged("Persistencias");
                }
            }
        }
        private TrackableCollection<Persistencia> _persistencias;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIPeriodo> PersistenciadeCAPIPeriodoes
        {
            get
            {
                if (_persistenciadeCAPIPeriodoes == null)
                {
                    _persistenciadeCAPIPeriodoes = new TrackableCollection<PersistenciadeCAPIPeriodo>();
                    _persistenciadeCAPIPeriodoes.CollectionChanged += FixupPersistenciadeCAPIPeriodoes;
                }
                return _persistenciadeCAPIPeriodoes;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIPeriodoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIPeriodoes != null)
                    {
                        _persistenciadeCAPIPeriodoes.CollectionChanged -= FixupPersistenciadeCAPIPeriodoes;
                    }
                    _persistenciadeCAPIPeriodoes = value;
                    if (_persistenciadeCAPIPeriodoes != null)
                    {
                        _persistenciadeCAPIPeriodoes.CollectionChanged += FixupPersistenciadeCAPIPeriodoes;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIPeriodoes");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIPeriodo> _persistenciadeCAPIPeriodoes;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIDetalle> PersistenciadeCAPIDetalles
        {
            get
            {
                if (_persistenciadeCAPIDetalles == null)
                {
                    _persistenciadeCAPIDetalles = new TrackableCollection<PersistenciadeCAPIDetalle>();
                    _persistenciadeCAPIDetalles.CollectionChanged += FixupPersistenciadeCAPIDetalles;
                }
                return _persistenciadeCAPIDetalles;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIDetalles != null)
                    {
                        _persistenciadeCAPIDetalles.CollectionChanged -= FixupPersistenciadeCAPIDetalles;
                    }
                    _persistenciadeCAPIDetalles = value;
                    if (_persistenciadeCAPIDetalles != null)
                    {
                        _persistenciadeCAPIDetalles.CollectionChanged += FixupPersistenciadeCAPIDetalles;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIDetalles");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIDetalle> _persistenciadeCAPIDetalles;
    
        [DataMember]
        public Segmento Segmento
        {
            get { return _segmento; }
            set
            {
                if (!ReferenceEquals(_segmento, value))
                {
                    var previousValue = _segmento;
                    _segmento = value;
                    FixupSegmento(previousValue);
                    OnNavigationPropertyChanged("Segmento");
                }
            }
        }
        private Segmento _segmento;
    
        [DataMember]
        public TrackableCollection<Siniestralidad> Siniestralidads
        {
            get
            {
                if (_siniestralidads == null)
                {
                    _siniestralidads = new TrackableCollection<Siniestralidad>();
                    _siniestralidads.CollectionChanged += FixupSiniestralidads;
                }
                return _siniestralidads;
            }
            set
            {
                if (!ReferenceEquals(_siniestralidads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged -= FixupSiniestralidads;
                    }
                    _siniestralidads = value;
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged += FixupSiniestralidads;
                    }
                    OnNavigationPropertyChanged("Siniestralidads");
                }
            }
        }
        private TrackableCollection<Siniestralidad> _siniestralidads;
    
        [DataMember]
        public TipoIntermediario TipoIntermediario1
        {
            get { return _tipoIntermediario1; }
            set
            {
                if (!ReferenceEquals(_tipoIntermediario1, value))
                {
                    var previousValue = _tipoIntermediario1;
                    _tipoIntermediario1 = value;
                    FixupTipoIntermediario1(previousValue);
                    OnNavigationPropertyChanged("TipoIntermediario1");
                }
            }
        }
        private TipoIntermediario _tipoIntermediario1;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIAcumulada> PersistenciadeCAPIAcumuladas
        {
            get
            {
                if (_persistenciadeCAPIAcumuladas == null)
                {
                    _persistenciadeCAPIAcumuladas = new TrackableCollection<PersistenciadeCAPIAcumulada>();
                    _persistenciadeCAPIAcumuladas.CollectionChanged += FixupPersistenciadeCAPIAcumuladas;
                }
                return _persistenciadeCAPIAcumuladas;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIAcumuladas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIAcumuladas != null)
                    {
                        _persistenciadeCAPIAcumuladas.CollectionChanged -= FixupPersistenciadeCAPIAcumuladas;
                    }
                    _persistenciadeCAPIAcumuladas = value;
                    if (_persistenciadeCAPIAcumuladas != null)
                    {
                        _persistenciadeCAPIAcumuladas.CollectionChanged += FixupPersistenciadeCAPIAcumuladas;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIAcumuladas");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIAcumulada> _persistenciadeCAPIAcumuladas;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Anticipoes.Clear();
            BasexParticipantes.Clear();
            Canal = null;
            Categoria = null;
            Comisions.Clear();
            ComisionVariableAsesors.Clear();
            Compania = null;
            DetalleLiquidacions.Clear();
            EstadoParticipante = null;
            Excepcions.Clear();
            ExcepcionFijaVariables.Clear();
            ExcepcionPenalizacions.Clear();
            ExcepcionPenalizacions1.Clear();
            JerarquiaDetalles.Clear();
            LiquidacionMonedas.Clear();
            LiquidacionReglaDetalleCondicions.Clear();
            LiquidacionReglaPremios.Clear();
            LiquidacionReglaxParticipantes.Clear();
            Localidad = null;
            Nivel = null;
            Recaudoes.Clear();
            TipoDocumento = null;
            TipoParticipante = null;
            Zona = null;
            ParticipanteConcursoes.Clear();
            ParticipantexNivels.Clear();
            Persistencias.Clear();
            PersistenciadeCAPIPeriodoes.Clear();
            PersistenciadeCAPIDetalles.Clear();
            Segmento = null;
            Siniestralidads.Clear();
            TipoIntermediario1 = null;
            PersistenciadeCAPIAcumuladas.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupCanal(Canal previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (Canal != null)
            {
                if (!Canal.Participantes.Contains(this))
                {
                    Canal.Participantes.Add(this);
                }
    
                canal_id = Canal.id;
            }
            else if (!skipKeys)
            {
                canal_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Canal")
                    && (ChangeTracker.OriginalValues["Canal"] == Canal))
                {
                    ChangeTracker.OriginalValues.Remove("Canal");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Canal", previousValue);
                }
                if (Canal != null && !Canal.ChangeTracker.ChangeTrackingEnabled)
                {
                    Canal.StartTracking();
                }
            }
        }
    
        private void FixupCategoria(Categoria previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (Categoria != null)
            {
                if (!Categoria.Participantes.Contains(this))
                {
                    Categoria.Participantes.Add(this);
                }
    
                categoria_id = Categoria.id;
            }
            else if (!skipKeys)
            {
                categoria_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Categoria")
                    && (ChangeTracker.OriginalValues["Categoria"] == Categoria))
                {
                    ChangeTracker.OriginalValues.Remove("Categoria");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Categoria", previousValue);
                }
                if (Categoria != null && !Categoria.ChangeTracker.ChangeTrackingEnabled)
                {
                    Categoria.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.Participantes.Contains(this))
                {
                    Compania.Participantes.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }
    
        private void FixupEstadoParticipante(EstadoParticipante previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (EstadoParticipante != null)
            {
                if (!EstadoParticipante.Participantes.Contains(this))
                {
                    EstadoParticipante.Participantes.Add(this);
                }
    
                estadoParticipante_id = EstadoParticipante.id;
            }
            else if (!skipKeys)
            {
                estadoParticipante_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("EstadoParticipante")
                    && (ChangeTracker.OriginalValues["EstadoParticipante"] == EstadoParticipante))
                {
                    ChangeTracker.OriginalValues.Remove("EstadoParticipante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("EstadoParticipante", previousValue);
                }
                if (EstadoParticipante != null && !EstadoParticipante.ChangeTracker.ChangeTrackingEnabled)
                {
                    EstadoParticipante.StartTracking();
                }
            }
        }
    
        private void FixupLocalidad(Localidad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.Participantes.Contains(this))
                {
                    Localidad.Participantes.Add(this);
                }
    
                localidad_id = Localidad.id;
            }
            else if (!skipKeys)
            {
                localidad_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localidad")
                    && (ChangeTracker.OriginalValues["Localidad"] == Localidad))
                {
                    ChangeTracker.OriginalValues.Remove("Localidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localidad", previousValue);
                }
                if (Localidad != null && !Localidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localidad.StartTracking();
                }
            }
        }
    
        private void FixupNivel(Nivel previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (Nivel != null)
            {
                if (!Nivel.Participantes.Contains(this))
                {
                    Nivel.Participantes.Add(this);
                }
    
                nivel_id = Nivel.id;
            }
            else if (!skipKeys)
            {
                nivel_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Nivel")
                    && (ChangeTracker.OriginalValues["Nivel"] == Nivel))
                {
                    ChangeTracker.OriginalValues.Remove("Nivel");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Nivel", previousValue);
                }
                if (Nivel != null && !Nivel.ChangeTracker.ChangeTrackingEnabled)
                {
                    Nivel.StartTracking();
                }
            }
        }
    
        private void FixupTipoDocumento(TipoDocumento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (TipoDocumento != null)
            {
                if (!TipoDocumento.Participantes.Contains(this))
                {
                    TipoDocumento.Participantes.Add(this);
                }
    
                tipoDocumento_id = TipoDocumento.id;
            }
            else if (!skipKeys)
            {
                tipoDocumento_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoDocumento")
                    && (ChangeTracker.OriginalValues["TipoDocumento"] == TipoDocumento))
                {
                    ChangeTracker.OriginalValues.Remove("TipoDocumento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoDocumento", previousValue);
                }
                if (TipoDocumento != null && !TipoDocumento.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoDocumento.StartTracking();
                }
            }
        }
    
        private void FixupTipoParticipante(TipoParticipante previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (TipoParticipante != null)
            {
                if (!TipoParticipante.Participantes.Contains(this))
                {
                    TipoParticipante.Participantes.Add(this);
                }
    
                tipoParticipante_id = TipoParticipante.id;
            }
            else if (!skipKeys)
            {
                tipoParticipante_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoParticipante")
                    && (ChangeTracker.OriginalValues["TipoParticipante"] == TipoParticipante))
                {
                    ChangeTracker.OriginalValues.Remove("TipoParticipante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoParticipante", previousValue);
                }
                if (TipoParticipante != null && !TipoParticipante.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoParticipante.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.Participantes.Contains(this))
                {
                    Zona.Participantes.Add(this);
                }
    
                zona_id = Zona.id;
            }
            else if (!skipKeys)
            {
                zona_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupSegmento(Segmento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (Segmento != null)
            {
                if (!Segmento.Participantes.Contains(this))
                {
                    Segmento.Participantes.Add(this);
                }
    
                segmento_id = Segmento.id;
            }
            else if (!skipKeys)
            {
                segmento_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Segmento")
                    && (ChangeTracker.OriginalValues["Segmento"] == Segmento))
                {
                    ChangeTracker.OriginalValues.Remove("Segmento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Segmento", previousValue);
                }
                if (Segmento != null && !Segmento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Segmento.StartTracking();
                }
            }
        }
    
        private void FixupTipoIntermediario1(TipoIntermediario previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Participantes.Contains(this))
            {
                previousValue.Participantes.Remove(this);
            }
    
            if (TipoIntermediario1 != null)
            {
                if (!TipoIntermediario1.Participantes.Contains(this))
                {
                    TipoIntermediario1.Participantes.Add(this);
                }
    
                TipoIntermediario = TipoIntermediario1.Id;
            }
            else if (!skipKeys)
            {
                TipoIntermediario = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoIntermediario1")
                    && (ChangeTracker.OriginalValues["TipoIntermediario1"] == TipoIntermediario1))
                {
                    ChangeTracker.OriginalValues.Remove("TipoIntermediario1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoIntermediario1", previousValue);
                }
                if (TipoIntermediario1 != null && !TipoIntermediario1.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoIntermediario1.StartTracking();
                }
            }
        }
    
        private void FixupAnticipoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Anticipo item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Anticipoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Anticipo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Anticipoes", item);
                    }
                }
            }
        }
    
        private void FixupBasexParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BasexParticipante item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BasexParticipantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BasexParticipante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BasexParticipantes", item);
                    }
                }
            }
        }
    
        private void FixupComisions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Comision item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Comisions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comision item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Comisions", item);
                    }
                }
            }
        }
    
        private void FixupComisionVariableAsesors(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ComisionVariableAsesor item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ComisionVariableAsesors", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ComisionVariableAsesor item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ComisionVariableAsesors", item);
                    }
                }
            }
        }
    
        private void FixupDetalleLiquidacions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetalleLiquidacion item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetalleLiquidacions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetalleLiquidacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetalleLiquidacions", item);
                    }
                }
            }
        }
    
        private void FixupExcepcions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Excepcion item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Excepcions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Excepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Excepcions", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionFijaVariables(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionFijaVariable item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionFijaVariables", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionFijaVariable item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionFijaVariables", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionPenalizacions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionPenalizacion item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionPenalizacions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionPenalizacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionPenalizacions", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionPenalizacions1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionPenalizacion item in e.NewItems)
                {
                    item.Participante1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionPenalizacions1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionPenalizacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante1, this))
                    {
                        item.Participante1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionPenalizacions1", item);
                    }
                }
            }
        }
    
        private void FixupJerarquiaDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JerarquiaDetalle item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JerarquiaDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JerarquiaDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JerarquiaDetalles", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionMonedas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionMoneda item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionMonedas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionMoneda item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionMonedas", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionReglaDetalleCondicions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionReglaDetalleCondicion item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionReglaDetalleCondicions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionReglaDetalleCondicion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionReglaDetalleCondicions", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionReglaPremios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionReglaPremio item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionReglaPremios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionReglaPremio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionReglaPremios", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionReglaxParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionReglaxParticipante item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionReglaxParticipantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionReglaxParticipante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionReglaxParticipantes", item);
                    }
                }
            }
        }
    
        private void FixupRecaudoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Recaudo item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Recaudoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recaudo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Recaudoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipanteConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipanteConcurso item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipanteConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipantexNivels(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipantexNivel item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipantexNivels", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipantexNivel item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipantexNivels", item);
                    }
                }
            }
        }
    
        private void FixupPersistencias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Persistencia item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Persistencias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Persistencia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Persistencias", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIPeriodoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIPeriodo item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIPeriodoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIPeriodo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIPeriodoes", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIDetalle item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIDetalles", item);
                    }
                }
            }
        }
    
        private void FixupSiniestralidads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Siniestralidad item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Siniestralidads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Siniestralidad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Siniestralidads", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIAcumuladas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIAcumulada item in e.NewItems)
                {
                    item.Participante = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIAcumuladas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIAcumulada item in e.OldItems)
                {
                    if (ReferenceEquals(item.Participante, this))
                    {
                        item.Participante = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIAcumuladas", item);
                    }
                }
            }
        }

        #endregion
    }
}
