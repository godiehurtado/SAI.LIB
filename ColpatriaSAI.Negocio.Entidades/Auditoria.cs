//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(EventoTabla))]
    [KnownType(typeof(TablaAuditada))]
    [KnownType(typeof(Segmento))]
    public partial class Auditoria: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private long _id;
    
        [DataMember]
        public int id_TablaAuditada
        {
            get { return _id_TablaAuditada; }
            set
            {
                if (_id_TablaAuditada != value)
                {
                    ChangeTracker.RecordOriginalValue("id_TablaAuditada", _id_TablaAuditada);
                    if (!IsDeserializing)
                    {
                        if (TablaAuditada != null && TablaAuditada.id != value)
                        {
                            TablaAuditada = null;
                        }
                    }
                    _id_TablaAuditada = value;
                    OnPropertyChanged("id_TablaAuditada");
                }
            }
        }
        private int _id_TablaAuditada;
    
        [DataMember]
        public string Usuario
        {
            get { return _usuario; }
            set
            {
                if (_usuario != value)
                {
                    _usuario = value;
                    OnPropertyChanged("Usuario");
                }
            }
        }
        private string _usuario;
    
        [DataMember]
        public System.DateTime Fecha
        {
            get { return _fecha; }
            set
            {
                if (_fecha != value)
                {
                    _fecha = value;
                    OnPropertyChanged("Fecha");
                }
            }
        }
        private System.DateTime _fecha;
    
        [DataMember]
        public int id_EventoTabla
        {
            get { return _id_EventoTabla; }
            set
            {
                if (_id_EventoTabla != value)
                {
                    ChangeTracker.RecordOriginalValue("id_EventoTabla", _id_EventoTabla);
                    if (!IsDeserializing)
                    {
                        if (EventoTabla != null && EventoTabla.id != value)
                        {
                            EventoTabla = null;
                        }
                    }
                    _id_EventoTabla = value;
                    OnPropertyChanged("id_EventoTabla");
                }
            }
        }
        private int _id_EventoTabla;
    
        [DataMember]
        public string Version_Anterior
        {
            get { return _version_Anterior; }
            set
            {
                if (_version_Anterior != value)
                {
                    _version_Anterior = value;
                    OnPropertyChanged("Version_Anterior");
                }
            }
        }
        private string _version_Anterior;
    
        [DataMember]
        public string Version_Nueva
        {
            get { return _version_Nueva; }
            set
            {
                if (_version_Nueva != value)
                {
                    _version_Nueva = value;
                    OnPropertyChanged("Version_Nueva");
                }
            }
        }
        private string _version_Nueva;
    
        [DataMember]
        public int id_Segmento
        {
            get { return _id_Segmento; }
            set
            {
                if (_id_Segmento != value)
                {
                    ChangeTracker.RecordOriginalValue("id_Segmento", _id_Segmento);
                    if (!IsDeserializing)
                    {
                        if (Segmento != null && Segmento.id != value)
                        {
                            Segmento = null;
                        }
                    }
                    _id_Segmento = value;
                    OnPropertyChanged("id_Segmento");
                }
            }
        }
        private int _id_Segmento;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public EventoTabla EventoTabla
        {
            get { return _eventoTabla; }
            set
            {
                if (!ReferenceEquals(_eventoTabla, value))
                {
                    var previousValue = _eventoTabla;
                    _eventoTabla = value;
                    FixupEventoTabla(previousValue);
                    OnNavigationPropertyChanged("EventoTabla");
                }
            }
        }
        private EventoTabla _eventoTabla;
    
        [DataMember]
        public TablaAuditada TablaAuditada
        {
            get { return _tablaAuditada; }
            set
            {
                if (!ReferenceEquals(_tablaAuditada, value))
                {
                    var previousValue = _tablaAuditada;
                    _tablaAuditada = value;
                    FixupTablaAuditada(previousValue);
                    OnNavigationPropertyChanged("TablaAuditada");
                }
            }
        }
        private TablaAuditada _tablaAuditada;
    
        [DataMember]
        public Segmento Segmento
        {
            get { return _segmento; }
            set
            {
                if (!ReferenceEquals(_segmento, value))
                {
                    var previousValue = _segmento;
                    _segmento = value;
                    FixupSegmento(previousValue);
                    OnNavigationPropertyChanged("Segmento");
                }
            }
        }
        private Segmento _segmento;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            EventoTabla = null;
            TablaAuditada = null;
            Segmento = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupEventoTabla(EventoTabla previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Auditorias.Contains(this))
            {
                previousValue.Auditorias.Remove(this);
            }
    
            if (EventoTabla != null)
            {
                if (!EventoTabla.Auditorias.Contains(this))
                {
                    EventoTabla.Auditorias.Add(this);
                }
    
                id_EventoTabla = EventoTabla.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("EventoTabla")
                    && (ChangeTracker.OriginalValues["EventoTabla"] == EventoTabla))
                {
                    ChangeTracker.OriginalValues.Remove("EventoTabla");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("EventoTabla", previousValue);
                }
                if (EventoTabla != null && !EventoTabla.ChangeTracker.ChangeTrackingEnabled)
                {
                    EventoTabla.StartTracking();
                }
            }
        }
    
        private void FixupTablaAuditada(TablaAuditada previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Auditorias.Contains(this))
            {
                previousValue.Auditorias.Remove(this);
            }
    
            if (TablaAuditada != null)
            {
                if (!TablaAuditada.Auditorias.Contains(this))
                {
                    TablaAuditada.Auditorias.Add(this);
                }
    
                id_TablaAuditada = TablaAuditada.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TablaAuditada")
                    && (ChangeTracker.OriginalValues["TablaAuditada"] == TablaAuditada))
                {
                    ChangeTracker.OriginalValues.Remove("TablaAuditada");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TablaAuditada", previousValue);
                }
                if (TablaAuditada != null && !TablaAuditada.ChangeTracker.ChangeTrackingEnabled)
                {
                    TablaAuditada.StartTracking();
                }
            }
        }
    
        private void FixupSegmento(Segmento previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Auditorias.Contains(this))
            {
                previousValue.Auditorias.Remove(this);
            }
    
            if (Segmento != null)
            {
                if (!Segmento.Auditorias.Contains(this))
                {
                    Segmento.Auditorias.Add(this);
                }
    
                id_Segmento = Segmento.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Segmento")
                    && (ChangeTracker.OriginalValues["Segmento"] == Segmento))
                {
                    ChangeTracker.OriginalValues.Remove("Segmento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Segmento", previousValue);
                }
                if (Segmento != null && !Segmento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Segmento.StartTracking();
                }
            }
        }

        #endregion
    }
}
