//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ActividadEconomica))]
    [KnownType(typeof(Amparo))]
    [KnownType(typeof(Cliente))]
    [KnownType(typeof(Cobertura))]
    [KnownType(typeof(FormaPago))]
    [KnownType(typeof(GrupoEndoso))]
    [KnownType(typeof(LineaNegocio))]
    [KnownType(typeof(Localidad))]
    [KnownType(typeof(MarcaVehiculo))]
    [KnownType(typeof(ModalidadPago))]
    [KnownType(typeof(PlanDetalle))]
    [KnownType(typeof(ProductoDetalle))]
    [KnownType(typeof(RamoDetalle))]
    [KnownType(typeof(Segmento))]
    [KnownType(typeof(TipoEndoso))]
    [KnownType(typeof(TipoVehiculo))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(Compania))]
    public partial class Negocio: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private long _id;
    
        [DataMember]
        public Nullable<int> segmento_id
        {
            get { return _segmento_id; }
            set
            {
                if (_segmento_id != value)
                {
                    ChangeTracker.RecordOriginalValue("segmento_id", _segmento_id);
                    if (!IsDeserializing)
                    {
                        if (Segmento != null && Segmento.id != value)
                        {
                            Segmento = null;
                        }
                    }
                    _segmento_id = value;
                    OnPropertyChanged("segmento_id");
                }
            }
        }
        private Nullable<int> _segmento_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    ChangeTracker.RecordOriginalValue("lineaNegocio_id", _lineaNegocio_id);
                    if (!IsDeserializing)
                    {
                        if (LineaNegocio != null && LineaNegocio.id != value)
                        {
                            LineaNegocio = null;
                        }
                    }
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> ramoDetalle_id
        {
            get { return _ramoDetalle_id; }
            set
            {
                if (_ramoDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramoDetalle_id", _ramoDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (RamoDetalle != null && RamoDetalle.id != value)
                        {
                            RamoDetalle = null;
                        }
                    }
                    _ramoDetalle_id = value;
                    OnPropertyChanged("ramoDetalle_id");
                }
            }
        }
        private Nullable<int> _ramoDetalle_id;
    
        [DataMember]
        public Nullable<int> productoDetalle_id
        {
            get { return _productoDetalle_id; }
            set
            {
                if (_productoDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("productoDetalle_id", _productoDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (ProductoDetalle != null && ProductoDetalle.id != value)
                        {
                            ProductoDetalle = null;
                        }
                    }
                    _productoDetalle_id = value;
                    OnPropertyChanged("productoDetalle_id");
                }
            }
        }
        private Nullable<int> _productoDetalle_id;
    
        [DataMember]
        public Nullable<int> planDetalle_id
        {
            get { return _planDetalle_id; }
            set
            {
                if (_planDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("planDetalle_id", _planDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (PlanDetalle != null && PlanDetalle.id != value)
                        {
                            PlanDetalle = null;
                        }
                    }
                    _planDetalle_id = value;
                    OnPropertyChanged("planDetalle_id");
                }
            }
        }
        private Nullable<int> _planDetalle_id;
    
        [DataMember]
        public Nullable<int> amparo_id
        {
            get { return _amparo_id; }
            set
            {
                if (_amparo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("amparo_id", _amparo_id);
                    if (!IsDeserializing)
                    {
                        if (Amparo != null && Amparo.id != value)
                        {
                            Amparo = null;
                        }
                    }
                    _amparo_id = value;
                    OnPropertyChanged("amparo_id");
                }
            }
        }
        private Nullable<int> _amparo_id;
    
        [DataMember]
        public Nullable<int> cobertura_id
        {
            get { return _cobertura_id; }
            set
            {
                if (_cobertura_id != value)
                {
                    ChangeTracker.RecordOriginalValue("cobertura_id", _cobertura_id);
                    if (!IsDeserializing)
                    {
                        if (Cobertura != null && Cobertura.id != value)
                        {
                            Cobertura = null;
                        }
                    }
                    _cobertura_id = value;
                    OnPropertyChanged("cobertura_id");
                }
            }
        }
        private Nullable<int> _cobertura_id;
    
        [DataMember]
        public Nullable<int> modalidadPago_id
        {
            get { return _modalidadPago_id; }
            set
            {
                if (_modalidadPago_id != value)
                {
                    ChangeTracker.RecordOriginalValue("modalidadPago_id", _modalidadPago_id);
                    if (!IsDeserializing)
                    {
                        if (ModalidadPago != null && ModalidadPago.id != value)
                        {
                            ModalidadPago = null;
                        }
                    }
                    _modalidadPago_id = value;
                    OnPropertyChanged("modalidadPago_id");
                }
            }
        }
        private Nullable<int> _modalidadPago_id;
    
        [DataMember]
        public Nullable<int> formaPago_id
        {
            get { return _formaPago_id; }
            set
            {
                if (_formaPago_id != value)
                {
                    ChangeTracker.RecordOriginalValue("formaPago_id", _formaPago_id);
                    if (!IsDeserializing)
                    {
                        if (FormaPago != null && FormaPago.id != value)
                        {
                            FormaPago = null;
                        }
                    }
                    _formaPago_id = value;
                    OnPropertyChanged("formaPago_id");
                }
            }
        }
        private Nullable<int> _formaPago_id;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public string numeroSolicitud
        {
            get { return _numeroSolicitud; }
            set
            {
                if (_numeroSolicitud != value)
                {
                    _numeroSolicitud = value;
                    OnPropertyChanged("numeroSolicitud");
                }
            }
        }
        private string _numeroSolicitud;
    
        [DataMember]
        public string codigoAgrupador
        {
            get { return _codigoAgrupador; }
            set
            {
                if (_codigoAgrupador != value)
                {
                    _codigoAgrupador = value;
                    OnPropertyChanged("codigoAgrupador");
                }
            }
        }
        private string _codigoAgrupador;
    
        [DataMember]
        public Nullable<System.DateTime> fechaExpedicion
        {
            get { return _fechaExpedicion; }
            set
            {
                if (_fechaExpedicion != value)
                {
                    _fechaExpedicion = value;
                    OnPropertyChanged("fechaExpedicion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaExpedicion;
    
        [DataMember]
        public Nullable<System.DateTime> fechaGrabacion
        {
            get { return _fechaGrabacion; }
            set
            {
                if (_fechaGrabacion != value)
                {
                    _fechaGrabacion = value;
                    OnPropertyChanged("fechaGrabacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaGrabacion;
    
        [DataMember]
        public Nullable<System.DateTime> fechaRecaudoInicial
        {
            get { return _fechaRecaudoInicial; }
            set
            {
                if (_fechaRecaudoInicial != value)
                {
                    _fechaRecaudoInicial = value;
                    OnPropertyChanged("fechaRecaudoInicial");
                }
            }
        }
        private Nullable<System.DateTime> _fechaRecaudoInicial;
    
        [DataMember]
        public Nullable<System.DateTime> fechaEmisionMaximoEndoso
        {
            get { return _fechaEmisionMaximoEndoso; }
            set
            {
                if (_fechaEmisionMaximoEndoso != value)
                {
                    _fechaEmisionMaximoEndoso = value;
                    OnPropertyChanged("fechaEmisionMaximoEndoso");
                }
            }
        }
        private Nullable<System.DateTime> _fechaEmisionMaximoEndoso;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCancelacion
        {
            get { return _fechaCancelacion; }
            set
            {
                if (_fechaCancelacion != value)
                {
                    _fechaCancelacion = value;
                    OnPropertyChanged("fechaCancelacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCancelacion;
    
        [DataMember]
        public Nullable<decimal> valorAsegurado
        {
            get { return _valorAsegurado; }
            set
            {
                if (_valorAsegurado != value)
                {
                    _valorAsegurado = value;
                    OnPropertyChanged("valorAsegurado");
                }
            }
        }
        private Nullable<decimal> _valorAsegurado;
    
        [DataMember]
        public Nullable<double> valorProteccion
        {
            get { return _valorProteccion; }
            set
            {
                if (_valorProteccion != value)
                {
                    _valorProteccion = value;
                    OnPropertyChanged("valorProteccion");
                }
            }
        }
        private Nullable<double> _valorProteccion;
    
        [DataMember]
        public Nullable<double> valorAhorro
        {
            get { return _valorAhorro; }
            set
            {
                if (_valorAhorro != value)
                {
                    _valorAhorro = value;
                    OnPropertyChanged("valorAhorro");
                }
            }
        }
        private Nullable<double> _valorAhorro;
    
        [DataMember]
        public Nullable<double> valorPrimaPensiones
        {
            get { return _valorPrimaPensiones; }
            set
            {
                if (_valorPrimaPensiones != value)
                {
                    _valorPrimaPensiones = value;
                    OnPropertyChanged("valorPrimaPensiones");
                }
            }
        }
        private Nullable<double> _valorPrimaPensiones;
    
        [DataMember]
        public Nullable<double> valorPrimaTotal
        {
            get { return _valorPrimaTotal; }
            set
            {
                if (_valorPrimaTotal != value)
                {
                    _valorPrimaTotal = value;
                    OnPropertyChanged("valorPrimaTotal");
                }
            }
        }
        private Nullable<double> _valorPrimaTotal;
    
        [DataMember]
        public string estadoNegocio
        {
            get { return _estadoNegocio; }
            set
            {
                if (_estadoNegocio != value)
                {
                    _estadoNegocio = value;
                    OnPropertyChanged("estadoNegocio");
                }
            }
        }
        private string _estadoNegocio;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("localidad_id", _localidad_id);
                    if (!IsDeserializing)
                    {
                        if (Localidad != null && Localidad.id != value)
                        {
                            Localidad = null;
                        }
                    }
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public string clave
        {
            get { return _clave; }
            set
            {
                if (_clave != value)
                {
                    _clave = value;
                    OnPropertyChanged("clave");
                }
            }
        }
        private string _clave;
    
        [DataMember]
        public Nullable<int> participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private Nullable<int> _participante_id;
    
        [DataMember]
        public Nullable<double> porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private Nullable<double> _porcentajeParticipacion;
    
        [DataMember]
        public Nullable<int> tipoEndoso_id
        {
            get { return _tipoEndoso_id; }
            set
            {
                if (_tipoEndoso_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoEndoso_id", _tipoEndoso_id);
                    if (!IsDeserializing)
                    {
                        if (TipoEndoso != null && TipoEndoso.id != value)
                        {
                            TipoEndoso = null;
                        }
                    }
                    _tipoEndoso_id = value;
                    OnPropertyChanged("tipoEndoso_id");
                }
            }
        }
        private Nullable<int> _tipoEndoso_id;
    
        [DataMember]
        public Nullable<int> grupoEndoso_id
        {
            get { return _grupoEndoso_id; }
            set
            {
                if (_grupoEndoso_id != value)
                {
                    ChangeTracker.RecordOriginalValue("grupoEndoso_id", _grupoEndoso_id);
                    if (!IsDeserializing)
                    {
                        if (GrupoEndoso != null && GrupoEndoso.id != value)
                        {
                            GrupoEndoso = null;
                        }
                    }
                    _grupoEndoso_id = value;
                    OnPropertyChanged("grupoEndoso_id");
                }
            }
        }
        private Nullable<int> _grupoEndoso_id;
    
        [DataMember]
        public Nullable<int> cliente_id
        {
            get { return _cliente_id; }
            set
            {
                if (_cliente_id != value)
                {
                    ChangeTracker.RecordOriginalValue("cliente_id", _cliente_id);
                    if (!IsDeserializing)
                    {
                        if (Cliente != null && Cliente.id != value)
                        {
                            Cliente = null;
                        }
                    }
                    _cliente_id = value;
                    OnPropertyChanged("cliente_id");
                }
            }
        }
        private Nullable<int> _cliente_id;
    
        [DataMember]
        public Nullable<double> cuotasPagadas
        {
            get { return _cuotasPagadas; }
            set
            {
                if (_cuotasPagadas != value)
                {
                    _cuotasPagadas = value;
                    OnPropertyChanged("cuotasPagadas");
                }
            }
        }
        private Nullable<double> _cuotasPagadas;
    
        [DataMember]
        public Nullable<double> cuotasVencidas
        {
            get { return _cuotasVencidas; }
            set
            {
                if (_cuotasVencidas != value)
                {
                    _cuotasVencidas = value;
                    OnPropertyChanged("cuotasVencidas");
                }
            }
        }
        private Nullable<double> _cuotasVencidas;
    
        [DataMember]
        public string identificacionSuscriptor
        {
            get { return _identificacionSuscriptor; }
            set
            {
                if (_identificacionSuscriptor != value)
                {
                    _identificacionSuscriptor = value;
                    OnPropertyChanged("identificacionSuscriptor");
                }
            }
        }
        private string _identificacionSuscriptor;
    
        [DataMember]
        public string nombreSuscriptor
        {
            get { return _nombreSuscriptor; }
            set
            {
                if (_nombreSuscriptor != value)
                {
                    _nombreSuscriptor = value;
                    OnPropertyChanged("nombreSuscriptor");
                }
            }
        }
        private string _nombreSuscriptor;
    
        [DataMember]
        public string generoSuscriptor
        {
            get { return _generoSuscriptor; }
            set
            {
                if (_generoSuscriptor != value)
                {
                    _generoSuscriptor = value;
                    OnPropertyChanged("generoSuscriptor");
                }
            }
        }
        private string _generoSuscriptor;
    
        [DataMember]
        public Nullable<int> actividadEconomica_id
        {
            get { return _actividadEconomica_id; }
            set
            {
                if (_actividadEconomica_id != value)
                {
                    ChangeTracker.RecordOriginalValue("actividadEconomica_id", _actividadEconomica_id);
                    if (!IsDeserializing)
                    {
                        if (ActividadEconomica != null && ActividadEconomica.id != value)
                        {
                            ActividadEconomica = null;
                        }
                    }
                    _actividadEconomica_id = value;
                    OnPropertyChanged("actividadEconomica_id");
                }
            }
        }
        private Nullable<int> _actividadEconomica_id;
    
        [DataMember]
        public Nullable<int> marcaVehiculo_id
        {
            get { return _marcaVehiculo_id; }
            set
            {
                if (_marcaVehiculo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("marcaVehiculo_id", _marcaVehiculo_id);
                    if (!IsDeserializing)
                    {
                        if (MarcaVehiculo != null && MarcaVehiculo.id != value)
                        {
                            MarcaVehiculo = null;
                        }
                    }
                    _marcaVehiculo_id = value;
                    OnPropertyChanged("marcaVehiculo_id");
                }
            }
        }
        private Nullable<int> _marcaVehiculo_id;
    
        [DataMember]
        public Nullable<int> tipoVehiculo_id
        {
            get { return _tipoVehiculo_id; }
            set
            {
                if (_tipoVehiculo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoVehiculo_id", _tipoVehiculo_id);
                    if (!IsDeserializing)
                    {
                        if (TipoVehiculo != null && TipoVehiculo.id != value)
                        {
                            TipoVehiculo = null;
                        }
                    }
                    _tipoVehiculo_id = value;
                    OnPropertyChanged("tipoVehiculo_id");
                }
            }
        }
        private Nullable<int> _tipoVehiculo_id;
    
        [DataMember]
        public string modeloVehiculo
        {
            get { return _modeloVehiculo; }
            set
            {
                if (_modeloVehiculo != value)
                {
                    _modeloVehiculo = value;
                    OnPropertyChanged("modeloVehiculo");
                }
            }
        }
        private string _modeloVehiculo;
    
        [DataMember]
        public string sistema
        {
            get { return _sistema; }
            set
            {
                if (_sistema != value)
                {
                    _sistema = value;
                    OnPropertyChanged("sistema");
                }
            }
        }
        private string _sistema;
    
        [DataMember]
        public Nullable<int> Usuarios
        {
            get { return _usuarios; }
            set
            {
                if (_usuarios != value)
                {
                    _usuarios = value;
                    OnPropertyChanged("Usuarios");
                }
            }
        }
        private Nullable<int> _usuarios;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCarga
        {
            get { return _fechaCarga; }
            set
            {
                if (_fechaCarga != value)
                {
                    _fechaCarga = value;
                    OnPropertyChanged("fechaCarga");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCarga;
    
        [DataMember]
        public Nullable<int> estadoCierre
        {
            get { return _estadoCierre; }
            set
            {
                if (_estadoCierre != value)
                {
                    _estadoCierre = value;
                    OnPropertyChanged("estadoCierre");
                }
            }
        }
        private Nullable<int> _estadoCierre;
    
        [DataMember]
        public Nullable<int> mesCierre
        {
            get { return _mesCierre; }
            set
            {
                if (_mesCierre != value)
                {
                    _mesCierre = value;
                    OnPropertyChanged("mesCierre");
                }
            }
        }
        private Nullable<int> _mesCierre;
    
        [DataMember]
        public Nullable<int> anioCierre
        {
            get { return _anioCierre; }
            set
            {
                if (_anioCierre != value)
                {
                    _anioCierre = value;
                    OnPropertyChanged("anioCierre");
                }
            }
        }
        private Nullable<int> _anioCierre;
    
        [DataMember]
        public Nullable<System.DateTime> fechaInicioVigencia
        {
            get { return _fechaInicioVigencia; }
            set
            {
                if (_fechaInicioVigencia != value)
                {
                    _fechaInicioVigencia = value;
                    OnPropertyChanged("fechaInicioVigencia");
                }
            }
        }
        private Nullable<System.DateTime> _fechaInicioVigencia;
    
        [DataMember]
        public Nullable<System.DateTime> fechaFinVigencia
        {
            get { return _fechaFinVigencia; }
            set
            {
                if (_fechaFinVigencia != value)
                {
                    _fechaFinVigencia = value;
                    OnPropertyChanged("fechaFinVigencia");
                }
            }
        }
        private Nullable<System.DateTime> _fechaFinVigencia;
    
        [DataMember]
        public Nullable<int> consecutivoEndosoCore
        {
            get { return _consecutivoEndosoCore; }
            set
            {
                if (_consecutivoEndosoCore != value)
                {
                    _consecutivoEndosoCore = value;
                    OnPropertyChanged("consecutivoEndosoCore");
                }
            }
        }
        private Nullable<int> _consecutivoEndosoCore;
    
        [DataMember]
        public Nullable<int> cuotasTotales
        {
            get { return _cuotasTotales; }
            set
            {
                if (_cuotasTotales != value)
                {
                    _cuotasTotales = value;
                    OnPropertyChanged("cuotasTotales");
                }
            }
        }
        private Nullable<int> _cuotasTotales;
    
        [DataMember]
        public Nullable<int> codigoEmision
        {
            get { return _codigoEmision; }
            set
            {
                if (_codigoEmision != value)
                {
                    _codigoEmision = value;
                    OnPropertyChanged("codigoEmision");
                }
            }
        }
        private Nullable<int> _codigoEmision;
    
        [DataMember]
        public Nullable<bool> recompra
        {
            get { return _recompra; }
            set
            {
                if (_recompra != value)
                {
                    _recompra = value;
                    OnPropertyChanged("recompra");
                }
            }
        }
        private Nullable<bool> _recompra;
    
        [DataMember]
        public Nullable<long> numeroRecompra
        {
            get { return _numeroRecompra; }
            set
            {
                if (_numeroRecompra != value)
                {
                    _numeroRecompra = value;
                    OnPropertyChanged("numeroRecompra");
                }
            }
        }
        private Nullable<long> _numeroRecompra;
    
        [DataMember]
        public Nullable<System.DateTime> fechaContrato
        {
            get { return _fechaContrato; }
            set
            {
                if (_fechaContrato != value)
                {
                    _fechaContrato = value;
                    OnPropertyChanged("fechaContrato");
                }
            }
        }
        private Nullable<System.DateTime> _fechaContrato;
    
        [DataMember]
        public Nullable<int> tipoNovedad
        {
            get { return _tipoNovedad; }
            set
            {
                if (_tipoNovedad != value)
                {
                    _tipoNovedad = value;
                    OnPropertyChanged("tipoNovedad");
                }
            }
        }
        private Nullable<int> _tipoNovedad;
    
        [DataMember]
        public Nullable<System.DateTime> fechaEfecto
        {
            get { return _fechaEfecto; }
            set
            {
                if (_fechaEfecto != value)
                {
                    _fechaEfecto = value;
                    OnPropertyChanged("fechaEfecto");
                }
            }
        }
        private Nullable<System.DateTime> _fechaEfecto;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public ActividadEconomica ActividadEconomica
        {
            get { return _actividadEconomica; }
            set
            {
                if (!ReferenceEquals(_actividadEconomica, value))
                {
                    var previousValue = _actividadEconomica;
                    _actividadEconomica = value;
                    FixupActividadEconomica(previousValue);
                    OnNavigationPropertyChanged("ActividadEconomica");
                }
            }
        }
        private ActividadEconomica _actividadEconomica;
    
        [DataMember]
        public Amparo Amparo
        {
            get { return _amparo; }
            set
            {
                if (!ReferenceEquals(_amparo, value))
                {
                    var previousValue = _amparo;
                    _amparo = value;
                    FixupAmparo(previousValue);
                    OnNavigationPropertyChanged("Amparo");
                }
            }
        }
        private Amparo _amparo;
    
        [DataMember]
        public Cliente Cliente
        {
            get { return _cliente; }
            set
            {
                if (!ReferenceEquals(_cliente, value))
                {
                    var previousValue = _cliente;
                    _cliente = value;
                    FixupCliente(previousValue);
                    OnNavigationPropertyChanged("Cliente");
                }
            }
        }
        private Cliente _cliente;
    
        [DataMember]
        public Cobertura Cobertura
        {
            get { return _cobertura; }
            set
            {
                if (!ReferenceEquals(_cobertura, value))
                {
                    var previousValue = _cobertura;
                    _cobertura = value;
                    FixupCobertura(previousValue);
                    OnNavigationPropertyChanged("Cobertura");
                }
            }
        }
        private Cobertura _cobertura;
    
        [DataMember]
        public FormaPago FormaPago
        {
            get { return _formaPago; }
            set
            {
                if (!ReferenceEquals(_formaPago, value))
                {
                    var previousValue = _formaPago;
                    _formaPago = value;
                    FixupFormaPago(previousValue);
                    OnNavigationPropertyChanged("FormaPago");
                }
            }
        }
        private FormaPago _formaPago;
    
        [DataMember]
        public GrupoEndoso GrupoEndoso
        {
            get { return _grupoEndoso; }
            set
            {
                if (!ReferenceEquals(_grupoEndoso, value))
                {
                    var previousValue = _grupoEndoso;
                    _grupoEndoso = value;
                    FixupGrupoEndoso(previousValue);
                    OnNavigationPropertyChanged("GrupoEndoso");
                }
            }
        }
        private GrupoEndoso _grupoEndoso;
    
        [DataMember]
        public LineaNegocio LineaNegocio
        {
            get { return _lineaNegocio; }
            set
            {
                if (!ReferenceEquals(_lineaNegocio, value))
                {
                    var previousValue = _lineaNegocio;
                    _lineaNegocio = value;
                    FixupLineaNegocio(previousValue);
                    OnNavigationPropertyChanged("LineaNegocio");
                }
            }
        }
        private LineaNegocio _lineaNegocio;
    
        [DataMember]
        public Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                    OnNavigationPropertyChanged("Localidad");
                }
            }
        }
        private Localidad _localidad;
    
        [DataMember]
        public MarcaVehiculo MarcaVehiculo
        {
            get { return _marcaVehiculo; }
            set
            {
                if (!ReferenceEquals(_marcaVehiculo, value))
                {
                    var previousValue = _marcaVehiculo;
                    _marcaVehiculo = value;
                    FixupMarcaVehiculo(previousValue);
                    OnNavigationPropertyChanged("MarcaVehiculo");
                }
            }
        }
        private MarcaVehiculo _marcaVehiculo;
    
        [DataMember]
        public ModalidadPago ModalidadPago
        {
            get { return _modalidadPago; }
            set
            {
                if (!ReferenceEquals(_modalidadPago, value))
                {
                    var previousValue = _modalidadPago;
                    _modalidadPago = value;
                    FixupModalidadPago(previousValue);
                    OnNavigationPropertyChanged("ModalidadPago");
                }
            }
        }
        private ModalidadPago _modalidadPago;
    
        [DataMember]
        public PlanDetalle PlanDetalle
        {
            get { return _planDetalle; }
            set
            {
                if (!ReferenceEquals(_planDetalle, value))
                {
                    var previousValue = _planDetalle;
                    _planDetalle = value;
                    FixupPlanDetalle(previousValue);
                    OnNavigationPropertyChanged("PlanDetalle");
                }
            }
        }
        private PlanDetalle _planDetalle;
    
        [DataMember]
        public ProductoDetalle ProductoDetalle
        {
            get { return _productoDetalle; }
            set
            {
                if (!ReferenceEquals(_productoDetalle, value))
                {
                    var previousValue = _productoDetalle;
                    _productoDetalle = value;
                    FixupProductoDetalle(previousValue);
                    OnNavigationPropertyChanged("ProductoDetalle");
                }
            }
        }
        private ProductoDetalle _productoDetalle;
    
        [DataMember]
        public RamoDetalle RamoDetalle
        {
            get { return _ramoDetalle; }
            set
            {
                if (!ReferenceEquals(_ramoDetalle, value))
                {
                    var previousValue = _ramoDetalle;
                    _ramoDetalle = value;
                    FixupRamoDetalle(previousValue);
                    OnNavigationPropertyChanged("RamoDetalle");
                }
            }
        }
        private RamoDetalle _ramoDetalle;
    
        [DataMember]
        public Segmento Segmento
        {
            get { return _segmento; }
            set
            {
                if (!ReferenceEquals(_segmento, value))
                {
                    var previousValue = _segmento;
                    _segmento = value;
                    FixupSegmento(previousValue);
                    OnNavigationPropertyChanged("Segmento");
                }
            }
        }
        private Segmento _segmento;
    
        [DataMember]
        public TipoEndoso TipoEndoso
        {
            get { return _tipoEndoso; }
            set
            {
                if (!ReferenceEquals(_tipoEndoso, value))
                {
                    var previousValue = _tipoEndoso;
                    _tipoEndoso = value;
                    FixupTipoEndoso(previousValue);
                    OnNavigationPropertyChanged("TipoEndoso");
                }
            }
        }
        private TipoEndoso _tipoEndoso;
    
        [DataMember]
        public TipoVehiculo TipoVehiculo
        {
            get { return _tipoVehiculo; }
            set
            {
                if (!ReferenceEquals(_tipoVehiculo, value))
                {
                    var previousValue = _tipoVehiculo;
                    _tipoVehiculo = value;
                    FixupTipoVehiculo(previousValue);
                    OnNavigationPropertyChanged("TipoVehiculo");
                }
            }
        }
        private TipoVehiculo _tipoVehiculo;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            ActividadEconomica = null;
            Amparo = null;
            Cliente = null;
            Cobertura = null;
            FormaPago = null;
            GrupoEndoso = null;
            LineaNegocio = null;
            Localidad = null;
            MarcaVehiculo = null;
            ModalidadPago = null;
            PlanDetalle = null;
            ProductoDetalle = null;
            RamoDetalle = null;
            Segmento = null;
            TipoEndoso = null;
            TipoVehiculo = null;
            Zona = null;
            Compania = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupActividadEconomica(ActividadEconomica previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (ActividadEconomica != null)
            {
                if (!ActividadEconomica.Negocios.Contains(this))
                {
                    ActividadEconomica.Negocios.Add(this);
                }
    
                actividadEconomica_id = ActividadEconomica.id;
            }
            else if (!skipKeys)
            {
                actividadEconomica_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ActividadEconomica")
                    && (ChangeTracker.OriginalValues["ActividadEconomica"] == ActividadEconomica))
                {
                    ChangeTracker.OriginalValues.Remove("ActividadEconomica");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ActividadEconomica", previousValue);
                }
                if (ActividadEconomica != null && !ActividadEconomica.ChangeTracker.ChangeTrackingEnabled)
                {
                    ActividadEconomica.StartTracking();
                }
            }
        }
    
        private void FixupAmparo(Amparo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (Amparo != null)
            {
                if (!Amparo.Negocios.Contains(this))
                {
                    Amparo.Negocios.Add(this);
                }
    
                amparo_id = Amparo.id;
            }
            else if (!skipKeys)
            {
                amparo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Amparo")
                    && (ChangeTracker.OriginalValues["Amparo"] == Amparo))
                {
                    ChangeTracker.OriginalValues.Remove("Amparo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Amparo", previousValue);
                }
                if (Amparo != null && !Amparo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Amparo.StartTracking();
                }
            }
        }
    
        private void FixupCliente(Cliente previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (Cliente != null)
            {
                if (!Cliente.Negocios.Contains(this))
                {
                    Cliente.Negocios.Add(this);
                }
    
                cliente_id = Cliente.id;
            }
            else if (!skipKeys)
            {
                cliente_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Cliente")
                    && (ChangeTracker.OriginalValues["Cliente"] == Cliente))
                {
                    ChangeTracker.OriginalValues.Remove("Cliente");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Cliente", previousValue);
                }
                if (Cliente != null && !Cliente.ChangeTracker.ChangeTrackingEnabled)
                {
                    Cliente.StartTracking();
                }
            }
        }
    
        private void FixupCobertura(Cobertura previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (Cobertura != null)
            {
                if (!Cobertura.Negocios.Contains(this))
                {
                    Cobertura.Negocios.Add(this);
                }
    
                cobertura_id = Cobertura.id;
            }
            else if (!skipKeys)
            {
                cobertura_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Cobertura")
                    && (ChangeTracker.OriginalValues["Cobertura"] == Cobertura))
                {
                    ChangeTracker.OriginalValues.Remove("Cobertura");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Cobertura", previousValue);
                }
                if (Cobertura != null && !Cobertura.ChangeTracker.ChangeTrackingEnabled)
                {
                    Cobertura.StartTracking();
                }
            }
        }
    
        private void FixupFormaPago(FormaPago previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (FormaPago != null)
            {
                if (!FormaPago.Negocios.Contains(this))
                {
                    FormaPago.Negocios.Add(this);
                }
    
                formaPago_id = FormaPago.id;
            }
            else if (!skipKeys)
            {
                formaPago_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FormaPago")
                    && (ChangeTracker.OriginalValues["FormaPago"] == FormaPago))
                {
                    ChangeTracker.OriginalValues.Remove("FormaPago");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FormaPago", previousValue);
                }
                if (FormaPago != null && !FormaPago.ChangeTracker.ChangeTrackingEnabled)
                {
                    FormaPago.StartTracking();
                }
            }
        }
    
        private void FixupGrupoEndoso(GrupoEndoso previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (GrupoEndoso != null)
            {
                if (!GrupoEndoso.Negocios.Contains(this))
                {
                    GrupoEndoso.Negocios.Add(this);
                }
    
                grupoEndoso_id = GrupoEndoso.id;
            }
            else if (!skipKeys)
            {
                grupoEndoso_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("GrupoEndoso")
                    && (ChangeTracker.OriginalValues["GrupoEndoso"] == GrupoEndoso))
                {
                    ChangeTracker.OriginalValues.Remove("GrupoEndoso");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("GrupoEndoso", previousValue);
                }
                if (GrupoEndoso != null && !GrupoEndoso.ChangeTracker.ChangeTrackingEnabled)
                {
                    GrupoEndoso.StartTracking();
                }
            }
        }
    
        private void FixupLineaNegocio(LineaNegocio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (LineaNegocio != null)
            {
                if (!LineaNegocio.Negocios.Contains(this))
                {
                    LineaNegocio.Negocios.Add(this);
                }
    
                lineaNegocio_id = LineaNegocio.id;
            }
            else if (!skipKeys)
            {
                lineaNegocio_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LineaNegocio")
                    && (ChangeTracker.OriginalValues["LineaNegocio"] == LineaNegocio))
                {
                    ChangeTracker.OriginalValues.Remove("LineaNegocio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LineaNegocio", previousValue);
                }
                if (LineaNegocio != null && !LineaNegocio.ChangeTracker.ChangeTrackingEnabled)
                {
                    LineaNegocio.StartTracking();
                }
            }
        }
    
        private void FixupLocalidad(Localidad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.Negocios.Contains(this))
                {
                    Localidad.Negocios.Add(this);
                }
    
                localidad_id = Localidad.id;
            }
            else if (!skipKeys)
            {
                localidad_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localidad")
                    && (ChangeTracker.OriginalValues["Localidad"] == Localidad))
                {
                    ChangeTracker.OriginalValues.Remove("Localidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localidad", previousValue);
                }
                if (Localidad != null && !Localidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localidad.StartTracking();
                }
            }
        }
    
        private void FixupMarcaVehiculo(MarcaVehiculo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (MarcaVehiculo != null)
            {
                if (!MarcaVehiculo.Negocios.Contains(this))
                {
                    MarcaVehiculo.Negocios.Add(this);
                }
    
                marcaVehiculo_id = MarcaVehiculo.id;
            }
            else if (!skipKeys)
            {
                marcaVehiculo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MarcaVehiculo")
                    && (ChangeTracker.OriginalValues["MarcaVehiculo"] == MarcaVehiculo))
                {
                    ChangeTracker.OriginalValues.Remove("MarcaVehiculo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MarcaVehiculo", previousValue);
                }
                if (MarcaVehiculo != null && !MarcaVehiculo.ChangeTracker.ChangeTrackingEnabled)
                {
                    MarcaVehiculo.StartTracking();
                }
            }
        }
    
        private void FixupModalidadPago(ModalidadPago previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (ModalidadPago != null)
            {
                if (!ModalidadPago.Negocios.Contains(this))
                {
                    ModalidadPago.Negocios.Add(this);
                }
    
                modalidadPago_id = ModalidadPago.id;
            }
            else if (!skipKeys)
            {
                modalidadPago_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ModalidadPago")
                    && (ChangeTracker.OriginalValues["ModalidadPago"] == ModalidadPago))
                {
                    ChangeTracker.OriginalValues.Remove("ModalidadPago");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ModalidadPago", previousValue);
                }
                if (ModalidadPago != null && !ModalidadPago.ChangeTracker.ChangeTrackingEnabled)
                {
                    ModalidadPago.StartTracking();
                }
            }
        }
    
        private void FixupPlanDetalle(PlanDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (PlanDetalle != null)
            {
                if (!PlanDetalle.Negocios.Contains(this))
                {
                    PlanDetalle.Negocios.Add(this);
                }
    
                planDetalle_id = PlanDetalle.id;
            }
            else if (!skipKeys)
            {
                planDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PlanDetalle")
                    && (ChangeTracker.OriginalValues["PlanDetalle"] == PlanDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("PlanDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PlanDetalle", previousValue);
                }
                if (PlanDetalle != null && !PlanDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    PlanDetalle.StartTracking();
                }
            }
        }
    
        private void FixupProductoDetalle(ProductoDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (ProductoDetalle != null)
            {
                if (!ProductoDetalle.Negocios.Contains(this))
                {
                    ProductoDetalle.Negocios.Add(this);
                }
    
                productoDetalle_id = ProductoDetalle.id;
            }
            else if (!skipKeys)
            {
                productoDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProductoDetalle")
                    && (ChangeTracker.OriginalValues["ProductoDetalle"] == ProductoDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("ProductoDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProductoDetalle", previousValue);
                }
                if (ProductoDetalle != null && !ProductoDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProductoDetalle.StartTracking();
                }
            }
        }
    
        private void FixupRamoDetalle(RamoDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (RamoDetalle != null)
            {
                if (!RamoDetalle.Negocios.Contains(this))
                {
                    RamoDetalle.Negocios.Add(this);
                }
    
                ramoDetalle_id = RamoDetalle.id;
            }
            else if (!skipKeys)
            {
                ramoDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RamoDetalle")
                    && (ChangeTracker.OriginalValues["RamoDetalle"] == RamoDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("RamoDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RamoDetalle", previousValue);
                }
                if (RamoDetalle != null && !RamoDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    RamoDetalle.StartTracking();
                }
            }
        }
    
        private void FixupSegmento(Segmento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (Segmento != null)
            {
                if (!Segmento.Negocios.Contains(this))
                {
                    Segmento.Negocios.Add(this);
                }
    
                segmento_id = Segmento.id;
            }
            else if (!skipKeys)
            {
                segmento_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Segmento")
                    && (ChangeTracker.OriginalValues["Segmento"] == Segmento))
                {
                    ChangeTracker.OriginalValues.Remove("Segmento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Segmento", previousValue);
                }
                if (Segmento != null && !Segmento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Segmento.StartTracking();
                }
            }
        }
    
        private void FixupTipoEndoso(TipoEndoso previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (TipoEndoso != null)
            {
                if (!TipoEndoso.Negocios.Contains(this))
                {
                    TipoEndoso.Negocios.Add(this);
                }
    
                tipoEndoso_id = TipoEndoso.id;
            }
            else if (!skipKeys)
            {
                tipoEndoso_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoEndoso")
                    && (ChangeTracker.OriginalValues["TipoEndoso"] == TipoEndoso))
                {
                    ChangeTracker.OriginalValues.Remove("TipoEndoso");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoEndoso", previousValue);
                }
                if (TipoEndoso != null && !TipoEndoso.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoEndoso.StartTracking();
                }
            }
        }
    
        private void FixupTipoVehiculo(TipoVehiculo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (TipoVehiculo != null)
            {
                if (!TipoVehiculo.Negocios.Contains(this))
                {
                    TipoVehiculo.Negocios.Add(this);
                }
    
                tipoVehiculo_id = TipoVehiculo.id;
            }
            else if (!skipKeys)
            {
                tipoVehiculo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoVehiculo")
                    && (ChangeTracker.OriginalValues["TipoVehiculo"] == TipoVehiculo))
                {
                    ChangeTracker.OriginalValues.Remove("TipoVehiculo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoVehiculo", previousValue);
                }
                if (TipoVehiculo != null && !TipoVehiculo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoVehiculo.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.Negocios.Contains(this))
                {
                    Zona.Negocios.Add(this);
                }
    
                zona_id = Zona.id;
            }
            else if (!skipKeys)
            {
                zona_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Negocios.Contains(this))
            {
                previousValue.Negocios.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.Negocios.Contains(this))
                {
                    Compania.Negocios.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }

        #endregion
    }
}
