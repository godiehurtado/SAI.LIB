//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CanalDetalle))]
    [KnownType(typeof(TipoIntermediario))]
    [KnownType(typeof(ModeloComision))]
    public partial class CanalDetalleTipoIntermediario: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public int CanalDetalle_Id
        {
            get { return _canalDetalle_Id; }
            set
            {
                if (_canalDetalle_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("CanalDetalle_Id", _canalDetalle_Id);
                    if (!IsDeserializing)
                    {
                        if (CanalDetalle != null && CanalDetalle.id != value)
                        {
                            CanalDetalle = null;
                        }
                    }
                    _canalDetalle_Id = value;
                    OnPropertyChanged("CanalDetalle_Id");
                }
            }
        }
        private int _canalDetalle_Id;
    
        [DataMember]
        public int TipoIntermediario_Id
        {
            get { return _tipoIntermediario_Id; }
            set
            {
                if (_tipoIntermediario_Id != value)
                {
                    ChangeTracker.RecordOriginalValue("TipoIntermediario_Id", _tipoIntermediario_Id);
                    if (!IsDeserializing)
                    {
                        if (TipoIntermediario != null && TipoIntermediario.Id != value)
                        {
                            TipoIntermediario = null;
                        }
                    }
                    _tipoIntermediario_Id = value;
                    OnPropertyChanged("TipoIntermediario_Id");
                }
            }
        }
        private int _tipoIntermediario_Id;
    
        [DataMember]
        public int Estado_Id
        {
            get { return _estado_Id; }
            set
            {
                if (_estado_Id != value)
                {
                    _estado_Id = value;
                    OnPropertyChanged("Estado_Id");
                }
            }
        }
        private int _estado_Id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public CanalDetalle CanalDetalle
        {
            get { return _canalDetalle; }
            set
            {
                if (!ReferenceEquals(_canalDetalle, value))
                {
                    var previousValue = _canalDetalle;
                    _canalDetalle = value;
                    FixupCanalDetalle(previousValue);
                    OnNavigationPropertyChanged("CanalDetalle");
                }
            }
        }
        private CanalDetalle _canalDetalle;
    
        [DataMember]
        public TipoIntermediario TipoIntermediario
        {
            get { return _tipoIntermediario; }
            set
            {
                if (!ReferenceEquals(_tipoIntermediario, value))
                {
                    var previousValue = _tipoIntermediario;
                    _tipoIntermediario = value;
                    FixupTipoIntermediario(previousValue);
                    OnNavigationPropertyChanged("TipoIntermediario");
                }
            }
        }
        private TipoIntermediario _tipoIntermediario;
    
        [DataMember]
        public TrackableCollection<ModeloComision> ModeloComisions
        {
            get
            {
                if (_modeloComisions == null)
                {
                    _modeloComisions = new TrackableCollection<ModeloComision>();
                    _modeloComisions.CollectionChanged += FixupModeloComisions;
                }
                return _modeloComisions;
            }
            set
            {
                if (!ReferenceEquals(_modeloComisions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_modeloComisions != null)
                    {
                        _modeloComisions.CollectionChanged -= FixupModeloComisions;
                    }
                    _modeloComisions = value;
                    if (_modeloComisions != null)
                    {
                        _modeloComisions.CollectionChanged += FixupModeloComisions;
                    }
                    OnNavigationPropertyChanged("ModeloComisions");
                }
            }
        }
        private TrackableCollection<ModeloComision> _modeloComisions;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            CanalDetalle = null;
            TipoIntermediario = null;
            ModeloComisions.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupCanalDetalle(CanalDetalle previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CanalDetalleTipoIntermediarios.Contains(this))
            {
                previousValue.CanalDetalleTipoIntermediarios.Remove(this);
            }
    
            if (CanalDetalle != null)
            {
                if (!CanalDetalle.CanalDetalleTipoIntermediarios.Contains(this))
                {
                    CanalDetalle.CanalDetalleTipoIntermediarios.Add(this);
                }
    
                CanalDetalle_Id = CanalDetalle.id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("CanalDetalle")
                    && (ChangeTracker.OriginalValues["CanalDetalle"] == CanalDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("CanalDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("CanalDetalle", previousValue);
                }
                if (CanalDetalle != null && !CanalDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    CanalDetalle.StartTracking();
                }
            }
        }
    
        private void FixupTipoIntermediario(TipoIntermediario previousValue)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.CanalDetalleTipoIntermediarios.Contains(this))
            {
                previousValue.CanalDetalleTipoIntermediarios.Remove(this);
            }
    
            if (TipoIntermediario != null)
            {
                if (!TipoIntermediario.CanalDetalleTipoIntermediarios.Contains(this))
                {
                    TipoIntermediario.CanalDetalleTipoIntermediarios.Add(this);
                }
    
                TipoIntermediario_Id = TipoIntermediario.Id;
            }
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoIntermediario")
                    && (ChangeTracker.OriginalValues["TipoIntermediario"] == TipoIntermediario))
                {
                    ChangeTracker.OriginalValues.Remove("TipoIntermediario");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoIntermediario", previousValue);
                }
                if (TipoIntermediario != null && !TipoIntermediario.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoIntermediario.StartTracking();
                }
            }
        }
    
        private void FixupModeloComisions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ModeloComision item in e.NewItems)
                {
                    if (!item.CanalDetalleTipoIntermediarios.Contains(this))
                    {
                        item.CanalDetalleTipoIntermediarios.Add(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ModeloComisions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ModeloComision item in e.OldItems)
                {
                    if (item.CanalDetalleTipoIntermediarios.Contains(this))
                    {
                        item.CanalDetalleTipoIntermediarios.Remove(this);
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ModeloComisions", item);
                    }
                }
            }
        }

        #endregion
    }
}
