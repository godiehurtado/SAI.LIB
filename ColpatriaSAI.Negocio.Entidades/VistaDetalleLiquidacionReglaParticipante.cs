//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    public partial class VistaDetalleLiquidacionReglaParticipante: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> liquidacionRegla_id
        {
            get { return _liquidacionRegla_id; }
            set
            {
                if (_liquidacionRegla_id != value)
                {
                    _liquidacionRegla_id = value;
                    OnPropertyChanged("liquidacionRegla_id");
                }
            }
        }
        private Nullable<int> _liquidacionRegla_id;
    
        [DataMember]
        public string Regla
        {
            get { return _regla; }
            set
            {
                if (_regla != value)
                {
                    _regla = value;
                    OnPropertyChanged("Regla");
                }
            }
        }
        private string _regla;
    
        [DataMember]
        public int LiquidacionReglaxParticipante_id
        {
            get { return _liquidacionReglaxParticipante_id; }
            set
            {
                if (_liquidacionReglaxParticipante_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'LiquidacionReglaxParticipante_id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _liquidacionReglaxParticipante_id = value;
                    OnPropertyChanged("LiquidacionReglaxParticipante_id");
                }
            }
        }
        private int _liquidacionReglaxParticipante_id;
    
        [DataMember]
        public int participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'participante_id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private int _participante_id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string apellidos
        {
            get { return _apellidos; }
            set
            {
                if (_apellidos != value)
                {
                    _apellidos = value;
                    OnPropertyChanged("apellidos");
                }
            }
        }
        private string _apellidos;
    
        [DataMember]
        public string documento
        {
            get { return _documento; }
            set
            {
                if (_documento != value)
                {
                    _documento = value;
                    OnPropertyChanged("documento");
                }
            }
        }
        private string _documento;
    
        [DataMember]
        public Nullable<int> subregla_id
        {
            get { return _subregla_id; }
            set
            {
                if (_subregla_id != value)
                {
                    _subregla_id = value;
                    OnPropertyChanged("subregla_id");
                }
            }
        }
        private Nullable<int> _subregla_id;
    
        [DataMember]
        public string descripcion
        {
            get { return _descripcion; }
            set
            {
                if (_descripcion != value)
                {
                    _descripcion = value;
                    OnPropertyChanged("descripcion");
                }
            }
        }
        private string _descripcion;
    
        [DataMember]
        public Nullable<bool> principal
        {
            get { return _principal; }
            set
            {
                if (_principal != value)
                {
                    _principal = value;
                    OnPropertyChanged("principal");
                }
            }
        }
        private Nullable<bool> _principal;
    
        [DataMember]
        public Nullable<bool> Gano
        {
            get { return _gano; }
            set
            {
                if (_gano != value)
                {
                    _gano = value;
                    OnPropertyChanged("Gano");
                }
            }
        }
        private Nullable<bool> _gano;
    
        [DataMember]
        public string resultado
        {
            get { return _resultado; }
            set
            {
                if (_resultado != value)
                {
                    _resultado = value;
                    OnPropertyChanged("resultado");
                }
            }
        }
        private string _resultado;
    
        [DataMember]
        public Nullable<int> condicion_id
        {
            get { return _condicion_id; }
            set
            {
                if (_condicion_id != value)
                {
                    _condicion_id = value;
                    OnPropertyChanged("condicion_id");
                }
            }
        }
        private Nullable<int> _condicion_id;
    
        [DataMember]
        public string Variable
        {
            get { return _variable; }
            set
            {
                if (_variable != value)
                {
                    _variable = value;
                    OnPropertyChanged("Variable");
                }
            }
        }
        private string _variable;
    
        [DataMember]
        public string expresion
        {
            get { return _expresion; }
            set
            {
                if (_expresion != value)
                {
                    _expresion = value;
                    OnPropertyChanged("expresion");
                }
            }
        }
        private string _expresion;
    
        [DataMember]
        public string valor
        {
            get { return _valor; }
            set
            {
                if (_valor != value)
                {
                    _valor = value;
                    OnPropertyChanged("valor");
                }
            }
        }
        private string _valor;
    
        [DataMember]
        public string textoSeleccion
        {
            get { return _textoSeleccion; }
            set
            {
                if (_textoSeleccion != value)
                {
                    _textoSeleccion = value;
                    OnPropertyChanged("textoSeleccion");
                }
            }
        }
        private string _textoSeleccion;
    
        [DataMember]
        public Nullable<System.DateTime> fecha
        {
            get { return _fecha; }
            set
            {
                if (_fecha != value)
                {
                    _fecha = value;
                    OnPropertyChanged("fecha");
                }
            }
        }
        private Nullable<System.DateTime> _fecha;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
