//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ProductoDetalle))]
    [KnownType(typeof(Ramo))]
    [KnownType(typeof(Siniestralidad))]
    [KnownType(typeof(Negocio))]
    [KnownType(typeof(Recaudo))]
    [KnownType(typeof(Compania))]
    [KnownType(typeof(FactorComisionFija))]
    [KnownType(typeof(FactorComisionVariableNeto))]
    [KnownType(typeof(FactorComisionVariableNuevo))]
    public partial class RamoDetalle: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramo_id", _ramo_id);
                    if (!IsDeserializing)
                    {
                        if (Ramo != null && Ramo.id != value)
                        {
                            Ramo = null;
                        }
                    }
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public string codigoCore
        {
            get { return _codigoCore; }
            set
            {
                if (_codigoCore != value)
                {
                    _codigoCore = value;
                    OnPropertyChanged("codigoCore");
                }
            }
        }
        private string _codigoCore;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<ProductoDetalle> ProductoDetalles
        {
            get
            {
                if (_productoDetalles == null)
                {
                    _productoDetalles = new TrackableCollection<ProductoDetalle>();
                    _productoDetalles.CollectionChanged += FixupProductoDetalles;
                }
                return _productoDetalles;
            }
            set
            {
                if (!ReferenceEquals(_productoDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productoDetalles != null)
                    {
                        _productoDetalles.CollectionChanged -= FixupProductoDetalles;
                    }
                    _productoDetalles = value;
                    if (_productoDetalles != null)
                    {
                        _productoDetalles.CollectionChanged += FixupProductoDetalles;
                    }
                    OnNavigationPropertyChanged("ProductoDetalles");
                }
            }
        }
        private TrackableCollection<ProductoDetalle> _productoDetalles;
    
        [DataMember]
        public Ramo Ramo
        {
            get { return _ramo; }
            set
            {
                if (!ReferenceEquals(_ramo, value))
                {
                    var previousValue = _ramo;
                    _ramo = value;
                    FixupRamo(previousValue);
                    OnNavigationPropertyChanged("Ramo");
                }
            }
        }
        private Ramo _ramo;
    
        [DataMember]
        public TrackableCollection<Siniestralidad> Siniestralidads
        {
            get
            {
                if (_siniestralidads == null)
                {
                    _siniestralidads = new TrackableCollection<Siniestralidad>();
                    _siniestralidads.CollectionChanged += FixupSiniestralidads;
                }
                return _siniestralidads;
            }
            set
            {
                if (!ReferenceEquals(_siniestralidads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged -= FixupSiniestralidads;
                    }
                    _siniestralidads = value;
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged += FixupSiniestralidads;
                    }
                    OnNavigationPropertyChanged("Siniestralidads");
                }
            }
        }
        private TrackableCollection<Siniestralidad> _siniestralidads;
    
        [DataMember]
        public TrackableCollection<Negocio> Negocios
        {
            get
            {
                if (_negocios == null)
                {
                    _negocios = new TrackableCollection<Negocio>();
                    _negocios.CollectionChanged += FixupNegocios;
                }
                return _negocios;
            }
            set
            {
                if (!ReferenceEquals(_negocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged -= FixupNegocios;
                    }
                    _negocios = value;
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged += FixupNegocios;
                    }
                    OnNavigationPropertyChanged("Negocios");
                }
            }
        }
        private TrackableCollection<Negocio> _negocios;
    
        [DataMember]
        public TrackableCollection<Recaudo> Recaudoes
        {
            get
            {
                if (_recaudoes == null)
                {
                    _recaudoes = new TrackableCollection<Recaudo>();
                    _recaudoes.CollectionChanged += FixupRecaudoes;
                }
                return _recaudoes;
            }
            set
            {
                if (!ReferenceEquals(_recaudoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged -= FixupRecaudoes;
                    }
                    _recaudoes = value;
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged += FixupRecaudoes;
                    }
                    OnNavigationPropertyChanged("Recaudoes");
                }
            }
        }
        private TrackableCollection<Recaudo> _recaudoes;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;
    
        [DataMember]
        public TrackableCollection<FactorComisionFija> FactorComisionFijas
        {
            get
            {
                if (_factorComisionFijas == null)
                {
                    _factorComisionFijas = new TrackableCollection<FactorComisionFija>();
                    _factorComisionFijas.CollectionChanged += FixupFactorComisionFijas;
                }
                return _factorComisionFijas;
            }
            set
            {
                if (!ReferenceEquals(_factorComisionFijas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_factorComisionFijas != null)
                    {
                        _factorComisionFijas.CollectionChanged -= FixupFactorComisionFijas;
                    }
                    _factorComisionFijas = value;
                    if (_factorComisionFijas != null)
                    {
                        _factorComisionFijas.CollectionChanged += FixupFactorComisionFijas;
                    }
                    OnNavigationPropertyChanged("FactorComisionFijas");
                }
            }
        }
        private TrackableCollection<FactorComisionFija> _factorComisionFijas;
    
        [DataMember]
        public TrackableCollection<FactorComisionVariableNeto> FactorComisionVariableNetoes
        {
            get
            {
                if (_factorComisionVariableNetoes == null)
                {
                    _factorComisionVariableNetoes = new TrackableCollection<FactorComisionVariableNeto>();
                    _factorComisionVariableNetoes.CollectionChanged += FixupFactorComisionVariableNetoes;
                }
                return _factorComisionVariableNetoes;
            }
            set
            {
                if (!ReferenceEquals(_factorComisionVariableNetoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_factorComisionVariableNetoes != null)
                    {
                        _factorComisionVariableNetoes.CollectionChanged -= FixupFactorComisionVariableNetoes;
                    }
                    _factorComisionVariableNetoes = value;
                    if (_factorComisionVariableNetoes != null)
                    {
                        _factorComisionVariableNetoes.CollectionChanged += FixupFactorComisionVariableNetoes;
                    }
                    OnNavigationPropertyChanged("FactorComisionVariableNetoes");
                }
            }
        }
        private TrackableCollection<FactorComisionVariableNeto> _factorComisionVariableNetoes;
    
        [DataMember]
        public TrackableCollection<FactorComisionVariableNuevo> FactorComisionVariableNuevoes
        {
            get
            {
                if (_factorComisionVariableNuevoes == null)
                {
                    _factorComisionVariableNuevoes = new TrackableCollection<FactorComisionVariableNuevo>();
                    _factorComisionVariableNuevoes.CollectionChanged += FixupFactorComisionVariableNuevoes;
                }
                return _factorComisionVariableNuevoes;
            }
            set
            {
                if (!ReferenceEquals(_factorComisionVariableNuevoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_factorComisionVariableNuevoes != null)
                    {
                        _factorComisionVariableNuevoes.CollectionChanged -= FixupFactorComisionVariableNuevoes;
                    }
                    _factorComisionVariableNuevoes = value;
                    if (_factorComisionVariableNuevoes != null)
                    {
                        _factorComisionVariableNuevoes.CollectionChanged += FixupFactorComisionVariableNuevoes;
                    }
                    OnNavigationPropertyChanged("FactorComisionVariableNuevoes");
                }
            }
        }
        private TrackableCollection<FactorComisionVariableNuevo> _factorComisionVariableNuevoes;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            ProductoDetalles.Clear();
            Ramo = null;
            Siniestralidads.Clear();
            Negocios.Clear();
            Recaudoes.Clear();
            Compania = null;
            FactorComisionFijas.Clear();
            FactorComisionVariableNetoes.Clear();
            FactorComisionVariableNuevoes.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupRamo(Ramo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RamoDetalles.Contains(this))
            {
                previousValue.RamoDetalles.Remove(this);
            }
    
            if (Ramo != null)
            {
                if (!Ramo.RamoDetalles.Contains(this))
                {
                    Ramo.RamoDetalles.Add(this);
                }
    
                ramo_id = Ramo.id;
            }
            else if (!skipKeys)
            {
                ramo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Ramo")
                    && (ChangeTracker.OriginalValues["Ramo"] == Ramo))
                {
                    ChangeTracker.OriginalValues.Remove("Ramo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Ramo", previousValue);
                }
                if (Ramo != null && !Ramo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Ramo.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.RamoDetalles.Contains(this))
            {
                previousValue.RamoDetalles.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.RamoDetalles.Contains(this))
                {
                    Compania.RamoDetalles.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }
    
        private void FixupProductoDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductoDetalle item in e.NewItems)
                {
                    item.RamoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductoDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductoDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.RamoDetalle, this))
                    {
                        item.RamoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductoDetalles", item);
                    }
                }
            }
        }
    
        private void FixupSiniestralidads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Siniestralidad item in e.NewItems)
                {
                    item.RamoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Siniestralidads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Siniestralidad item in e.OldItems)
                {
                    if (ReferenceEquals(item.RamoDetalle, this))
                    {
                        item.RamoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Siniestralidads", item);
                    }
                }
            }
        }
    
        private void FixupNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Negocio item in e.NewItems)
                {
                    item.RamoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Negocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Negocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.RamoDetalle, this))
                    {
                        item.RamoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Negocios", item);
                    }
                }
            }
        }
    
        private void FixupRecaudoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Recaudo item in e.NewItems)
                {
                    item.RamoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Recaudoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recaudo item in e.OldItems)
                {
                    if (ReferenceEquals(item.RamoDetalle, this))
                    {
                        item.RamoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Recaudoes", item);
                    }
                }
            }
        }
    
        private void FixupFactorComisionFijas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FactorComisionFija item in e.NewItems)
                {
                    item.RamoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FactorComisionFijas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FactorComisionFija item in e.OldItems)
                {
                    if (ReferenceEquals(item.RamoDetalle, this))
                    {
                        item.RamoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FactorComisionFijas", item);
                    }
                }
            }
        }
    
        private void FixupFactorComisionVariableNetoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FactorComisionVariableNeto item in e.NewItems)
                {
                    item.RamoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FactorComisionVariableNetoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FactorComisionVariableNeto item in e.OldItems)
                {
                    if (ReferenceEquals(item.RamoDetalle, this))
                    {
                        item.RamoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FactorComisionVariableNetoes", item);
                    }
                }
            }
        }
    
        private void FixupFactorComisionVariableNuevoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FactorComisionVariableNuevo item in e.NewItems)
                {
                    item.RamoDetalle = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FactorComisionVariableNuevoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FactorComisionVariableNuevo item in e.OldItems)
                {
                    if (ReferenceEquals(item.RamoDetalle, this))
                    {
                        item.RamoDetalle = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FactorComisionVariableNuevoes", item);
                    }
                }
            }
        }

        #endregion
    }
}
