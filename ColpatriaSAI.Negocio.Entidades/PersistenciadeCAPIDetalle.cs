//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Localidad))]
    [KnownType(typeof(PlanDetalle))]
    [KnownType(typeof(Plazo))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(Ramo))]
    [KnownType(typeof(Participante))]
    public partial class PersistenciadeCAPIDetalle: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> mesCierre
        {
            get { return _mesCierre; }
            set
            {
                if (_mesCierre != value)
                {
                    _mesCierre = value;
                    OnPropertyChanged("mesCierre");
                }
            }
        }
        private Nullable<int> _mesCierre;
    
        [DataMember]
        public string clave
        {
            get { return _clave; }
            set
            {
                if (_clave != value)
                {
                    _clave = value;
                    OnPropertyChanged("clave");
                }
            }
        }
        private string _clave;
    
        [DataMember]
        public Nullable<int> participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    ChangeTracker.RecordOriginalValue("participante_id", _participante_id);
                    if (!IsDeserializing)
                    {
                        if (Participante != null && Participante.id != value)
                        {
                            Participante = null;
                        }
                    }
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private Nullable<int> _participante_id;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public Nullable<int> plazo_id
        {
            get { return _plazo_id; }
            set
            {
                if (_plazo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("plazo_id", _plazo_id);
                    if (!IsDeserializing)
                    {
                        if (Plazo != null && Plazo.id != value)
                        {
                            Plazo = null;
                        }
                    }
                    _plazo_id = value;
                    OnPropertyChanged("plazo_id");
                }
            }
        }
        private Nullable<int> _plazo_id;
    
        [DataMember]
        public Nullable<double> valorPrimaTotal
        {
            get { return _valorPrimaTotal; }
            set
            {
                if (_valorPrimaTotal != value)
                {
                    _valorPrimaTotal = value;
                    OnPropertyChanged("valorPrimaTotal");
                }
            }
        }
        private Nullable<double> _valorPrimaTotal;
    
        [DataMember]
        public Nullable<int> cuotasPagadas
        {
            get { return _cuotasPagadas; }
            set
            {
                if (_cuotasPagadas != value)
                {
                    _cuotasPagadas = value;
                    OnPropertyChanged("cuotasPagadas");
                }
            }
        }
        private Nullable<int> _cuotasPagadas;
    
        [DataMember]
        public Nullable<int> cuotasVencidas
        {
            get { return _cuotasVencidas; }
            set
            {
                if (_cuotasVencidas != value)
                {
                    _cuotasVencidas = value;
                    OnPropertyChanged("cuotasVencidas");
                }
            }
        }
        private Nullable<int> _cuotasVencidas;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCierre
        {
            get { return _fechaCierre; }
            set
            {
                if (_fechaCierre != value)
                {
                    _fechaCierre = value;
                    OnPropertyChanged("fechaCierre");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCierre;
    
        [DataMember]
        public Nullable<System.DateTime> fechaUltimoRecaudo
        {
            get { return _fechaUltimoRecaudo; }
            set
            {
                if (_fechaUltimoRecaudo != value)
                {
                    _fechaUltimoRecaudo = value;
                    OnPropertyChanged("fechaUltimoRecaudo");
                }
            }
        }
        private Nullable<System.DateTime> _fechaUltimoRecaudo;
    
        [DataMember]
        public Nullable<int> anioCierreNegocio
        {
            get { return _anioCierreNegocio; }
            set
            {
                if (_anioCierreNegocio != value)
                {
                    _anioCierreNegocio = value;
                    OnPropertyChanged("anioCierreNegocio");
                }
            }
        }
        private Nullable<int> _anioCierreNegocio;
    
        [DataMember]
        public Nullable<bool> cumple
        {
            get { return _cumple; }
            set
            {
                if (_cumple != value)
                {
                    _cumple = value;
                    OnPropertyChanged("cumple");
                }
            }
        }
        private Nullable<bool> _cumple;
    
        [DataMember]
        public string comentarios
        {
            get { return _comentarios; }
            set
            {
                if (_comentarios != value)
                {
                    _comentarios = value;
                    OnPropertyChanged("comentarios");
                }
            }
        }
        private string _comentarios;
    
        [DataMember]
        public string nombreSuscriptor
        {
            get { return _nombreSuscriptor; }
            set
            {
                if (_nombreSuscriptor != value)
                {
                    _nombreSuscriptor = value;
                    OnPropertyChanged("nombreSuscriptor");
                }
            }
        }
        private string _nombreSuscriptor;
    
        [DataMember]
        public Nullable<int> planDetalle_id
        {
            get { return _planDetalle_id; }
            set
            {
                if (_planDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("planDetalle_id", _planDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (PlanDetalle != null && PlanDetalle.id != value)
                        {
                            PlanDetalle = null;
                        }
                    }
                    _planDetalle_id = value;
                    OnPropertyChanged("planDetalle_id");
                }
            }
        }
        private Nullable<int> _planDetalle_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("localidad_id", _localidad_id);
                    if (!IsDeserializing)
                    {
                        if (Localidad != null && Localidad.id != value)
                        {
                            Localidad = null;
                        }
                    }
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramo_id", _ramo_id);
                    if (!IsDeserializing)
                    {
                        if (Ramo != null && Ramo.id != value)
                        {
                            Ramo = null;
                        }
                    }
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public string identificacionSuscriptor
        {
            get { return _identificacionSuscriptor; }
            set
            {
                if (_identificacionSuscriptor != value)
                {
                    _identificacionSuscriptor = value;
                    OnPropertyChanged("identificacionSuscriptor");
                }
            }
        }
        private string _identificacionSuscriptor;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                    OnNavigationPropertyChanged("Localidad");
                }
            }
        }
        private Localidad _localidad;
    
        [DataMember]
        public PlanDetalle PlanDetalle
        {
            get { return _planDetalle; }
            set
            {
                if (!ReferenceEquals(_planDetalle, value))
                {
                    var previousValue = _planDetalle;
                    _planDetalle = value;
                    FixupPlanDetalle(previousValue);
                    OnNavigationPropertyChanged("PlanDetalle");
                }
            }
        }
        private PlanDetalle _planDetalle;
    
        [DataMember]
        public Plazo Plazo
        {
            get { return _plazo; }
            set
            {
                if (!ReferenceEquals(_plazo, value))
                {
                    var previousValue = _plazo;
                    _plazo = value;
                    FixupPlazo(previousValue);
                    OnNavigationPropertyChanged("Plazo");
                }
            }
        }
        private Plazo _plazo;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public Ramo Ramo
        {
            get { return _ramo; }
            set
            {
                if (!ReferenceEquals(_ramo, value))
                {
                    var previousValue = _ramo;
                    _ramo = value;
                    FixupRamo(previousValue);
                    OnNavigationPropertyChanged("Ramo");
                }
            }
        }
        private Ramo _ramo;
    
        [DataMember]
        public Participante Participante
        {
            get { return _participante; }
            set
            {
                if (!ReferenceEquals(_participante, value))
                {
                    var previousValue = _participante;
                    _participante = value;
                    FixupParticipante(previousValue);
                    OnNavigationPropertyChanged("Participante");
                }
            }
        }
        private Participante _participante;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Localidad = null;
            PlanDetalle = null;
            Plazo = null;
            Zona = null;
            Ramo = null;
            Participante = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupLocalidad(Localidad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PersistenciadeCAPIDetalles.Contains(this))
            {
                previousValue.PersistenciadeCAPIDetalles.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.PersistenciadeCAPIDetalles.Contains(this))
                {
                    Localidad.PersistenciadeCAPIDetalles.Add(this);
                }
    
                localidad_id = Localidad.id;
            }
            else if (!skipKeys)
            {
                localidad_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localidad")
                    && (ChangeTracker.OriginalValues["Localidad"] == Localidad))
                {
                    ChangeTracker.OriginalValues.Remove("Localidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localidad", previousValue);
                }
                if (Localidad != null && !Localidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localidad.StartTracking();
                }
            }
        }
    
        private void FixupPlanDetalle(PlanDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PersistenciadeCAPIDetalles.Contains(this))
            {
                previousValue.PersistenciadeCAPIDetalles.Remove(this);
            }
    
            if (PlanDetalle != null)
            {
                if (!PlanDetalle.PersistenciadeCAPIDetalles.Contains(this))
                {
                    PlanDetalle.PersistenciadeCAPIDetalles.Add(this);
                }
    
                planDetalle_id = PlanDetalle.id;
            }
            else if (!skipKeys)
            {
                planDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PlanDetalle")
                    && (ChangeTracker.OriginalValues["PlanDetalle"] == PlanDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("PlanDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PlanDetalle", previousValue);
                }
                if (PlanDetalle != null && !PlanDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    PlanDetalle.StartTracking();
                }
            }
        }
    
        private void FixupPlazo(Plazo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PersistenciadeCAPIDetalles.Contains(this))
            {
                previousValue.PersistenciadeCAPIDetalles.Remove(this);
            }
    
            if (Plazo != null)
            {
                if (!Plazo.PersistenciadeCAPIDetalles.Contains(this))
                {
                    Plazo.PersistenciadeCAPIDetalles.Add(this);
                }
    
                plazo_id = Plazo.id;
            }
            else if (!skipKeys)
            {
                plazo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Plazo")
                    && (ChangeTracker.OriginalValues["Plazo"] == Plazo))
                {
                    ChangeTracker.OriginalValues.Remove("Plazo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Plazo", previousValue);
                }
                if (Plazo != null && !Plazo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Plazo.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PersistenciadeCAPIDetalles.Contains(this))
            {
                previousValue.PersistenciadeCAPIDetalles.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.PersistenciadeCAPIDetalles.Contains(this))
                {
                    Zona.PersistenciadeCAPIDetalles.Add(this);
                }
    
                zona_id = Zona.id;
            }
            else if (!skipKeys)
            {
                zona_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupRamo(Ramo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PersistenciadeCAPIDetalles.Contains(this))
            {
                previousValue.PersistenciadeCAPIDetalles.Remove(this);
            }
    
            if (Ramo != null)
            {
                if (!Ramo.PersistenciadeCAPIDetalles.Contains(this))
                {
                    Ramo.PersistenciadeCAPIDetalles.Add(this);
                }
    
                ramo_id = Ramo.id;
            }
            else if (!skipKeys)
            {
                ramo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Ramo")
                    && (ChangeTracker.OriginalValues["Ramo"] == Ramo))
                {
                    ChangeTracker.OriginalValues.Remove("Ramo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Ramo", previousValue);
                }
                if (Ramo != null && !Ramo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Ramo.StartTracking();
                }
            }
        }
    
        private void FixupParticipante(Participante previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.PersistenciadeCAPIDetalles.Contains(this))
            {
                previousValue.PersistenciadeCAPIDetalles.Remove(this);
            }
    
            if (Participante != null)
            {
                if (!Participante.PersistenciadeCAPIDetalles.Contains(this))
                {
                    Participante.PersistenciadeCAPIDetalles.Add(this);
                }
    
                participante_id = Participante.id;
            }
            else if (!skipKeys)
            {
                participante_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Participante")
                    && (ChangeTracker.OriginalValues["Participante"] == Participante))
                {
                    ChangeTracker.OriginalValues.Remove("Participante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Participante", previousValue);
                }
                if (Participante != null && !Participante.ChangeTracker.ChangeTrackingEnabled)
                {
                    Participante.StartTracking();
                }
            }
        }

        #endregion
    }
}
