//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AnticipoFranquicia))]
    [KnownType(typeof(BancoDetalle))]
    [KnownType(typeof(Comision))]
    [KnownType(typeof(ConsolidadoMe))]
    [KnownType(typeof(Negocio))]
    [KnownType(typeof(RamoDetalle))]
    [KnownType(typeof(Recaudo))]
    [KnownType(typeof(RedDetalle))]
    [KnownType(typeof(TipoEndoso))]
    [KnownType(typeof(CompaniaxEtapa))]
    [KnownType(typeof(ConceptoPago))]
    [KnownType(typeof(DetallePagosFranquicia))]
    [KnownType(typeof(DetallePartFranquicia))]
    [KnownType(typeof(Excepcion))]
    [KnownType(typeof(ExcepcionesGenerale))]
    [KnownType(typeof(ExcepcionesxGrupoTipoEndoso))]
    [KnownType(typeof(LiquidacionMoneda))]
    [KnownType(typeof(MonedaxNegocio))]
    [KnownType(typeof(Pago))]
    [KnownType(typeof(ParticipacionDirector))]
    [KnownType(typeof(Participacione))]
    [KnownType(typeof(ParticipanteConcurso))]
    [KnownType(typeof(PeriodoCierre))]
    [KnownType(typeof(Persistencia))]
    [KnownType(typeof(ProductoCombo))]
    [KnownType(typeof(ProductoConcurso))]
    [KnownType(typeof(ProductosMeta))]
    [KnownType(typeof(Ramo))]
    [KnownType(typeof(Siniestralidad))]
    [KnownType(typeof(TopeMoneda))]
    [KnownType(typeof(TopexEdad))]
    [KnownType(typeof(ActividadEconomica))]
    [KnownType(typeof(FactorComisionFija))]
    [KnownType(typeof(FactorComisionVariableNeto))]
    [KnownType(typeof(FactorComisionVariableNuevo))]
    [KnownType(typeof(TipoContrato))]
    [KnownType(typeof(Participante))]
    public partial class Compania: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public string codigoCore
        {
            get { return _codigoCore; }
            set
            {
                if (_codigoCore != value)
                {
                    _codigoCore = value;
                    OnPropertyChanged("codigoCore");
                }
            }
        }
        private string _codigoCore;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AnticipoFranquicia> AnticipoFranquicias
        {
            get
            {
                if (_anticipoFranquicias == null)
                {
                    _anticipoFranquicias = new TrackableCollection<AnticipoFranquicia>();
                    _anticipoFranquicias.CollectionChanged += FixupAnticipoFranquicias;
                }
                return _anticipoFranquicias;
            }
            set
            {
                if (!ReferenceEquals(_anticipoFranquicias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_anticipoFranquicias != null)
                    {
                        _anticipoFranquicias.CollectionChanged -= FixupAnticipoFranquicias;
                    }
                    _anticipoFranquicias = value;
                    if (_anticipoFranquicias != null)
                    {
                        _anticipoFranquicias.CollectionChanged += FixupAnticipoFranquicias;
                    }
                    OnNavigationPropertyChanged("AnticipoFranquicias");
                }
            }
        }
        private TrackableCollection<AnticipoFranquicia> _anticipoFranquicias;
    
        [DataMember]
        public TrackableCollection<BancoDetalle> BancoDetalles
        {
            get
            {
                if (_bancoDetalles == null)
                {
                    _bancoDetalles = new TrackableCollection<BancoDetalle>();
                    _bancoDetalles.CollectionChanged += FixupBancoDetalles;
                }
                return _bancoDetalles;
            }
            set
            {
                if (!ReferenceEquals(_bancoDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_bancoDetalles != null)
                    {
                        _bancoDetalles.CollectionChanged -= FixupBancoDetalles;
                    }
                    _bancoDetalles = value;
                    if (_bancoDetalles != null)
                    {
                        _bancoDetalles.CollectionChanged += FixupBancoDetalles;
                    }
                    OnNavigationPropertyChanged("BancoDetalles");
                }
            }
        }
        private TrackableCollection<BancoDetalle> _bancoDetalles;
    
        [DataMember]
        public TrackableCollection<Comision> Comisions
        {
            get
            {
                if (_comisions == null)
                {
                    _comisions = new TrackableCollection<Comision>();
                    _comisions.CollectionChanged += FixupComisions;
                }
                return _comisions;
            }
            set
            {
                if (!ReferenceEquals(_comisions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged -= FixupComisions;
                    }
                    _comisions = value;
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged += FixupComisions;
                    }
                    OnNavigationPropertyChanged("Comisions");
                }
            }
        }
        private TrackableCollection<Comision> _comisions;
    
        [DataMember]
        public TrackableCollection<Comision> Comisions1
        {
            get
            {
                if (_comisions1 == null)
                {
                    _comisions1 = new TrackableCollection<Comision>();
                    _comisions1.CollectionChanged += FixupComisions1;
                }
                return _comisions1;
            }
            set
            {
                if (!ReferenceEquals(_comisions1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisions1 != null)
                    {
                        _comisions1.CollectionChanged -= FixupComisions1;
                    }
                    _comisions1 = value;
                    if (_comisions1 != null)
                    {
                        _comisions1.CollectionChanged += FixupComisions1;
                    }
                    OnNavigationPropertyChanged("Comisions1");
                }
            }
        }
        private TrackableCollection<Comision> _comisions1;
    
        [DataMember]
        public TrackableCollection<ConsolidadoMe> ConsolidadoMes
        {
            get
            {
                if (_consolidadoMes == null)
                {
                    _consolidadoMes = new TrackableCollection<ConsolidadoMe>();
                    _consolidadoMes.CollectionChanged += FixupConsolidadoMes;
                }
                return _consolidadoMes;
            }
            set
            {
                if (!ReferenceEquals(_consolidadoMes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_consolidadoMes != null)
                    {
                        _consolidadoMes.CollectionChanged -= FixupConsolidadoMes;
                    }
                    _consolidadoMes = value;
                    if (_consolidadoMes != null)
                    {
                        _consolidadoMes.CollectionChanged += FixupConsolidadoMes;
                    }
                    OnNavigationPropertyChanged("ConsolidadoMes");
                }
            }
        }
        private TrackableCollection<ConsolidadoMe> _consolidadoMes;
    
        [DataMember]
        public TrackableCollection<Negocio> Negocios
        {
            get
            {
                if (_negocios == null)
                {
                    _negocios = new TrackableCollection<Negocio>();
                    _negocios.CollectionChanged += FixupNegocios;
                }
                return _negocios;
            }
            set
            {
                if (!ReferenceEquals(_negocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged -= FixupNegocios;
                    }
                    _negocios = value;
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged += FixupNegocios;
                    }
                    OnNavigationPropertyChanged("Negocios");
                }
            }
        }
        private TrackableCollection<Negocio> _negocios;
    
        [DataMember]
        public TrackableCollection<RamoDetalle> RamoDetalles
        {
            get
            {
                if (_ramoDetalles == null)
                {
                    _ramoDetalles = new TrackableCollection<RamoDetalle>();
                    _ramoDetalles.CollectionChanged += FixupRamoDetalles;
                }
                return _ramoDetalles;
            }
            set
            {
                if (!ReferenceEquals(_ramoDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ramoDetalles != null)
                    {
                        _ramoDetalles.CollectionChanged -= FixupRamoDetalles;
                    }
                    _ramoDetalles = value;
                    if (_ramoDetalles != null)
                    {
                        _ramoDetalles.CollectionChanged += FixupRamoDetalles;
                    }
                    OnNavigationPropertyChanged("RamoDetalles");
                }
            }
        }
        private TrackableCollection<RamoDetalle> _ramoDetalles;
    
        [DataMember]
        public TrackableCollection<Recaudo> Recaudoes
        {
            get
            {
                if (_recaudoes == null)
                {
                    _recaudoes = new TrackableCollection<Recaudo>();
                    _recaudoes.CollectionChanged += FixupRecaudoes;
                }
                return _recaudoes;
            }
            set
            {
                if (!ReferenceEquals(_recaudoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged -= FixupRecaudoes;
                    }
                    _recaudoes = value;
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged += FixupRecaudoes;
                    }
                    OnNavigationPropertyChanged("Recaudoes");
                }
            }
        }
        private TrackableCollection<Recaudo> _recaudoes;
    
        [DataMember]
        public TrackableCollection<RedDetalle> RedDetalles
        {
            get
            {
                if (_redDetalles == null)
                {
                    _redDetalles = new TrackableCollection<RedDetalle>();
                    _redDetalles.CollectionChanged += FixupRedDetalles;
                }
                return _redDetalles;
            }
            set
            {
                if (!ReferenceEquals(_redDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_redDetalles != null)
                    {
                        _redDetalles.CollectionChanged -= FixupRedDetalles;
                    }
                    _redDetalles = value;
                    if (_redDetalles != null)
                    {
                        _redDetalles.CollectionChanged += FixupRedDetalles;
                    }
                    OnNavigationPropertyChanged("RedDetalles");
                }
            }
        }
        private TrackableCollection<RedDetalle> _redDetalles;
    
        [DataMember]
        public TrackableCollection<TipoEndoso> TipoEndosoes
        {
            get
            {
                if (_tipoEndosoes == null)
                {
                    _tipoEndosoes = new TrackableCollection<TipoEndoso>();
                    _tipoEndosoes.CollectionChanged += FixupTipoEndosoes;
                }
                return _tipoEndosoes;
            }
            set
            {
                if (!ReferenceEquals(_tipoEndosoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tipoEndosoes != null)
                    {
                        _tipoEndosoes.CollectionChanged -= FixupTipoEndosoes;
                    }
                    _tipoEndosoes = value;
                    if (_tipoEndosoes != null)
                    {
                        _tipoEndosoes.CollectionChanged += FixupTipoEndosoes;
                    }
                    OnNavigationPropertyChanged("TipoEndosoes");
                }
            }
        }
        private TrackableCollection<TipoEndoso> _tipoEndosoes;
    
        [DataMember]
        public TrackableCollection<CompaniaxEtapa> CompaniaxEtapas
        {
            get
            {
                if (_companiaxEtapas == null)
                {
                    _companiaxEtapas = new TrackableCollection<CompaniaxEtapa>();
                    _companiaxEtapas.CollectionChanged += FixupCompaniaxEtapas;
                }
                return _companiaxEtapas;
            }
            set
            {
                if (!ReferenceEquals(_companiaxEtapas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_companiaxEtapas != null)
                    {
                        _companiaxEtapas.CollectionChanged -= FixupCompaniaxEtapas;
                    }
                    _companiaxEtapas = value;
                    if (_companiaxEtapas != null)
                    {
                        _companiaxEtapas.CollectionChanged += FixupCompaniaxEtapas;
                    }
                    OnNavigationPropertyChanged("CompaniaxEtapas");
                }
            }
        }
        private TrackableCollection<CompaniaxEtapa> _companiaxEtapas;
    
        [DataMember]
        public TrackableCollection<ConceptoPago> ConceptoPagoes
        {
            get
            {
                if (_conceptoPagoes == null)
                {
                    _conceptoPagoes = new TrackableCollection<ConceptoPago>();
                    _conceptoPagoes.CollectionChanged += FixupConceptoPagoes;
                }
                return _conceptoPagoes;
            }
            set
            {
                if (!ReferenceEquals(_conceptoPagoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_conceptoPagoes != null)
                    {
                        _conceptoPagoes.CollectionChanged -= FixupConceptoPagoes;
                    }
                    _conceptoPagoes = value;
                    if (_conceptoPagoes != null)
                    {
                        _conceptoPagoes.CollectionChanged += FixupConceptoPagoes;
                    }
                    OnNavigationPropertyChanged("ConceptoPagoes");
                }
            }
        }
        private TrackableCollection<ConceptoPago> _conceptoPagoes;
    
        [DataMember]
        public TrackableCollection<DetallePagosFranquicia> DetallePagosFranquicias
        {
            get
            {
                if (_detallePagosFranquicias == null)
                {
                    _detallePagosFranquicias = new TrackableCollection<DetallePagosFranquicia>();
                    _detallePagosFranquicias.CollectionChanged += FixupDetallePagosFranquicias;
                }
                return _detallePagosFranquicias;
            }
            set
            {
                if (!ReferenceEquals(_detallePagosFranquicias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detallePagosFranquicias != null)
                    {
                        _detallePagosFranquicias.CollectionChanged -= FixupDetallePagosFranquicias;
                    }
                    _detallePagosFranquicias = value;
                    if (_detallePagosFranquicias != null)
                    {
                        _detallePagosFranquicias.CollectionChanged += FixupDetallePagosFranquicias;
                    }
                    OnNavigationPropertyChanged("DetallePagosFranquicias");
                }
            }
        }
        private TrackableCollection<DetallePagosFranquicia> _detallePagosFranquicias;
    
        [DataMember]
        public TrackableCollection<DetallePartFranquicia> DetallePartFranquicias
        {
            get
            {
                if (_detallePartFranquicias == null)
                {
                    _detallePartFranquicias = new TrackableCollection<DetallePartFranquicia>();
                    _detallePartFranquicias.CollectionChanged += FixupDetallePartFranquicias;
                }
                return _detallePartFranquicias;
            }
            set
            {
                if (!ReferenceEquals(_detallePartFranquicias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detallePartFranquicias != null)
                    {
                        _detallePartFranquicias.CollectionChanged -= FixupDetallePartFranquicias;
                    }
                    _detallePartFranquicias = value;
                    if (_detallePartFranquicias != null)
                    {
                        _detallePartFranquicias.CollectionChanged += FixupDetallePartFranquicias;
                    }
                    OnNavigationPropertyChanged("DetallePartFranquicias");
                }
            }
        }
        private TrackableCollection<DetallePartFranquicia> _detallePartFranquicias;
    
        [DataMember]
        public TrackableCollection<Excepcion> Excepcions
        {
            get
            {
                if (_excepcions == null)
                {
                    _excepcions = new TrackableCollection<Excepcion>();
                    _excepcions.CollectionChanged += FixupExcepcions;
                }
                return _excepcions;
            }
            set
            {
                if (!ReferenceEquals(_excepcions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged -= FixupExcepcions;
                    }
                    _excepcions = value;
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged += FixupExcepcions;
                    }
                    OnNavigationPropertyChanged("Excepcions");
                }
            }
        }
        private TrackableCollection<Excepcion> _excepcions;
    
        [DataMember]
        public TrackableCollection<ExcepcionesGenerale> ExcepcionesGenerales
        {
            get
            {
                if (_excepcionesGenerales == null)
                {
                    _excepcionesGenerales = new TrackableCollection<ExcepcionesGenerale>();
                    _excepcionesGenerales.CollectionChanged += FixupExcepcionesGenerales;
                }
                return _excepcionesGenerales;
            }
            set
            {
                if (!ReferenceEquals(_excepcionesGenerales, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionesGenerales != null)
                    {
                        _excepcionesGenerales.CollectionChanged -= FixupExcepcionesGenerales;
                    }
                    _excepcionesGenerales = value;
                    if (_excepcionesGenerales != null)
                    {
                        _excepcionesGenerales.CollectionChanged += FixupExcepcionesGenerales;
                    }
                    OnNavigationPropertyChanged("ExcepcionesGenerales");
                }
            }
        }
        private TrackableCollection<ExcepcionesGenerale> _excepcionesGenerales;
    
        [DataMember]
        public TrackableCollection<ExcepcionesxGrupoTipoEndoso> ExcepcionesxGrupoTipoEndosoes
        {
            get
            {
                if (_excepcionesxGrupoTipoEndosoes == null)
                {
                    _excepcionesxGrupoTipoEndosoes = new TrackableCollection<ExcepcionesxGrupoTipoEndoso>();
                    _excepcionesxGrupoTipoEndosoes.CollectionChanged += FixupExcepcionesxGrupoTipoEndosoes;
                }
                return _excepcionesxGrupoTipoEndosoes;
            }
            set
            {
                if (!ReferenceEquals(_excepcionesxGrupoTipoEndosoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionesxGrupoTipoEndosoes != null)
                    {
                        _excepcionesxGrupoTipoEndosoes.CollectionChanged -= FixupExcepcionesxGrupoTipoEndosoes;
                    }
                    _excepcionesxGrupoTipoEndosoes = value;
                    if (_excepcionesxGrupoTipoEndosoes != null)
                    {
                        _excepcionesxGrupoTipoEndosoes.CollectionChanged += FixupExcepcionesxGrupoTipoEndosoes;
                    }
                    OnNavigationPropertyChanged("ExcepcionesxGrupoTipoEndosoes");
                }
            }
        }
        private TrackableCollection<ExcepcionesxGrupoTipoEndoso> _excepcionesxGrupoTipoEndosoes;
    
        [DataMember]
        public TrackableCollection<LiquidacionMoneda> LiquidacionMonedas
        {
            get
            {
                if (_liquidacionMonedas == null)
                {
                    _liquidacionMonedas = new TrackableCollection<LiquidacionMoneda>();
                    _liquidacionMonedas.CollectionChanged += FixupLiquidacionMonedas;
                }
                return _liquidacionMonedas;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionMonedas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionMonedas != null)
                    {
                        _liquidacionMonedas.CollectionChanged -= FixupLiquidacionMonedas;
                    }
                    _liquidacionMonedas = value;
                    if (_liquidacionMonedas != null)
                    {
                        _liquidacionMonedas.CollectionChanged += FixupLiquidacionMonedas;
                    }
                    OnNavigationPropertyChanged("LiquidacionMonedas");
                }
            }
        }
        private TrackableCollection<LiquidacionMoneda> _liquidacionMonedas;
    
        [DataMember]
        public TrackableCollection<MonedaxNegocio> MonedaxNegocios
        {
            get
            {
                if (_monedaxNegocios == null)
                {
                    _monedaxNegocios = new TrackableCollection<MonedaxNegocio>();
                    _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                }
                return _monedaxNegocios;
            }
            set
            {
                if (!ReferenceEquals(_monedaxNegocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged -= FixupMonedaxNegocios;
                    }
                    _monedaxNegocios = value;
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                    }
                    OnNavigationPropertyChanged("MonedaxNegocios");
                }
            }
        }
        private TrackableCollection<MonedaxNegocio> _monedaxNegocios;
    
        [DataMember]
        public TrackableCollection<Pago> Pagoes
        {
            get
            {
                if (_pagoes == null)
                {
                    _pagoes = new TrackableCollection<Pago>();
                    _pagoes.CollectionChanged += FixupPagoes;
                }
                return _pagoes;
            }
            set
            {
                if (!ReferenceEquals(_pagoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_pagoes != null)
                    {
                        _pagoes.CollectionChanged -= FixupPagoes;
                    }
                    _pagoes = value;
                    if (_pagoes != null)
                    {
                        _pagoes.CollectionChanged += FixupPagoes;
                    }
                    OnNavigationPropertyChanged("Pagoes");
                }
            }
        }
        private TrackableCollection<Pago> _pagoes;
    
        [DataMember]
        public TrackableCollection<ParticipacionDirector> ParticipacionDirectors
        {
            get
            {
                if (_participacionDirectors == null)
                {
                    _participacionDirectors = new TrackableCollection<ParticipacionDirector>();
                    _participacionDirectors.CollectionChanged += FixupParticipacionDirectors;
                }
                return _participacionDirectors;
            }
            set
            {
                if (!ReferenceEquals(_participacionDirectors, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participacionDirectors != null)
                    {
                        _participacionDirectors.CollectionChanged -= FixupParticipacionDirectors;
                    }
                    _participacionDirectors = value;
                    if (_participacionDirectors != null)
                    {
                        _participacionDirectors.CollectionChanged += FixupParticipacionDirectors;
                    }
                    OnNavigationPropertyChanged("ParticipacionDirectors");
                }
            }
        }
        private TrackableCollection<ParticipacionDirector> _participacionDirectors;
    
        [DataMember]
        public TrackableCollection<Participacione> Participaciones
        {
            get
            {
                if (_participaciones == null)
                {
                    _participaciones = new TrackableCollection<Participacione>();
                    _participaciones.CollectionChanged += FixupParticipaciones;
                }
                return _participaciones;
            }
            set
            {
                if (!ReferenceEquals(_participaciones, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participaciones != null)
                    {
                        _participaciones.CollectionChanged -= FixupParticipaciones;
                    }
                    _participaciones = value;
                    if (_participaciones != null)
                    {
                        _participaciones.CollectionChanged += FixupParticipaciones;
                    }
                    OnNavigationPropertyChanged("Participaciones");
                }
            }
        }
        private TrackableCollection<Participacione> _participaciones;
    
        [DataMember]
        public TrackableCollection<ParticipanteConcurso> ParticipanteConcursoes
        {
            get
            {
                if (_participanteConcursoes == null)
                {
                    _participanteConcursoes = new TrackableCollection<ParticipanteConcurso>();
                    _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                }
                return _participanteConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_participanteConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged -= FixupParticipanteConcursoes;
                    }
                    _participanteConcursoes = value;
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                    }
                    OnNavigationPropertyChanged("ParticipanteConcursoes");
                }
            }
        }
        private TrackableCollection<ParticipanteConcurso> _participanteConcursoes;
    
        [DataMember]
        public TrackableCollection<PeriodoCierre> PeriodoCierres
        {
            get
            {
                if (_periodoCierres == null)
                {
                    _periodoCierres = new TrackableCollection<PeriodoCierre>();
                    _periodoCierres.CollectionChanged += FixupPeriodoCierres;
                }
                return _periodoCierres;
            }
            set
            {
                if (!ReferenceEquals(_periodoCierres, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_periodoCierres != null)
                    {
                        _periodoCierres.CollectionChanged -= FixupPeriodoCierres;
                    }
                    _periodoCierres = value;
                    if (_periodoCierres != null)
                    {
                        _periodoCierres.CollectionChanged += FixupPeriodoCierres;
                    }
                    OnNavigationPropertyChanged("PeriodoCierres");
                }
            }
        }
        private TrackableCollection<PeriodoCierre> _periodoCierres;
    
        [DataMember]
        public TrackableCollection<Persistencia> Persistencias
        {
            get
            {
                if (_persistencias == null)
                {
                    _persistencias = new TrackableCollection<Persistencia>();
                    _persistencias.CollectionChanged += FixupPersistencias;
                }
                return _persistencias;
            }
            set
            {
                if (!ReferenceEquals(_persistencias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistencias != null)
                    {
                        _persistencias.CollectionChanged -= FixupPersistencias;
                    }
                    _persistencias = value;
                    if (_persistencias != null)
                    {
                        _persistencias.CollectionChanged += FixupPersistencias;
                    }
                    OnNavigationPropertyChanged("Persistencias");
                }
            }
        }
        private TrackableCollection<Persistencia> _persistencias;
    
        [DataMember]
        public TrackableCollection<ProductoCombo> ProductoComboes
        {
            get
            {
                if (_productoComboes == null)
                {
                    _productoComboes = new TrackableCollection<ProductoCombo>();
                    _productoComboes.CollectionChanged += FixupProductoComboes;
                }
                return _productoComboes;
            }
            set
            {
                if (!ReferenceEquals(_productoComboes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productoComboes != null)
                    {
                        _productoComboes.CollectionChanged -= FixupProductoComboes;
                    }
                    _productoComboes = value;
                    if (_productoComboes != null)
                    {
                        _productoComboes.CollectionChanged += FixupProductoComboes;
                    }
                    OnNavigationPropertyChanged("ProductoComboes");
                }
            }
        }
        private TrackableCollection<ProductoCombo> _productoComboes;
    
        [DataMember]
        public TrackableCollection<ProductoConcurso> ProductoConcursoes
        {
            get
            {
                if (_productoConcursoes == null)
                {
                    _productoConcursoes = new TrackableCollection<ProductoConcurso>();
                    _productoConcursoes.CollectionChanged += FixupProductoConcursoes;
                }
                return _productoConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_productoConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productoConcursoes != null)
                    {
                        _productoConcursoes.CollectionChanged -= FixupProductoConcursoes;
                    }
                    _productoConcursoes = value;
                    if (_productoConcursoes != null)
                    {
                        _productoConcursoes.CollectionChanged += FixupProductoConcursoes;
                    }
                    OnNavigationPropertyChanged("ProductoConcursoes");
                }
            }
        }
        private TrackableCollection<ProductoConcurso> _productoConcursoes;
    
        [DataMember]
        public TrackableCollection<ProductosMeta> ProductosMetas
        {
            get
            {
                if (_productosMetas == null)
                {
                    _productosMetas = new TrackableCollection<ProductosMeta>();
                    _productosMetas.CollectionChanged += FixupProductosMetas;
                }
                return _productosMetas;
            }
            set
            {
                if (!ReferenceEquals(_productosMetas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged -= FixupProductosMetas;
                    }
                    _productosMetas = value;
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged += FixupProductosMetas;
                    }
                    OnNavigationPropertyChanged("ProductosMetas");
                }
            }
        }
        private TrackableCollection<ProductosMeta> _productosMetas;
    
        [DataMember]
        public TrackableCollection<Ramo> Ramoes
        {
            get
            {
                if (_ramoes == null)
                {
                    _ramoes = new TrackableCollection<Ramo>();
                    _ramoes.CollectionChanged += FixupRamoes;
                }
                return _ramoes;
            }
            set
            {
                if (!ReferenceEquals(_ramoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ramoes != null)
                    {
                        _ramoes.CollectionChanged -= FixupRamoes;
                    }
                    _ramoes = value;
                    if (_ramoes != null)
                    {
                        _ramoes.CollectionChanged += FixupRamoes;
                    }
                    OnNavigationPropertyChanged("Ramoes");
                }
            }
        }
        private TrackableCollection<Ramo> _ramoes;
    
        [DataMember]
        public TrackableCollection<Siniestralidad> Siniestralidads
        {
            get
            {
                if (_siniestralidads == null)
                {
                    _siniestralidads = new TrackableCollection<Siniestralidad>();
                    _siniestralidads.CollectionChanged += FixupSiniestralidads;
                }
                return _siniestralidads;
            }
            set
            {
                if (!ReferenceEquals(_siniestralidads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged -= FixupSiniestralidads;
                    }
                    _siniestralidads = value;
                    if (_siniestralidads != null)
                    {
                        _siniestralidads.CollectionChanged += FixupSiniestralidads;
                    }
                    OnNavigationPropertyChanged("Siniestralidads");
                }
            }
        }
        private TrackableCollection<Siniestralidad> _siniestralidads;
    
        [DataMember]
        public TrackableCollection<TopeMoneda> TopeMonedas
        {
            get
            {
                if (_topeMonedas == null)
                {
                    _topeMonedas = new TrackableCollection<TopeMoneda>();
                    _topeMonedas.CollectionChanged += FixupTopeMonedas;
                }
                return _topeMonedas;
            }
            set
            {
                if (!ReferenceEquals(_topeMonedas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_topeMonedas != null)
                    {
                        _topeMonedas.CollectionChanged -= FixupTopeMonedas;
                    }
                    _topeMonedas = value;
                    if (_topeMonedas != null)
                    {
                        _topeMonedas.CollectionChanged += FixupTopeMonedas;
                    }
                    OnNavigationPropertyChanged("TopeMonedas");
                }
            }
        }
        private TrackableCollection<TopeMoneda> _topeMonedas;
    
        [DataMember]
        public TrackableCollection<TopexEdad> TopexEdads
        {
            get
            {
                if (_topexEdads == null)
                {
                    _topexEdads = new TrackableCollection<TopexEdad>();
                    _topexEdads.CollectionChanged += FixupTopexEdads;
                }
                return _topexEdads;
            }
            set
            {
                if (!ReferenceEquals(_topexEdads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_topexEdads != null)
                    {
                        _topexEdads.CollectionChanged -= FixupTopexEdads;
                    }
                    _topexEdads = value;
                    if (_topexEdads != null)
                    {
                        _topexEdads.CollectionChanged += FixupTopexEdads;
                    }
                    OnNavigationPropertyChanged("TopexEdads");
                }
            }
        }
        private TrackableCollection<TopexEdad> _topexEdads;
    
        [DataMember]
        public TrackableCollection<ActividadEconomica> ActividadEconomicas
        {
            get
            {
                if (_actividadEconomicas == null)
                {
                    _actividadEconomicas = new TrackableCollection<ActividadEconomica>();
                    _actividadEconomicas.CollectionChanged += FixupActividadEconomicas;
                }
                return _actividadEconomicas;
            }
            set
            {
                if (!ReferenceEquals(_actividadEconomicas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_actividadEconomicas != null)
                    {
                        _actividadEconomicas.CollectionChanged -= FixupActividadEconomicas;
                    }
                    _actividadEconomicas = value;
                    if (_actividadEconomicas != null)
                    {
                        _actividadEconomicas.CollectionChanged += FixupActividadEconomicas;
                    }
                    OnNavigationPropertyChanged("ActividadEconomicas");
                }
            }
        }
        private TrackableCollection<ActividadEconomica> _actividadEconomicas;
    
        [DataMember]
        public TrackableCollection<FactorComisionFija> FactorComisionFijas
        {
            get
            {
                if (_factorComisionFijas == null)
                {
                    _factorComisionFijas = new TrackableCollection<FactorComisionFija>();
                    _factorComisionFijas.CollectionChanged += FixupFactorComisionFijas;
                }
                return _factorComisionFijas;
            }
            set
            {
                if (!ReferenceEquals(_factorComisionFijas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_factorComisionFijas != null)
                    {
                        _factorComisionFijas.CollectionChanged -= FixupFactorComisionFijas;
                    }
                    _factorComisionFijas = value;
                    if (_factorComisionFijas != null)
                    {
                        _factorComisionFijas.CollectionChanged += FixupFactorComisionFijas;
                    }
                    OnNavigationPropertyChanged("FactorComisionFijas");
                }
            }
        }
        private TrackableCollection<FactorComisionFija> _factorComisionFijas;
    
        [DataMember]
        public TrackableCollection<FactorComisionVariableNeto> FactorComisionVariableNetoes
        {
            get
            {
                if (_factorComisionVariableNetoes == null)
                {
                    _factorComisionVariableNetoes = new TrackableCollection<FactorComisionVariableNeto>();
                    _factorComisionVariableNetoes.CollectionChanged += FixupFactorComisionVariableNetoes;
                }
                return _factorComisionVariableNetoes;
            }
            set
            {
                if (!ReferenceEquals(_factorComisionVariableNetoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_factorComisionVariableNetoes != null)
                    {
                        _factorComisionVariableNetoes.CollectionChanged -= FixupFactorComisionVariableNetoes;
                    }
                    _factorComisionVariableNetoes = value;
                    if (_factorComisionVariableNetoes != null)
                    {
                        _factorComisionVariableNetoes.CollectionChanged += FixupFactorComisionVariableNetoes;
                    }
                    OnNavigationPropertyChanged("FactorComisionVariableNetoes");
                }
            }
        }
        private TrackableCollection<FactorComisionVariableNeto> _factorComisionVariableNetoes;
    
        [DataMember]
        public TrackableCollection<FactorComisionVariableNuevo> FactorComisionVariableNuevoes
        {
            get
            {
                if (_factorComisionVariableNuevoes == null)
                {
                    _factorComisionVariableNuevoes = new TrackableCollection<FactorComisionVariableNuevo>();
                    _factorComisionVariableNuevoes.CollectionChanged += FixupFactorComisionVariableNuevoes;
                }
                return _factorComisionVariableNuevoes;
            }
            set
            {
                if (!ReferenceEquals(_factorComisionVariableNuevoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_factorComisionVariableNuevoes != null)
                    {
                        _factorComisionVariableNuevoes.CollectionChanged -= FixupFactorComisionVariableNuevoes;
                    }
                    _factorComisionVariableNuevoes = value;
                    if (_factorComisionVariableNuevoes != null)
                    {
                        _factorComisionVariableNuevoes.CollectionChanged += FixupFactorComisionVariableNuevoes;
                    }
                    OnNavigationPropertyChanged("FactorComisionVariableNuevoes");
                }
            }
        }
        private TrackableCollection<FactorComisionVariableNuevo> _factorComisionVariableNuevoes;
    
        [DataMember]
        public TrackableCollection<TipoContrato> TipoContratoes
        {
            get
            {
                if (_tipoContratoes == null)
                {
                    _tipoContratoes = new TrackableCollection<TipoContrato>();
                    _tipoContratoes.CollectionChanged += FixupTipoContratoes;
                }
                return _tipoContratoes;
            }
            set
            {
                if (!ReferenceEquals(_tipoContratoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tipoContratoes != null)
                    {
                        _tipoContratoes.CollectionChanged -= FixupTipoContratoes;
                    }
                    _tipoContratoes = value;
                    if (_tipoContratoes != null)
                    {
                        _tipoContratoes.CollectionChanged += FixupTipoContratoes;
                    }
                    OnNavigationPropertyChanged("TipoContratoes");
                }
            }
        }
        private TrackableCollection<TipoContrato> _tipoContratoes;
    
        [DataMember]
        public TrackableCollection<Participante> Participantes
        {
            get
            {
                if (_participantes == null)
                {
                    _participantes = new TrackableCollection<Participante>();
                    _participantes.CollectionChanged += FixupParticipantes;
                }
                return _participantes;
            }
            set
            {
                if (!ReferenceEquals(_participantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged -= FixupParticipantes;
                    }
                    _participantes = value;
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged += FixupParticipantes;
                    }
                    OnNavigationPropertyChanged("Participantes");
                }
            }
        }
        private TrackableCollection<Participante> _participantes;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AnticipoFranquicias.Clear();
            BancoDetalles.Clear();
            Comisions.Clear();
            Comisions1.Clear();
            ConsolidadoMes.Clear();
            Negocios.Clear();
            RamoDetalles.Clear();
            Recaudoes.Clear();
            RedDetalles.Clear();
            TipoEndosoes.Clear();
            CompaniaxEtapas.Clear();
            ConceptoPagoes.Clear();
            DetallePagosFranquicias.Clear();
            DetallePartFranquicias.Clear();
            Excepcions.Clear();
            ExcepcionesGenerales.Clear();
            ExcepcionesxGrupoTipoEndosoes.Clear();
            LiquidacionMonedas.Clear();
            MonedaxNegocios.Clear();
            Pagoes.Clear();
            ParticipacionDirectors.Clear();
            Participaciones.Clear();
            ParticipanteConcursoes.Clear();
            PeriodoCierres.Clear();
            Persistencias.Clear();
            ProductoComboes.Clear();
            ProductoConcursoes.Clear();
            ProductosMetas.Clear();
            Ramoes.Clear();
            Siniestralidads.Clear();
            TopeMonedas.Clear();
            TopexEdads.Clear();
            ActividadEconomicas.Clear();
            FactorComisionFijas.Clear();
            FactorComisionVariableNetoes.Clear();
            FactorComisionVariableNuevoes.Clear();
            TipoContratoes.Clear();
            Participantes.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupAnticipoFranquicias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AnticipoFranquicia item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AnticipoFranquicias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AnticipoFranquicia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AnticipoFranquicias", item);
                    }
                }
            }
        }
    
        private void FixupBancoDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (BancoDetalle item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("BancoDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (BancoDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("BancoDetalles", item);
                    }
                }
            }
        }
    
        private void FixupComisions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Comision item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Comisions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comision item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Comisions", item);
                    }
                }
            }
        }
    
        private void FixupComisions1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Comision item in e.NewItems)
                {
                    item.Compania1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Comisions1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comision item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania1, this))
                    {
                        item.Compania1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Comisions1", item);
                    }
                }
            }
        }
    
        private void FixupConsolidadoMes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ConsolidadoMe item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ConsolidadoMes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ConsolidadoMe item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ConsolidadoMes", item);
                    }
                }
            }
        }
    
        private void FixupNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Negocio item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Negocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Negocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Negocios", item);
                    }
                }
            }
        }
    
        private void FixupRamoDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RamoDetalle item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RamoDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RamoDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RamoDetalles", item);
                    }
                }
            }
        }
    
        private void FixupRecaudoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Recaudo item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Recaudoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recaudo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Recaudoes", item);
                    }
                }
            }
        }
    
        private void FixupRedDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RedDetalle item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RedDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RedDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RedDetalles", item);
                    }
                }
            }
        }
    
        private void FixupTipoEndosoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TipoEndoso item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TipoEndosoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TipoEndoso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TipoEndosoes", item);
                    }
                }
            }
        }
    
        private void FixupCompaniaxEtapas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (CompaniaxEtapa item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("CompaniaxEtapas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (CompaniaxEtapa item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("CompaniaxEtapas", item);
                    }
                }
            }
        }
    
        private void FixupConceptoPagoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ConceptoPago item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ConceptoPagoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ConceptoPago item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ConceptoPagoes", item);
                    }
                }
            }
        }
    
        private void FixupDetallePagosFranquicias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetallePagosFranquicia item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetallePagosFranquicias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetallePagosFranquicia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetallePagosFranquicias", item);
                    }
                }
            }
        }
    
        private void FixupDetallePartFranquicias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetallePartFranquicia item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetallePartFranquicias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetallePartFranquicia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetallePartFranquicias", item);
                    }
                }
            }
        }
    
        private void FixupExcepcions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Excepcion item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Excepcions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Excepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Excepcions", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionesGenerales(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionesGenerale item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionesGenerales", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionesGenerale item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionesGenerales", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionesxGrupoTipoEndosoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionesxGrupoTipoEndoso item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionesxGrupoTipoEndosoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionesxGrupoTipoEndoso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionesxGrupoTipoEndosoes", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionMonedas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionMoneda item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionMonedas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionMoneda item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionMonedas", item);
                    }
                }
            }
        }
    
        private void FixupMonedaxNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MonedaxNegocio item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MonedaxNegocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
        }
    
        private void FixupPagoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Pago item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Pagoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Pago item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Pagoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipacionDirectors(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipacionDirector item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipacionDirectors", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipacionDirector item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipacionDirectors", item);
                    }
                }
            }
        }
    
        private void FixupParticipaciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Participacione item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Participaciones", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Participacione item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Participaciones", item);
                    }
                }
            }
        }
    
        private void FixupParticipanteConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipanteConcurso item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipanteConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupPeriodoCierres(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PeriodoCierre item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PeriodoCierres", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PeriodoCierre item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PeriodoCierres", item);
                    }
                }
            }
        }
    
        private void FixupPersistencias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Persistencia item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Persistencias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Persistencia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Persistencias", item);
                    }
                }
            }
        }
    
        private void FixupProductoComboes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductoCombo item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductoComboes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductoCombo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductoComboes", item);
                    }
                }
            }
        }
    
        private void FixupProductoConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductoConcurso item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductoConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductoConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductoConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupProductosMetas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductosMeta item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductosMetas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductosMeta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductosMetas", item);
                    }
                }
            }
        }
    
        private void FixupRamoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Ramo item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Ramoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Ramo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Ramoes", item);
                    }
                }
            }
        }
    
        private void FixupSiniestralidads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Siniestralidad item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Siniestralidads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Siniestralidad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Siniestralidads", item);
                    }
                }
            }
        }
    
        private void FixupTopeMonedas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TopeMoneda item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TopeMonedas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TopeMoneda item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TopeMonedas", item);
                    }
                }
            }
        }
    
        private void FixupTopexEdads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TopexEdad item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TopexEdads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TopexEdad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TopexEdads", item);
                    }
                }
            }
        }
    
        private void FixupActividadEconomicas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ActividadEconomica item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ActividadEconomicas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ActividadEconomica item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ActividadEconomicas", item);
                    }
                }
            }
        }
    
        private void FixupFactorComisionFijas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FactorComisionFija item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FactorComisionFijas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FactorComisionFija item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FactorComisionFijas", item);
                    }
                }
            }
        }
    
        private void FixupFactorComisionVariableNetoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FactorComisionVariableNeto item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FactorComisionVariableNetoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FactorComisionVariableNeto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FactorComisionVariableNetoes", item);
                    }
                }
            }
        }
    
        private void FixupFactorComisionVariableNuevoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (FactorComisionVariableNuevo item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("FactorComisionVariableNuevoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (FactorComisionVariableNuevo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("FactorComisionVariableNuevoes", item);
                    }
                }
            }
        }
    
        private void FixupTipoContratoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TipoContrato item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TipoContratoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TipoContrato item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TipoContratoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Participante item in e.NewItems)
                {
                    item.Compania = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Participantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Participante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Compania, this))
                    {
                        item.Compania = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Participantes", item);
                    }
                }
            }
        }

        #endregion
    }
}
