//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Comision))]
    [KnownType(typeof(Concurso))]
    [KnownType(typeof(Jerarquia))]
    [KnownType(typeof(Moneda))]
    [KnownType(typeof(ParticipanteConcurso))]
    [KnownType(typeof(Presupuesto))]
    [KnownType(typeof(UsuarioxSegmento))]
    [KnownType(typeof(Negocio))]
    [KnownType(typeof(Recaudo))]
    [KnownType(typeof(MonedaxNegocio))]
    [KnownType(typeof(Auditoria))]
    [KnownType(typeof(Participante))]
    public partial class Segmento: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Comision> Comisions
        {
            get
            {
                if (_comisions == null)
                {
                    _comisions = new TrackableCollection<Comision>();
                    _comisions.CollectionChanged += FixupComisions;
                }
                return _comisions;
            }
            set
            {
                if (!ReferenceEquals(_comisions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged -= FixupComisions;
                    }
                    _comisions = value;
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged += FixupComisions;
                    }
                    OnNavigationPropertyChanged("Comisions");
                }
            }
        }
        private TrackableCollection<Comision> _comisions;
    
        [DataMember]
        public TrackableCollection<Concurso> Concursoes
        {
            get
            {
                if (_concursoes == null)
                {
                    _concursoes = new TrackableCollection<Concurso>();
                    _concursoes.CollectionChanged += FixupConcursoes;
                }
                return _concursoes;
            }
            set
            {
                if (!ReferenceEquals(_concursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_concursoes != null)
                    {
                        _concursoes.CollectionChanged -= FixupConcursoes;
                    }
                    _concursoes = value;
                    if (_concursoes != null)
                    {
                        _concursoes.CollectionChanged += FixupConcursoes;
                    }
                    OnNavigationPropertyChanged("Concursoes");
                }
            }
        }
        private TrackableCollection<Concurso> _concursoes;
    
        [DataMember]
        public TrackableCollection<Jerarquia> Jerarquias
        {
            get
            {
                if (_jerarquias == null)
                {
                    _jerarquias = new TrackableCollection<Jerarquia>();
                    _jerarquias.CollectionChanged += FixupJerarquias;
                }
                return _jerarquias;
            }
            set
            {
                if (!ReferenceEquals(_jerarquias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_jerarquias != null)
                    {
                        _jerarquias.CollectionChanged -= FixupJerarquias;
                    }
                    _jerarquias = value;
                    if (_jerarquias != null)
                    {
                        _jerarquias.CollectionChanged += FixupJerarquias;
                    }
                    OnNavigationPropertyChanged("Jerarquias");
                }
            }
        }
        private TrackableCollection<Jerarquia> _jerarquias;
    
        [DataMember]
        public TrackableCollection<Moneda> Monedas
        {
            get
            {
                if (_monedas == null)
                {
                    _monedas = new TrackableCollection<Moneda>();
                    _monedas.CollectionChanged += FixupMonedas;
                }
                return _monedas;
            }
            set
            {
                if (!ReferenceEquals(_monedas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_monedas != null)
                    {
                        _monedas.CollectionChanged -= FixupMonedas;
                    }
                    _monedas = value;
                    if (_monedas != null)
                    {
                        _monedas.CollectionChanged += FixupMonedas;
                    }
                    OnNavigationPropertyChanged("Monedas");
                }
            }
        }
        private TrackableCollection<Moneda> _monedas;
    
        [DataMember]
        public TrackableCollection<ParticipanteConcurso> ParticipanteConcursoes
        {
            get
            {
                if (_participanteConcursoes == null)
                {
                    _participanteConcursoes = new TrackableCollection<ParticipanteConcurso>();
                    _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                }
                return _participanteConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_participanteConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged -= FixupParticipanteConcursoes;
                    }
                    _participanteConcursoes = value;
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                    }
                    OnNavigationPropertyChanged("ParticipanteConcursoes");
                }
            }
        }
        private TrackableCollection<ParticipanteConcurso> _participanteConcursoes;
    
        [DataMember]
        public TrackableCollection<Presupuesto> Presupuestoes
        {
            get
            {
                if (_presupuestoes == null)
                {
                    _presupuestoes = new TrackableCollection<Presupuesto>();
                    _presupuestoes.CollectionChanged += FixupPresupuestoes;
                }
                return _presupuestoes;
            }
            set
            {
                if (!ReferenceEquals(_presupuestoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_presupuestoes != null)
                    {
                        _presupuestoes.CollectionChanged -= FixupPresupuestoes;
                    }
                    _presupuestoes = value;
                    if (_presupuestoes != null)
                    {
                        _presupuestoes.CollectionChanged += FixupPresupuestoes;
                    }
                    OnNavigationPropertyChanged("Presupuestoes");
                }
            }
        }
        private TrackableCollection<Presupuesto> _presupuestoes;
    
        [DataMember]
        public TrackableCollection<UsuarioxSegmento> UsuarioxSegmentoes
        {
            get
            {
                if (_usuarioxSegmentoes == null)
                {
                    _usuarioxSegmentoes = new TrackableCollection<UsuarioxSegmento>();
                    _usuarioxSegmentoes.CollectionChanged += FixupUsuarioxSegmentoes;
                }
                return _usuarioxSegmentoes;
            }
            set
            {
                if (!ReferenceEquals(_usuarioxSegmentoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_usuarioxSegmentoes != null)
                    {
                        _usuarioxSegmentoes.CollectionChanged -= FixupUsuarioxSegmentoes;
                    }
                    _usuarioxSegmentoes = value;
                    if (_usuarioxSegmentoes != null)
                    {
                        _usuarioxSegmentoes.CollectionChanged += FixupUsuarioxSegmentoes;
                    }
                    OnNavigationPropertyChanged("UsuarioxSegmentoes");
                }
            }
        }
        private TrackableCollection<UsuarioxSegmento> _usuarioxSegmentoes;
    
        [DataMember]
        public TrackableCollection<Negocio> Negocios
        {
            get
            {
                if (_negocios == null)
                {
                    _negocios = new TrackableCollection<Negocio>();
                    _negocios.CollectionChanged += FixupNegocios;
                }
                return _negocios;
            }
            set
            {
                if (!ReferenceEquals(_negocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged -= FixupNegocios;
                    }
                    _negocios = value;
                    if (_negocios != null)
                    {
                        _negocios.CollectionChanged += FixupNegocios;
                    }
                    OnNavigationPropertyChanged("Negocios");
                }
            }
        }
        private TrackableCollection<Negocio> _negocios;
    
        [DataMember]
        public TrackableCollection<Recaudo> Recaudoes
        {
            get
            {
                if (_recaudoes == null)
                {
                    _recaudoes = new TrackableCollection<Recaudo>();
                    _recaudoes.CollectionChanged += FixupRecaudoes;
                }
                return _recaudoes;
            }
            set
            {
                if (!ReferenceEquals(_recaudoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged -= FixupRecaudoes;
                    }
                    _recaudoes = value;
                    if (_recaudoes != null)
                    {
                        _recaudoes.CollectionChanged += FixupRecaudoes;
                    }
                    OnNavigationPropertyChanged("Recaudoes");
                }
            }
        }
        private TrackableCollection<Recaudo> _recaudoes;
    
        [DataMember]
        public TrackableCollection<MonedaxNegocio> MonedaxNegocios
        {
            get
            {
                if (_monedaxNegocios == null)
                {
                    _monedaxNegocios = new TrackableCollection<MonedaxNegocio>();
                    _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                }
                return _monedaxNegocios;
            }
            set
            {
                if (!ReferenceEquals(_monedaxNegocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged -= FixupMonedaxNegocios;
                    }
                    _monedaxNegocios = value;
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                    }
                    OnNavigationPropertyChanged("MonedaxNegocios");
                }
            }
        }
        private TrackableCollection<MonedaxNegocio> _monedaxNegocios;
    
        [DataMember]
        public TrackableCollection<Auditoria> Auditorias
        {
            get
            {
                if (_auditorias == null)
                {
                    _auditorias = new TrackableCollection<Auditoria>();
                    _auditorias.CollectionChanged += FixupAuditorias;
                }
                return _auditorias;
            }
            set
            {
                if (!ReferenceEquals(_auditorias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_auditorias != null)
                    {
                        _auditorias.CollectionChanged -= FixupAuditorias;
                    }
                    _auditorias = value;
                    if (_auditorias != null)
                    {
                        _auditorias.CollectionChanged += FixupAuditorias;
                    }
                    OnNavigationPropertyChanged("Auditorias");
                }
            }
        }
        private TrackableCollection<Auditoria> _auditorias;
    
        [DataMember]
        public TrackableCollection<Participante> Participantes
        {
            get
            {
                if (_participantes == null)
                {
                    _participantes = new TrackableCollection<Participante>();
                    _participantes.CollectionChanged += FixupParticipantes;
                }
                return _participantes;
            }
            set
            {
                if (!ReferenceEquals(_participantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged -= FixupParticipantes;
                    }
                    _participantes = value;
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged += FixupParticipantes;
                    }
                    OnNavigationPropertyChanged("Participantes");
                }
            }
        }
        private TrackableCollection<Participante> _participantes;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Comisions.Clear();
            Concursoes.Clear();
            Jerarquias.Clear();
            Monedas.Clear();
            ParticipanteConcursoes.Clear();
            Presupuestoes.Clear();
            UsuarioxSegmentoes.Clear();
            Negocios.Clear();
            Recaudoes.Clear();
            MonedaxNegocios.Clear();
            Auditorias.Clear();
            Participantes.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupComisions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Comision item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Comisions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comision item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Comisions", item);
                    }
                }
            }
        }
    
        private void FixupConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Concurso item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Concursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Concurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Concursoes", item);
                    }
                }
            }
        }
    
        private void FixupJerarquias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Jerarquia item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Jerarquias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Jerarquia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Jerarquias", item);
                    }
                }
            }
        }
    
        private void FixupMonedas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Moneda item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Monedas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Moneda item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Monedas", item);
                    }
                }
            }
        }
    
        private void FixupParticipanteConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipanteConcurso item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipanteConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupPresupuestoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Presupuesto item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Presupuestoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Presupuesto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Presupuestoes", item);
                    }
                }
            }
        }
    
        private void FixupUsuarioxSegmentoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (UsuarioxSegmento item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("UsuarioxSegmentoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UsuarioxSegmento item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("UsuarioxSegmentoes", item);
                    }
                }
            }
        }
    
        private void FixupNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Negocio item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Negocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Negocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Negocios", item);
                    }
                }
            }
        }
    
        private void FixupRecaudoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Recaudo item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Recaudoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Recaudo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Recaudoes", item);
                    }
                }
            }
        }
    
        private void FixupMonedaxNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MonedaxNegocio item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MonedaxNegocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
        }
    
        private void FixupAuditorias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Auditoria item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Auditorias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Auditoria item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Auditorias", item);
                    }
                }
            }
        }
    
        private void FixupParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Participante item in e.NewItems)
                {
                    item.Segmento = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Participantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Participante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Segmento, this))
                    {
                        item.Segmento = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Participantes", item);
                    }
                }
            }
        }

        #endregion
    }
}
