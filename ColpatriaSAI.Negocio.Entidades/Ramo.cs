//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Comision))]
    [KnownType(typeof(DetallePagosFranquicia))]
    [KnownType(typeof(DetallePartFranquicia))]
    [KnownType(typeof(Participacione))]
    [KnownType(typeof(Producto))]
    [KnownType(typeof(ProductoConcurso))]
    [KnownType(typeof(ProductosMeta))]
    [KnownType(typeof(RamoDetalle))]
    [KnownType(typeof(SiniestralidadEsperada))]
    [KnownType(typeof(TipoVehiculo))]
    [KnownType(typeof(TopeMoneda))]
    [KnownType(typeof(TopexEdad))]
    [KnownType(typeof(ProductoCombo))]
    [KnownType(typeof(PersistenciadeCAPIPeriodo))]
    [KnownType(typeof(PersistenciadeCAPIDetalle))]
    [KnownType(typeof(Excepcion))]
    [KnownType(typeof(MonedaxNegocio))]
    [KnownType(typeof(ExcepcionesGenerale))]
    [KnownType(typeof(Compania))]
    [KnownType(typeof(PersistenciadeCAPIAcumulada))]
    public partial class Ramo: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Comision> Comisions
        {
            get
            {
                if (_comisions == null)
                {
                    _comisions = new TrackableCollection<Comision>();
                    _comisions.CollectionChanged += FixupComisions;
                }
                return _comisions;
            }
            set
            {
                if (!ReferenceEquals(_comisions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged -= FixupComisions;
                    }
                    _comisions = value;
                    if (_comisions != null)
                    {
                        _comisions.CollectionChanged += FixupComisions;
                    }
                    OnNavigationPropertyChanged("Comisions");
                }
            }
        }
        private TrackableCollection<Comision> _comisions;
    
        [DataMember]
        public TrackableCollection<DetallePagosFranquicia> DetallePagosFranquicias
        {
            get
            {
                if (_detallePagosFranquicias == null)
                {
                    _detallePagosFranquicias = new TrackableCollection<DetallePagosFranquicia>();
                    _detallePagosFranquicias.CollectionChanged += FixupDetallePagosFranquicias;
                }
                return _detallePagosFranquicias;
            }
            set
            {
                if (!ReferenceEquals(_detallePagosFranquicias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detallePagosFranquicias != null)
                    {
                        _detallePagosFranquicias.CollectionChanged -= FixupDetallePagosFranquicias;
                    }
                    _detallePagosFranquicias = value;
                    if (_detallePagosFranquicias != null)
                    {
                        _detallePagosFranquicias.CollectionChanged += FixupDetallePagosFranquicias;
                    }
                    OnNavigationPropertyChanged("DetallePagosFranquicias");
                }
            }
        }
        private TrackableCollection<DetallePagosFranquicia> _detallePagosFranquicias;
    
        [DataMember]
        public TrackableCollection<DetallePartFranquicia> DetallePartFranquicias
        {
            get
            {
                if (_detallePartFranquicias == null)
                {
                    _detallePartFranquicias = new TrackableCollection<DetallePartFranquicia>();
                    _detallePartFranquicias.CollectionChanged += FixupDetallePartFranquicias;
                }
                return _detallePartFranquicias;
            }
            set
            {
                if (!ReferenceEquals(_detallePartFranquicias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detallePartFranquicias != null)
                    {
                        _detallePartFranquicias.CollectionChanged -= FixupDetallePartFranquicias;
                    }
                    _detallePartFranquicias = value;
                    if (_detallePartFranquicias != null)
                    {
                        _detallePartFranquicias.CollectionChanged += FixupDetallePartFranquicias;
                    }
                    OnNavigationPropertyChanged("DetallePartFranquicias");
                }
            }
        }
        private TrackableCollection<DetallePartFranquicia> _detallePartFranquicias;
    
        [DataMember]
        public TrackableCollection<Participacione> Participaciones
        {
            get
            {
                if (_participaciones == null)
                {
                    _participaciones = new TrackableCollection<Participacione>();
                    _participaciones.CollectionChanged += FixupParticipaciones;
                }
                return _participaciones;
            }
            set
            {
                if (!ReferenceEquals(_participaciones, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participaciones != null)
                    {
                        _participaciones.CollectionChanged -= FixupParticipaciones;
                    }
                    _participaciones = value;
                    if (_participaciones != null)
                    {
                        _participaciones.CollectionChanged += FixupParticipaciones;
                    }
                    OnNavigationPropertyChanged("Participaciones");
                }
            }
        }
        private TrackableCollection<Participacione> _participaciones;
    
        [DataMember]
        public TrackableCollection<Producto> Productoes
        {
            get
            {
                if (_productoes == null)
                {
                    _productoes = new TrackableCollection<Producto>();
                    _productoes.CollectionChanged += FixupProductoes;
                }
                return _productoes;
            }
            set
            {
                if (!ReferenceEquals(_productoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productoes != null)
                    {
                        _productoes.CollectionChanged -= FixupProductoes;
                    }
                    _productoes = value;
                    if (_productoes != null)
                    {
                        _productoes.CollectionChanged += FixupProductoes;
                    }
                    OnNavigationPropertyChanged("Productoes");
                }
            }
        }
        private TrackableCollection<Producto> _productoes;
    
        [DataMember]
        public TrackableCollection<ProductoConcurso> ProductoConcursoes
        {
            get
            {
                if (_productoConcursoes == null)
                {
                    _productoConcursoes = new TrackableCollection<ProductoConcurso>();
                    _productoConcursoes.CollectionChanged += FixupProductoConcursoes;
                }
                return _productoConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_productoConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productoConcursoes != null)
                    {
                        _productoConcursoes.CollectionChanged -= FixupProductoConcursoes;
                    }
                    _productoConcursoes = value;
                    if (_productoConcursoes != null)
                    {
                        _productoConcursoes.CollectionChanged += FixupProductoConcursoes;
                    }
                    OnNavigationPropertyChanged("ProductoConcursoes");
                }
            }
        }
        private TrackableCollection<ProductoConcurso> _productoConcursoes;
    
        [DataMember]
        public TrackableCollection<ProductosMeta> ProductosMetas
        {
            get
            {
                if (_productosMetas == null)
                {
                    _productosMetas = new TrackableCollection<ProductosMeta>();
                    _productosMetas.CollectionChanged += FixupProductosMetas;
                }
                return _productosMetas;
            }
            set
            {
                if (!ReferenceEquals(_productosMetas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged -= FixupProductosMetas;
                    }
                    _productosMetas = value;
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged += FixupProductosMetas;
                    }
                    OnNavigationPropertyChanged("ProductosMetas");
                }
            }
        }
        private TrackableCollection<ProductosMeta> _productosMetas;
    
        [DataMember]
        public TrackableCollection<RamoDetalle> RamoDetalles
        {
            get
            {
                if (_ramoDetalles == null)
                {
                    _ramoDetalles = new TrackableCollection<RamoDetalle>();
                    _ramoDetalles.CollectionChanged += FixupRamoDetalles;
                }
                return _ramoDetalles;
            }
            set
            {
                if (!ReferenceEquals(_ramoDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_ramoDetalles != null)
                    {
                        _ramoDetalles.CollectionChanged -= FixupRamoDetalles;
                    }
                    _ramoDetalles = value;
                    if (_ramoDetalles != null)
                    {
                        _ramoDetalles.CollectionChanged += FixupRamoDetalles;
                    }
                    OnNavigationPropertyChanged("RamoDetalles");
                }
            }
        }
        private TrackableCollection<RamoDetalle> _ramoDetalles;
    
        [DataMember]
        public TrackableCollection<SiniestralidadEsperada> SiniestralidadEsperadas
        {
            get
            {
                if (_siniestralidadEsperadas == null)
                {
                    _siniestralidadEsperadas = new TrackableCollection<SiniestralidadEsperada>();
                    _siniestralidadEsperadas.CollectionChanged += FixupSiniestralidadEsperadas;
                }
                return _siniestralidadEsperadas;
            }
            set
            {
                if (!ReferenceEquals(_siniestralidadEsperadas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_siniestralidadEsperadas != null)
                    {
                        _siniestralidadEsperadas.CollectionChanged -= FixupSiniestralidadEsperadas;
                    }
                    _siniestralidadEsperadas = value;
                    if (_siniestralidadEsperadas != null)
                    {
                        _siniestralidadEsperadas.CollectionChanged += FixupSiniestralidadEsperadas;
                    }
                    OnNavigationPropertyChanged("SiniestralidadEsperadas");
                }
            }
        }
        private TrackableCollection<SiniestralidadEsperada> _siniestralidadEsperadas;
    
        [DataMember]
        public TrackableCollection<TipoVehiculo> TipoVehiculoes
        {
            get
            {
                if (_tipoVehiculoes == null)
                {
                    _tipoVehiculoes = new TrackableCollection<TipoVehiculo>();
                    _tipoVehiculoes.CollectionChanged += FixupTipoVehiculoes;
                }
                return _tipoVehiculoes;
            }
            set
            {
                if (!ReferenceEquals(_tipoVehiculoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_tipoVehiculoes != null)
                    {
                        _tipoVehiculoes.CollectionChanged -= FixupTipoVehiculoes;
                    }
                    _tipoVehiculoes = value;
                    if (_tipoVehiculoes != null)
                    {
                        _tipoVehiculoes.CollectionChanged += FixupTipoVehiculoes;
                    }
                    OnNavigationPropertyChanged("TipoVehiculoes");
                }
            }
        }
        private TrackableCollection<TipoVehiculo> _tipoVehiculoes;
    
        [DataMember]
        public TrackableCollection<TopeMoneda> TopeMonedas
        {
            get
            {
                if (_topeMonedas == null)
                {
                    _topeMonedas = new TrackableCollection<TopeMoneda>();
                    _topeMonedas.CollectionChanged += FixupTopeMonedas;
                }
                return _topeMonedas;
            }
            set
            {
                if (!ReferenceEquals(_topeMonedas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_topeMonedas != null)
                    {
                        _topeMonedas.CollectionChanged -= FixupTopeMonedas;
                    }
                    _topeMonedas = value;
                    if (_topeMonedas != null)
                    {
                        _topeMonedas.CollectionChanged += FixupTopeMonedas;
                    }
                    OnNavigationPropertyChanged("TopeMonedas");
                }
            }
        }
        private TrackableCollection<TopeMoneda> _topeMonedas;
    
        [DataMember]
        public TrackableCollection<TopexEdad> TopexEdads
        {
            get
            {
                if (_topexEdads == null)
                {
                    _topexEdads = new TrackableCollection<TopexEdad>();
                    _topexEdads.CollectionChanged += FixupTopexEdads;
                }
                return _topexEdads;
            }
            set
            {
                if (!ReferenceEquals(_topexEdads, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_topexEdads != null)
                    {
                        _topexEdads.CollectionChanged -= FixupTopexEdads;
                    }
                    _topexEdads = value;
                    if (_topexEdads != null)
                    {
                        _topexEdads.CollectionChanged += FixupTopexEdads;
                    }
                    OnNavigationPropertyChanged("TopexEdads");
                }
            }
        }
        private TrackableCollection<TopexEdad> _topexEdads;
    
        [DataMember]
        public TrackableCollection<ProductoCombo> ProductoComboes
        {
            get
            {
                if (_productoComboes == null)
                {
                    _productoComboes = new TrackableCollection<ProductoCombo>();
                    _productoComboes.CollectionChanged += FixupProductoComboes;
                }
                return _productoComboes;
            }
            set
            {
                if (!ReferenceEquals(_productoComboes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productoComboes != null)
                    {
                        _productoComboes.CollectionChanged -= FixupProductoComboes;
                    }
                    _productoComboes = value;
                    if (_productoComboes != null)
                    {
                        _productoComboes.CollectionChanged += FixupProductoComboes;
                    }
                    OnNavigationPropertyChanged("ProductoComboes");
                }
            }
        }
        private TrackableCollection<ProductoCombo> _productoComboes;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIPeriodo> PersistenciadeCAPIPeriodoes
        {
            get
            {
                if (_persistenciadeCAPIPeriodoes == null)
                {
                    _persistenciadeCAPIPeriodoes = new TrackableCollection<PersistenciadeCAPIPeriodo>();
                    _persistenciadeCAPIPeriodoes.CollectionChanged += FixupPersistenciadeCAPIPeriodoes;
                }
                return _persistenciadeCAPIPeriodoes;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIPeriodoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIPeriodoes != null)
                    {
                        _persistenciadeCAPIPeriodoes.CollectionChanged -= FixupPersistenciadeCAPIPeriodoes;
                    }
                    _persistenciadeCAPIPeriodoes = value;
                    if (_persistenciadeCAPIPeriodoes != null)
                    {
                        _persistenciadeCAPIPeriodoes.CollectionChanged += FixupPersistenciadeCAPIPeriodoes;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIPeriodoes");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIPeriodo> _persistenciadeCAPIPeriodoes;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIDetalle> PersistenciadeCAPIDetalles
        {
            get
            {
                if (_persistenciadeCAPIDetalles == null)
                {
                    _persistenciadeCAPIDetalles = new TrackableCollection<PersistenciadeCAPIDetalle>();
                    _persistenciadeCAPIDetalles.CollectionChanged += FixupPersistenciadeCAPIDetalles;
                }
                return _persistenciadeCAPIDetalles;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIDetalles != null)
                    {
                        _persistenciadeCAPIDetalles.CollectionChanged -= FixupPersistenciadeCAPIDetalles;
                    }
                    _persistenciadeCAPIDetalles = value;
                    if (_persistenciadeCAPIDetalles != null)
                    {
                        _persistenciadeCAPIDetalles.CollectionChanged += FixupPersistenciadeCAPIDetalles;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIDetalles");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIDetalle> _persistenciadeCAPIDetalles;
    
        [DataMember]
        public TrackableCollection<Excepcion> Excepcions
        {
            get
            {
                if (_excepcions == null)
                {
                    _excepcions = new TrackableCollection<Excepcion>();
                    _excepcions.CollectionChanged += FixupExcepcions;
                }
                return _excepcions;
            }
            set
            {
                if (!ReferenceEquals(_excepcions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged -= FixupExcepcions;
                    }
                    _excepcions = value;
                    if (_excepcions != null)
                    {
                        _excepcions.CollectionChanged += FixupExcepcions;
                    }
                    OnNavigationPropertyChanged("Excepcions");
                }
            }
        }
        private TrackableCollection<Excepcion> _excepcions;
    
        [DataMember]
        public TrackableCollection<MonedaxNegocio> MonedaxNegocios
        {
            get
            {
                if (_monedaxNegocios == null)
                {
                    _monedaxNegocios = new TrackableCollection<MonedaxNegocio>();
                    _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                }
                return _monedaxNegocios;
            }
            set
            {
                if (!ReferenceEquals(_monedaxNegocios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged -= FixupMonedaxNegocios;
                    }
                    _monedaxNegocios = value;
                    if (_monedaxNegocios != null)
                    {
                        _monedaxNegocios.CollectionChanged += FixupMonedaxNegocios;
                    }
                    OnNavigationPropertyChanged("MonedaxNegocios");
                }
            }
        }
        private TrackableCollection<MonedaxNegocio> _monedaxNegocios;
    
        [DataMember]
        public TrackableCollection<ExcepcionesGenerale> ExcepcionesGenerales
        {
            get
            {
                if (_excepcionesGenerales == null)
                {
                    _excepcionesGenerales = new TrackableCollection<ExcepcionesGenerale>();
                    _excepcionesGenerales.CollectionChanged += FixupExcepcionesGenerales;
                }
                return _excepcionesGenerales;
            }
            set
            {
                if (!ReferenceEquals(_excepcionesGenerales, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionesGenerales != null)
                    {
                        _excepcionesGenerales.CollectionChanged -= FixupExcepcionesGenerales;
                    }
                    _excepcionesGenerales = value;
                    if (_excepcionesGenerales != null)
                    {
                        _excepcionesGenerales.CollectionChanged += FixupExcepcionesGenerales;
                    }
                    OnNavigationPropertyChanged("ExcepcionesGenerales");
                }
            }
        }
        private TrackableCollection<ExcepcionesGenerale> _excepcionesGenerales;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;
    
        [DataMember]
        public TrackableCollection<PersistenciadeCAPIAcumulada> PersistenciadeCAPIAcumuladas
        {
            get
            {
                if (_persistenciadeCAPIAcumuladas == null)
                {
                    _persistenciadeCAPIAcumuladas = new TrackableCollection<PersistenciadeCAPIAcumulada>();
                    _persistenciadeCAPIAcumuladas.CollectionChanged += FixupPersistenciadeCAPIAcumuladas;
                }
                return _persistenciadeCAPIAcumuladas;
            }
            set
            {
                if (!ReferenceEquals(_persistenciadeCAPIAcumuladas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_persistenciadeCAPIAcumuladas != null)
                    {
                        _persistenciadeCAPIAcumuladas.CollectionChanged -= FixupPersistenciadeCAPIAcumuladas;
                    }
                    _persistenciadeCAPIAcumuladas = value;
                    if (_persistenciadeCAPIAcumuladas != null)
                    {
                        _persistenciadeCAPIAcumuladas.CollectionChanged += FixupPersistenciadeCAPIAcumuladas;
                    }
                    OnNavigationPropertyChanged("PersistenciadeCAPIAcumuladas");
                }
            }
        }
        private TrackableCollection<PersistenciadeCAPIAcumulada> _persistenciadeCAPIAcumuladas;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Comisions.Clear();
            DetallePagosFranquicias.Clear();
            DetallePartFranquicias.Clear();
            Participaciones.Clear();
            Productoes.Clear();
            ProductoConcursoes.Clear();
            ProductosMetas.Clear();
            RamoDetalles.Clear();
            SiniestralidadEsperadas.Clear();
            TipoVehiculoes.Clear();
            TopeMonedas.Clear();
            TopexEdads.Clear();
            ProductoComboes.Clear();
            PersistenciadeCAPIPeriodoes.Clear();
            PersistenciadeCAPIDetalles.Clear();
            Excepcions.Clear();
            MonedaxNegocios.Clear();
            ExcepcionesGenerales.Clear();
            Compania = null;
            PersistenciadeCAPIAcumuladas.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Ramoes.Contains(this))
            {
                previousValue.Ramoes.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.Ramoes.Contains(this))
                {
                    Compania.Ramoes.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }
    
        private void FixupComisions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Comision item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Comisions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Comision item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Comisions", item);
                    }
                }
            }
        }
    
        private void FixupDetallePagosFranquicias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetallePagosFranquicia item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetallePagosFranquicias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetallePagosFranquicia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetallePagosFranquicias", item);
                    }
                }
            }
        }
    
        private void FixupDetallePartFranquicias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetallePartFranquicia item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetallePartFranquicias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetallePartFranquicia item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetallePartFranquicias", item);
                    }
                }
            }
        }
    
        private void FixupParticipaciones(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Participacione item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Participaciones", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Participacione item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Participaciones", item);
                    }
                }
            }
        }
    
        private void FixupProductoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Producto item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Productoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Producto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Productoes", item);
                    }
                }
            }
        }
    
        private void FixupProductoConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductoConcurso item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductoConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductoConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductoConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupProductosMetas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductosMeta item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductosMetas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductosMeta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductosMetas", item);
                    }
                }
            }
        }
    
        private void FixupRamoDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (RamoDetalle item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("RamoDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (RamoDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("RamoDetalles", item);
                    }
                }
            }
        }
    
        private void FixupSiniestralidadEsperadas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SiniestralidadEsperada item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SiniestralidadEsperadas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SiniestralidadEsperada item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SiniestralidadEsperadas", item);
                    }
                }
            }
        }
    
        private void FixupTipoVehiculoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TipoVehiculo item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TipoVehiculoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TipoVehiculo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TipoVehiculoes", item);
                    }
                }
            }
        }
    
        private void FixupTopeMonedas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TopeMoneda item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TopeMonedas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TopeMoneda item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TopeMonedas", item);
                    }
                }
            }
        }
    
        private void FixupTopexEdads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (TopexEdad item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("TopexEdads", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TopexEdad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("TopexEdads", item);
                    }
                }
            }
        }
    
        private void FixupProductoComboes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductoCombo item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductoComboes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductoCombo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductoComboes", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIPeriodoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIPeriodo item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIPeriodoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIPeriodo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIPeriodoes", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIDetalle item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIDetalles", item);
                    }
                }
            }
        }
    
        private void FixupExcepcions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Excepcion item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Excepcions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Excepcion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Excepcions", item);
                    }
                }
            }
        }
    
        private void FixupMonedaxNegocios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MonedaxNegocio item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MonedaxNegocio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MonedaxNegocios", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionesGenerales(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionesGenerale item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionesGenerales", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionesGenerale item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionesGenerales", item);
                    }
                }
            }
        }
    
        private void FixupPersistenciadeCAPIAcumuladas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (PersistenciadeCAPIAcumulada item in e.NewItems)
                {
                    item.Ramo = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("PersistenciadeCAPIAcumuladas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (PersistenciadeCAPIAcumulada item in e.OldItems)
                {
                    if (ReferenceEquals(item.Ramo, this))
                    {
                        item.Ramo = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("PersistenciadeCAPIAcumuladas", item);
                    }
                }
            }
        }

        #endregion
    }
}
