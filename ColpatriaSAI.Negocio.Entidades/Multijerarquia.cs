//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    public partial class Multijerarquia: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string clave
        {
            get { return _clave; }
            set
            {
                if (_clave != value)
                {
                    _clave = value;
                    OnPropertyChanged("clave");
                }
            }
        }
        private string _clave;
    
        [DataMember]
        public string companiaClave
        {
            get { return _companiaClave; }
            set
            {
                if (_companiaClave != value)
                {
                    _companiaClave = value;
                    OnPropertyChanged("companiaClave");
                }
            }
        }
        private string _companiaClave;
    
        [DataMember]
        public string segmentoClave
        {
            get { return _segmentoClave; }
            set
            {
                if (_segmentoClave != value)
                {
                    _segmentoClave = value;
                    OnPropertyChanged("segmentoClave");
                }
            }
        }
        private string _segmentoClave;
    
        [DataMember]
        public string companiaDirector
        {
            get { return _companiaDirector; }
            set
            {
                if (_companiaDirector != value)
                {
                    _companiaDirector = value;
                    OnPropertyChanged("companiaDirector");
                }
            }
        }
        private string _companiaDirector;
    
        [DataMember]
        public string codigoDirector
        {
            get { return _codigoDirector; }
            set
            {
                if (_codigoDirector != value)
                {
                    _codigoDirector = value;
                    OnPropertyChanged("codigoDirector");
                }
            }
        }
        private string _codigoDirector;
    
        [DataMember]
        public string claseIntermediario
        {
            get { return _claseIntermediario; }
            set
            {
                if (_claseIntermediario != value)
                {
                    _claseIntermediario = value;
                    OnPropertyChanged("claseIntermediario");
                }
            }
        }
        private string _claseIntermediario;
    
        [DataMember]
        public string jerarquiaPago
        {
            get { return _jerarquiaPago; }
            set
            {
                if (_jerarquiaPago != value)
                {
                    _jerarquiaPago = value;
                    OnPropertyChanged("jerarquiaPago");
                }
            }
        }
        private string _jerarquiaPago;
    
        [DataMember]
        public string provisional
        {
            get { return _provisional; }
            set
            {
                if (_provisional != value)
                {
                    _provisional = value;
                    OnPropertyChanged("provisional");
                }
            }
        }
        private string _provisional;
    
        [DataMember]
        public string tipoDocumentoDirector
        {
            get { return _tipoDocumentoDirector; }
            set
            {
                if (_tipoDocumentoDirector != value)
                {
                    _tipoDocumentoDirector = value;
                    OnPropertyChanged("tipoDocumentoDirector");
                }
            }
        }
        private string _tipoDocumentoDirector;
    
        [DataMember]
        public string documentoDirector
        {
            get { return _documentoDirector; }
            set
            {
                if (_documentoDirector != value)
                {
                    _documentoDirector = value;
                    OnPropertyChanged("documentoDirector");
                }
            }
        }
        private string _documentoDirector;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
