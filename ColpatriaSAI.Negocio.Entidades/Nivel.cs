//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(AntiguedadxNivel))]
    [KnownType(typeof(Categoria))]
    [KnownType(typeof(ModeloxNodo))]
    [KnownType(typeof(ParticipanteConcurso))]
    [KnownType(typeof(ParticipantexNivel))]
    [KnownType(typeof(JerarquiaDetalle))]
    [KnownType(typeof(Participante))]
    public partial class Nivel: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public Nullable<int> orden
        {
            get { return _orden; }
            set
            {
                if (_orden != value)
                {
                    _orden = value;
                    OnPropertyChanged("orden");
                }
            }
        }
        private Nullable<int> _orden;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<AntiguedadxNivel> AntiguedadxNivels
        {
            get
            {
                if (_antiguedadxNivels == null)
                {
                    _antiguedadxNivels = new TrackableCollection<AntiguedadxNivel>();
                    _antiguedadxNivels.CollectionChanged += FixupAntiguedadxNivels;
                }
                return _antiguedadxNivels;
            }
            set
            {
                if (!ReferenceEquals(_antiguedadxNivels, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_antiguedadxNivels != null)
                    {
                        _antiguedadxNivels.CollectionChanged -= FixupAntiguedadxNivels;
                    }
                    _antiguedadxNivels = value;
                    if (_antiguedadxNivels != null)
                    {
                        _antiguedadxNivels.CollectionChanged += FixupAntiguedadxNivels;
                    }
                    OnNavigationPropertyChanged("AntiguedadxNivels");
                }
            }
        }
        private TrackableCollection<AntiguedadxNivel> _antiguedadxNivels;
    
        [DataMember]
        public TrackableCollection<Categoria> Categorias
        {
            get
            {
                if (_categorias == null)
                {
                    _categorias = new TrackableCollection<Categoria>();
                    _categorias.CollectionChanged += FixupCategorias;
                }
                return _categorias;
            }
            set
            {
                if (!ReferenceEquals(_categorias, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_categorias != null)
                    {
                        _categorias.CollectionChanged -= FixupCategorias;
                    }
                    _categorias = value;
                    if (_categorias != null)
                    {
                        _categorias.CollectionChanged += FixupCategorias;
                    }
                    OnNavigationPropertyChanged("Categorias");
                }
            }
        }
        private TrackableCollection<Categoria> _categorias;
    
        [DataMember]
        public TrackableCollection<ModeloxNodo> ModeloxNodoes
        {
            get
            {
                if (_modeloxNodoes == null)
                {
                    _modeloxNodoes = new TrackableCollection<ModeloxNodo>();
                    _modeloxNodoes.CollectionChanged += FixupModeloxNodoes;
                }
                return _modeloxNodoes;
            }
            set
            {
                if (!ReferenceEquals(_modeloxNodoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_modeloxNodoes != null)
                    {
                        _modeloxNodoes.CollectionChanged -= FixupModeloxNodoes;
                    }
                    _modeloxNodoes = value;
                    if (_modeloxNodoes != null)
                    {
                        _modeloxNodoes.CollectionChanged += FixupModeloxNodoes;
                    }
                    OnNavigationPropertyChanged("ModeloxNodoes");
                }
            }
        }
        private TrackableCollection<ModeloxNodo> _modeloxNodoes;
    
        [DataMember]
        public TrackableCollection<ParticipanteConcurso> ParticipanteConcursoes
        {
            get
            {
                if (_participanteConcursoes == null)
                {
                    _participanteConcursoes = new TrackableCollection<ParticipanteConcurso>();
                    _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                }
                return _participanteConcursoes;
            }
            set
            {
                if (!ReferenceEquals(_participanteConcursoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged -= FixupParticipanteConcursoes;
                    }
                    _participanteConcursoes = value;
                    if (_participanteConcursoes != null)
                    {
                        _participanteConcursoes.CollectionChanged += FixupParticipanteConcursoes;
                    }
                    OnNavigationPropertyChanged("ParticipanteConcursoes");
                }
            }
        }
        private TrackableCollection<ParticipanteConcurso> _participanteConcursoes;
    
        [DataMember]
        public TrackableCollection<ParticipantexNivel> ParticipantexNivels
        {
            get
            {
                if (_participantexNivels == null)
                {
                    _participantexNivels = new TrackableCollection<ParticipantexNivel>();
                    _participantexNivels.CollectionChanged += FixupParticipantexNivels;
                }
                return _participantexNivels;
            }
            set
            {
                if (!ReferenceEquals(_participantexNivels, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participantexNivels != null)
                    {
                        _participantexNivels.CollectionChanged -= FixupParticipantexNivels;
                    }
                    _participantexNivels = value;
                    if (_participantexNivels != null)
                    {
                        _participantexNivels.CollectionChanged += FixupParticipantexNivels;
                    }
                    OnNavigationPropertyChanged("ParticipantexNivels");
                }
            }
        }
        private TrackableCollection<ParticipantexNivel> _participantexNivels;
    
        [DataMember]
        public TrackableCollection<JerarquiaDetalle> JerarquiaDetalles
        {
            get
            {
                if (_jerarquiaDetalles == null)
                {
                    _jerarquiaDetalles = new TrackableCollection<JerarquiaDetalle>();
                    _jerarquiaDetalles.CollectionChanged += FixupJerarquiaDetalles;
                }
                return _jerarquiaDetalles;
            }
            set
            {
                if (!ReferenceEquals(_jerarquiaDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_jerarquiaDetalles != null)
                    {
                        _jerarquiaDetalles.CollectionChanged -= FixupJerarquiaDetalles;
                    }
                    _jerarquiaDetalles = value;
                    if (_jerarquiaDetalles != null)
                    {
                        _jerarquiaDetalles.CollectionChanged += FixupJerarquiaDetalles;
                    }
                    OnNavigationPropertyChanged("JerarquiaDetalles");
                }
            }
        }
        private TrackableCollection<JerarquiaDetalle> _jerarquiaDetalles;
    
        [DataMember]
        public TrackableCollection<Participante> Participantes
        {
            get
            {
                if (_participantes == null)
                {
                    _participantes = new TrackableCollection<Participante>();
                    _participantes.CollectionChanged += FixupParticipantes;
                }
                return _participantes;
            }
            set
            {
                if (!ReferenceEquals(_participantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged -= FixupParticipantes;
                    }
                    _participantes = value;
                    if (_participantes != null)
                    {
                        _participantes.CollectionChanged += FixupParticipantes;
                    }
                    OnNavigationPropertyChanged("Participantes");
                }
            }
        }
        private TrackableCollection<Participante> _participantes;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            AntiguedadxNivels.Clear();
            Categorias.Clear();
            ModeloxNodoes.Clear();
            ParticipanteConcursoes.Clear();
            ParticipantexNivels.Clear();
            JerarquiaDetalles.Clear();
            Participantes.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupAntiguedadxNivels(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (AntiguedadxNivel item in e.NewItems)
                {
                    item.Nivel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("AntiguedadxNivels", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AntiguedadxNivel item in e.OldItems)
                {
                    if (ReferenceEquals(item.Nivel, this))
                    {
                        item.Nivel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("AntiguedadxNivels", item);
                    }
                }
            }
        }
    
        private void FixupCategorias(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Categoria item in e.NewItems)
                {
                    item.Nivel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Categorias", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Categoria item in e.OldItems)
                {
                    if (ReferenceEquals(item.Nivel, this))
                    {
                        item.Nivel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Categorias", item);
                    }
                }
            }
        }
    
        private void FixupModeloxNodoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ModeloxNodo item in e.NewItems)
                {
                    item.Nivel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ModeloxNodoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ModeloxNodo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Nivel, this))
                    {
                        item.Nivel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ModeloxNodoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipanteConcursoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipanteConcurso item in e.NewItems)
                {
                    item.Nivel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipanteConcurso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Nivel, this))
                    {
                        item.Nivel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipanteConcursoes", item);
                    }
                }
            }
        }
    
        private void FixupParticipantexNivels(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ParticipantexNivel item in e.NewItems)
                {
                    item.Nivel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ParticipantexNivels", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ParticipantexNivel item in e.OldItems)
                {
                    if (ReferenceEquals(item.Nivel, this))
                    {
                        item.Nivel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ParticipantexNivels", item);
                    }
                }
            }
        }
    
        private void FixupJerarquiaDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (JerarquiaDetalle item in e.NewItems)
                {
                    item.Nivel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("JerarquiaDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (JerarquiaDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Nivel, this))
                    {
                        item.Nivel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("JerarquiaDetalles", item);
                    }
                }
            }
        }
    
        private void FixupParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Participante item in e.NewItems)
                {
                    item.Nivel = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Participantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Participante item in e.OldItems)
                {
                    if (ReferenceEquals(item.Nivel, this))
                    {
                        item.Nivel = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Participantes", item);
                    }
                }
            }
        }

        #endregion
    }
}
