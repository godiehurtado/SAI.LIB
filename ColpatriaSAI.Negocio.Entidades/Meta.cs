//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(DetallePresupuesto))]
    [KnownType(typeof(Meta))]
    [KnownType(typeof(TipoMeta))]
    [KnownType(typeof(TipoMetaCalculo))]
    [KnownType(typeof(MetaCompuesta))]
    [KnownType(typeof(MetaxNodo))]
    [KnownType(typeof(ModeloxMeta))]
    [KnownType(typeof(ProductosMeta))]
    [KnownType(typeof(ExcepcionJerarquiaDetalle))]
    [KnownType(typeof(TipoMedida))]
    public partial class Meta: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string nombre
        {
            get { return _nombre; }
            set
            {
                if (_nombre != value)
                {
                    _nombre = value;
                    OnPropertyChanged("nombre");
                }
            }
        }
        private string _nombre;
    
        [DataMember]
        public Nullable<int> tipoMedida_id
        {
            get { return _tipoMedida_id; }
            set
            {
                if (_tipoMedida_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoMedida_id", _tipoMedida_id);
                    if (!IsDeserializing)
                    {
                        if (TipoMedida != null && TipoMedida.id != value)
                        {
                            TipoMedida = null;
                        }
                    }
                    _tipoMedida_id = value;
                    OnPropertyChanged("tipoMedida_id");
                }
            }
        }
        private Nullable<int> _tipoMedida_id;
    
        [DataMember]
        public Nullable<int> tipoMeta_id
        {
            get { return _tipoMeta_id; }
            set
            {
                if (_tipoMeta_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoMeta_id", _tipoMeta_id);
                    if (!IsDeserializing)
                    {
                        if (TipoMeta != null && TipoMeta.id != value)
                        {
                            TipoMeta = null;
                        }
                    }
                    _tipoMeta_id = value;
                    OnPropertyChanged("tipoMeta_id");
                }
            }
        }
        private Nullable<int> _tipoMeta_id;
    
        [DataMember]
        public Nullable<bool> automatica
        {
            get { return _automatica; }
            set
            {
                if (_automatica != value)
                {
                    _automatica = value;
                    OnPropertyChanged("automatica");
                }
            }
        }
        private Nullable<bool> _automatica;
    
        [DataMember]
        public Nullable<int> tipoMetaCalculo_id
        {
            get { return _tipoMetaCalculo_id; }
            set
            {
                if (_tipoMetaCalculo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoMetaCalculo_id", _tipoMetaCalculo_id);
                    if (!IsDeserializing)
                    {
                        if (TipoMetaCalculo != null && TipoMetaCalculo.id != value)
                        {
                            TipoMetaCalculo = null;
                        }
                    }
                    _tipoMetaCalculo_id = value;
                    OnPropertyChanged("tipoMetaCalculo_id");
                }
            }
        }
        private Nullable<int> _tipoMetaCalculo_id;
    
        [DataMember]
        public Nullable<int> meta_id
        {
            get { return _meta_id; }
            set
            {
                if (_meta_id != value)
                {
                    ChangeTracker.RecordOriginalValue("meta_id", _meta_id);
                    if (!IsDeserializing)
                    {
                        if (Meta2 != null && Meta2.id != value)
                        {
                            Meta2 = null;
                        }
                    }
                    _meta_id = value;
                    OnPropertyChanged("meta_id");
                }
            }
        }
        private Nullable<int> _meta_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<DetallePresupuesto> DetallePresupuestoes
        {
            get
            {
                if (_detallePresupuestoes == null)
                {
                    _detallePresupuestoes = new TrackableCollection<DetallePresupuesto>();
                    _detallePresupuestoes.CollectionChanged += FixupDetallePresupuestoes;
                }
                return _detallePresupuestoes;
            }
            set
            {
                if (!ReferenceEquals(_detallePresupuestoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detallePresupuestoes != null)
                    {
                        _detallePresupuestoes.CollectionChanged -= FixupDetallePresupuestoes;
                    }
                    _detallePresupuestoes = value;
                    if (_detallePresupuestoes != null)
                    {
                        _detallePresupuestoes.CollectionChanged += FixupDetallePresupuestoes;
                    }
                    OnNavigationPropertyChanged("DetallePresupuestoes");
                }
            }
        }
        private TrackableCollection<DetallePresupuesto> _detallePresupuestoes;
    
        [DataMember]
        public TrackableCollection<Meta> Meta1
        {
            get
            {
                if (_meta1 == null)
                {
                    _meta1 = new TrackableCollection<Meta>();
                    _meta1.CollectionChanged += FixupMeta1;
                }
                return _meta1;
            }
            set
            {
                if (!ReferenceEquals(_meta1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_meta1 != null)
                    {
                        _meta1.CollectionChanged -= FixupMeta1;
                    }
                    _meta1 = value;
                    if (_meta1 != null)
                    {
                        _meta1.CollectionChanged += FixupMeta1;
                    }
                    OnNavigationPropertyChanged("Meta1");
                }
            }
        }
        private TrackableCollection<Meta> _meta1;
    
        [DataMember]
        public Meta Meta2
        {
            get { return _meta2; }
            set
            {
                if (!ReferenceEquals(_meta2, value))
                {
                    var previousValue = _meta2;
                    _meta2 = value;
                    FixupMeta2(previousValue);
                    OnNavigationPropertyChanged("Meta2");
                }
            }
        }
        private Meta _meta2;
    
        [DataMember]
        public TipoMeta TipoMeta
        {
            get { return _tipoMeta; }
            set
            {
                if (!ReferenceEquals(_tipoMeta, value))
                {
                    var previousValue = _tipoMeta;
                    _tipoMeta = value;
                    FixupTipoMeta(previousValue);
                    OnNavigationPropertyChanged("TipoMeta");
                }
            }
        }
        private TipoMeta _tipoMeta;
    
        [DataMember]
        public TipoMetaCalculo TipoMetaCalculo
        {
            get { return _tipoMetaCalculo; }
            set
            {
                if (!ReferenceEquals(_tipoMetaCalculo, value))
                {
                    var previousValue = _tipoMetaCalculo;
                    _tipoMetaCalculo = value;
                    FixupTipoMetaCalculo(previousValue);
                    OnNavigationPropertyChanged("TipoMetaCalculo");
                }
            }
        }
        private TipoMetaCalculo _tipoMetaCalculo;
    
        [DataMember]
        public TrackableCollection<MetaCompuesta> MetaCompuestas
        {
            get
            {
                if (_metaCompuestas == null)
                {
                    _metaCompuestas = new TrackableCollection<MetaCompuesta>();
                    _metaCompuestas.CollectionChanged += FixupMetaCompuestas;
                }
                return _metaCompuestas;
            }
            set
            {
                if (!ReferenceEquals(_metaCompuestas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_metaCompuestas != null)
                    {
                        _metaCompuestas.CollectionChanged -= FixupMetaCompuestas;
                    }
                    _metaCompuestas = value;
                    if (_metaCompuestas != null)
                    {
                        _metaCompuestas.CollectionChanged += FixupMetaCompuestas;
                    }
                    OnNavigationPropertyChanged("MetaCompuestas");
                }
            }
        }
        private TrackableCollection<MetaCompuesta> _metaCompuestas;
    
        [DataMember]
        public TrackableCollection<MetaCompuesta> MetaCompuestas1
        {
            get
            {
                if (_metaCompuestas1 == null)
                {
                    _metaCompuestas1 = new TrackableCollection<MetaCompuesta>();
                    _metaCompuestas1.CollectionChanged += FixupMetaCompuestas1;
                }
                return _metaCompuestas1;
            }
            set
            {
                if (!ReferenceEquals(_metaCompuestas1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_metaCompuestas1 != null)
                    {
                        _metaCompuestas1.CollectionChanged -= FixupMetaCompuestas1;
                    }
                    _metaCompuestas1 = value;
                    if (_metaCompuestas1 != null)
                    {
                        _metaCompuestas1.CollectionChanged += FixupMetaCompuestas1;
                    }
                    OnNavigationPropertyChanged("MetaCompuestas1");
                }
            }
        }
        private TrackableCollection<MetaCompuesta> _metaCompuestas1;
    
        [DataMember]
        public TrackableCollection<MetaxNodo> MetaxNodoes
        {
            get
            {
                if (_metaxNodoes == null)
                {
                    _metaxNodoes = new TrackableCollection<MetaxNodo>();
                    _metaxNodoes.CollectionChanged += FixupMetaxNodoes;
                }
                return _metaxNodoes;
            }
            set
            {
                if (!ReferenceEquals(_metaxNodoes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_metaxNodoes != null)
                    {
                        _metaxNodoes.CollectionChanged -= FixupMetaxNodoes;
                    }
                    _metaxNodoes = value;
                    if (_metaxNodoes != null)
                    {
                        _metaxNodoes.CollectionChanged += FixupMetaxNodoes;
                    }
                    OnNavigationPropertyChanged("MetaxNodoes");
                }
            }
        }
        private TrackableCollection<MetaxNodo> _metaxNodoes;
    
        [DataMember]
        public TrackableCollection<ModeloxMeta> ModeloxMetas
        {
            get
            {
                if (_modeloxMetas == null)
                {
                    _modeloxMetas = new TrackableCollection<ModeloxMeta>();
                    _modeloxMetas.CollectionChanged += FixupModeloxMetas;
                }
                return _modeloxMetas;
            }
            set
            {
                if (!ReferenceEquals(_modeloxMetas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_modeloxMetas != null)
                    {
                        _modeloxMetas.CollectionChanged -= FixupModeloxMetas;
                    }
                    _modeloxMetas = value;
                    if (_modeloxMetas != null)
                    {
                        _modeloxMetas.CollectionChanged += FixupModeloxMetas;
                    }
                    OnNavigationPropertyChanged("ModeloxMetas");
                }
            }
        }
        private TrackableCollection<ModeloxMeta> _modeloxMetas;
    
        [DataMember]
        public TrackableCollection<ProductosMeta> ProductosMetas
        {
            get
            {
                if (_productosMetas == null)
                {
                    _productosMetas = new TrackableCollection<ProductosMeta>();
                    _productosMetas.CollectionChanged += FixupProductosMetas;
                }
                return _productosMetas;
            }
            set
            {
                if (!ReferenceEquals(_productosMetas, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged -= FixupProductosMetas;
                    }
                    _productosMetas = value;
                    if (_productosMetas != null)
                    {
                        _productosMetas.CollectionChanged += FixupProductosMetas;
                    }
                    OnNavigationPropertyChanged("ProductosMetas");
                }
            }
        }
        private TrackableCollection<ProductosMeta> _productosMetas;
    
        [DataMember]
        public TrackableCollection<ExcepcionJerarquiaDetalle> ExcepcionJerarquiaDetalles
        {
            get
            {
                if (_excepcionJerarquiaDetalles == null)
                {
                    _excepcionJerarquiaDetalles = new TrackableCollection<ExcepcionJerarquiaDetalle>();
                    _excepcionJerarquiaDetalles.CollectionChanged += FixupExcepcionJerarquiaDetalles;
                }
                return _excepcionJerarquiaDetalles;
            }
            set
            {
                if (!ReferenceEquals(_excepcionJerarquiaDetalles, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_excepcionJerarquiaDetalles != null)
                    {
                        _excepcionJerarquiaDetalles.CollectionChanged -= FixupExcepcionJerarquiaDetalles;
                    }
                    _excepcionJerarquiaDetalles = value;
                    if (_excepcionJerarquiaDetalles != null)
                    {
                        _excepcionJerarquiaDetalles.CollectionChanged += FixupExcepcionJerarquiaDetalles;
                    }
                    OnNavigationPropertyChanged("ExcepcionJerarquiaDetalles");
                }
            }
        }
        private TrackableCollection<ExcepcionJerarquiaDetalle> _excepcionJerarquiaDetalles;
    
        [DataMember]
        public TipoMedida TipoMedida
        {
            get { return _tipoMedida; }
            set
            {
                if (!ReferenceEquals(_tipoMedida, value))
                {
                    var previousValue = _tipoMedida;
                    _tipoMedida = value;
                    FixupTipoMedida(previousValue);
                    OnNavigationPropertyChanged("TipoMedida");
                }
            }
        }
        private TipoMedida _tipoMedida;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            DetallePresupuestoes.Clear();
            Meta1.Clear();
            Meta2 = null;
            TipoMeta = null;
            TipoMetaCalculo = null;
            MetaCompuestas.Clear();
            MetaCompuestas1.Clear();
            MetaxNodoes.Clear();
            ModeloxMetas.Clear();
            ProductosMetas.Clear();
            ExcepcionJerarquiaDetalles.Clear();
            TipoMedida = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupMeta2(Meta previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Meta1.Contains(this))
            {
                previousValue.Meta1.Remove(this);
            }
    
            if (Meta2 != null)
            {
                if (!Meta2.Meta1.Contains(this))
                {
                    Meta2.Meta1.Add(this);
                }
    
                meta_id = Meta2.id;
            }
            else if (!skipKeys)
            {
                meta_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Meta2")
                    && (ChangeTracker.OriginalValues["Meta2"] == Meta2))
                {
                    ChangeTracker.OriginalValues.Remove("Meta2");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Meta2", previousValue);
                }
                if (Meta2 != null && !Meta2.ChangeTracker.ChangeTrackingEnabled)
                {
                    Meta2.StartTracking();
                }
            }
        }
    
        private void FixupTipoMeta(TipoMeta previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Metas.Contains(this))
            {
                previousValue.Metas.Remove(this);
            }
    
            if (TipoMeta != null)
            {
                if (!TipoMeta.Metas.Contains(this))
                {
                    TipoMeta.Metas.Add(this);
                }
    
                tipoMeta_id = TipoMeta.id;
            }
            else if (!skipKeys)
            {
                tipoMeta_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoMeta")
                    && (ChangeTracker.OriginalValues["TipoMeta"] == TipoMeta))
                {
                    ChangeTracker.OriginalValues.Remove("TipoMeta");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoMeta", previousValue);
                }
                if (TipoMeta != null && !TipoMeta.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoMeta.StartTracking();
                }
            }
        }
    
        private void FixupTipoMetaCalculo(TipoMetaCalculo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Metas.Contains(this))
            {
                previousValue.Metas.Remove(this);
            }
    
            if (TipoMetaCalculo != null)
            {
                if (!TipoMetaCalculo.Metas.Contains(this))
                {
                    TipoMetaCalculo.Metas.Add(this);
                }
    
                tipoMetaCalculo_id = TipoMetaCalculo.id;
            }
            else if (!skipKeys)
            {
                tipoMetaCalculo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoMetaCalculo")
                    && (ChangeTracker.OriginalValues["TipoMetaCalculo"] == TipoMetaCalculo))
                {
                    ChangeTracker.OriginalValues.Remove("TipoMetaCalculo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoMetaCalculo", previousValue);
                }
                if (TipoMetaCalculo != null && !TipoMetaCalculo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoMetaCalculo.StartTracking();
                }
            }
        }
    
        private void FixupTipoMedida(TipoMedida previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Metas.Contains(this))
            {
                previousValue.Metas.Remove(this);
            }
    
            if (TipoMedida != null)
            {
                if (!TipoMedida.Metas.Contains(this))
                {
                    TipoMedida.Metas.Add(this);
                }
    
                tipoMedida_id = TipoMedida.id;
            }
            else if (!skipKeys)
            {
                tipoMedida_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoMedida")
                    && (ChangeTracker.OriginalValues["TipoMedida"] == TipoMedida))
                {
                    ChangeTracker.OriginalValues.Remove("TipoMedida");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoMedida", previousValue);
                }
                if (TipoMedida != null && !TipoMedida.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoMedida.StartTracking();
                }
            }
        }
    
        private void FixupDetallePresupuestoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetallePresupuesto item in e.NewItems)
                {
                    item.Meta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetallePresupuestoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetallePresupuesto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta, this))
                    {
                        item.Meta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetallePresupuestoes", item);
                    }
                }
            }
        }
    
        private void FixupMeta1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Meta item in e.NewItems)
                {
                    item.Meta2 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Meta1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Meta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta2, this))
                    {
                        item.Meta2 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Meta1", item);
                    }
                }
            }
        }
    
        private void FixupMetaCompuestas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MetaCompuesta item in e.NewItems)
                {
                    item.Meta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MetaCompuestas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MetaCompuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta, this))
                    {
                        item.Meta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MetaCompuestas", item);
                    }
                }
            }
        }
    
        private void FixupMetaCompuestas1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MetaCompuesta item in e.NewItems)
                {
                    item.Meta1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MetaCompuestas1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MetaCompuesta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta1, this))
                    {
                        item.Meta1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MetaCompuestas1", item);
                    }
                }
            }
        }
    
        private void FixupMetaxNodoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (MetaxNodo item in e.NewItems)
                {
                    item.Meta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("MetaxNodoes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (MetaxNodo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta, this))
                    {
                        item.Meta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("MetaxNodoes", item);
                    }
                }
            }
        }
    
        private void FixupModeloxMetas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ModeloxMeta item in e.NewItems)
                {
                    item.Meta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ModeloxMetas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ModeloxMeta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta, this))
                    {
                        item.Meta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ModeloxMetas", item);
                    }
                }
            }
        }
    
        private void FixupProductosMetas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ProductosMeta item in e.NewItems)
                {
                    item.Meta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ProductosMetas", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ProductosMeta item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta, this))
                    {
                        item.Meta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ProductosMetas", item);
                    }
                }
            }
        }
    
        private void FixupExcepcionJerarquiaDetalles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (ExcepcionJerarquiaDetalle item in e.NewItems)
                {
                    item.Meta = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("ExcepcionJerarquiaDetalles", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ExcepcionJerarquiaDetalle item in e.OldItems)
                {
                    if (ReferenceEquals(item.Meta, this))
                    {
                        item.Meta = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("ExcepcionJerarquiaDetalles", item);
                    }
                }
            }
        }

        #endregion
    }
}
