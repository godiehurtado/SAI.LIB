//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(ActividadEconomica))]
    [KnownType(typeof(Amparo))]
    [KnownType(typeof(Banco))]
    [KnownType(typeof(Cobertura))]
    [KnownType(typeof(Combo))]
    [KnownType(typeof(Concurso))]
    [KnownType(typeof(LineaNegocio))]
    [KnownType(typeof(Localidad))]
    [KnownType(typeof(MaestroMonedaxNegocio))]
    [KnownType(typeof(ModalidadPago))]
    [KnownType(typeof(Moneda))]
    [KnownType(typeof(Plan))]
    [KnownType(typeof(Producto))]
    [KnownType(typeof(Ramo))]
    [KnownType(typeof(Red))]
    [KnownType(typeof(Segmento))]
    [KnownType(typeof(TipoVehiculo))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(Compania))]
    public partial class MonedaxNegocio: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<double> factor
        {
            get { return _factor; }
            set
            {
                if (_factor != value)
                {
                    _factor = value;
                    OnPropertyChanged("factor");
                }
            }
        }
        private Nullable<double> _factor;
    
        [DataMember]
        public Nullable<int> moneda_id
        {
            get { return _moneda_id; }
            set
            {
                if (_moneda_id != value)
                {
                    ChangeTracker.RecordOriginalValue("moneda_id", _moneda_id);
                    if (!IsDeserializing)
                    {
                        if (Moneda != null && Moneda.id != value)
                        {
                            Moneda = null;
                        }
                    }
                    _moneda_id = value;
                    OnPropertyChanged("moneda_id");
                }
            }
        }
        private Nullable<int> _moneda_id;
    
        [DataMember]
        public Nullable<int> producto_id
        {
            get { return _producto_id; }
            set
            {
                if (_producto_id != value)
                {
                    ChangeTracker.RecordOriginalValue("producto_id", _producto_id);
                    if (!IsDeserializing)
                    {
                        if (Producto != null && Producto.id != value)
                        {
                            Producto = null;
                        }
                    }
                    _producto_id = value;
                    OnPropertyChanged("producto_id");
                }
            }
        }
        private Nullable<int> _producto_id;
    
        [DataMember]
        public Nullable<int> concurso_id
        {
            get { return _concurso_id; }
            set
            {
                if (_concurso_id != value)
                {
                    ChangeTracker.RecordOriginalValue("concurso_id", _concurso_id);
                    if (!IsDeserializing)
                    {
                        if (Concurso != null && Concurso.id != value)
                        {
                            Concurso = null;
                        }
                    }
                    _concurso_id = value;
                    OnPropertyChanged("concurso_id");
                }
            }
        }
        private Nullable<int> _concurso_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    ChangeTracker.RecordOriginalValue("lineaNegocio_id", _lineaNegocio_id);
                    if (!IsDeserializing)
                    {
                        if (LineaNegocio != null && LineaNegocio.id != value)
                        {
                            LineaNegocio = null;
                        }
                    }
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramo_id", _ramo_id);
                    if (!IsDeserializing)
                    {
                        if (Ramo != null && Ramo.id != value)
                        {
                            Ramo = null;
                        }
                    }
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public Nullable<int> amparo_id
        {
            get { return _amparo_id; }
            set
            {
                if (_amparo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("amparo_id", _amparo_id);
                    if (!IsDeserializing)
                    {
                        if (Amparo != null && Amparo.id != value)
                        {
                            Amparo = null;
                        }
                    }
                    _amparo_id = value;
                    OnPropertyChanged("amparo_id");
                }
            }
        }
        private Nullable<int> _amparo_id;
    
        [DataMember]
        public Nullable<int> cobertura_id
        {
            get { return _cobertura_id; }
            set
            {
                if (_cobertura_id != value)
                {
                    ChangeTracker.RecordOriginalValue("cobertura_id", _cobertura_id);
                    if (!IsDeserializing)
                    {
                        if (Cobertura != null && Cobertura.id != value)
                        {
                            Cobertura = null;
                        }
                    }
                    _cobertura_id = value;
                    OnPropertyChanged("cobertura_id");
                }
            }
        }
        private Nullable<int> _cobertura_id;
    
        [DataMember]
        public Nullable<int> actividadeconomica_id
        {
            get { return _actividadeconomica_id; }
            set
            {
                if (_actividadeconomica_id != value)
                {
                    ChangeTracker.RecordOriginalValue("actividadeconomica_id", _actividadeconomica_id);
                    if (!IsDeserializing)
                    {
                        if (ActividadEconomica != null && ActividadEconomica.id != value)
                        {
                            ActividadEconomica = null;
                        }
                    }
                    _actividadeconomica_id = value;
                    OnPropertyChanged("actividadeconomica_id");
                }
            }
        }
        private Nullable<int> _actividadeconomica_id;
    
        [DataMember]
        public Nullable<double> porcentajeRecaudo
        {
            get { return _porcentajeRecaudo; }
            set
            {
                if (_porcentajeRecaudo != value)
                {
                    _porcentajeRecaudo = value;
                    OnPropertyChanged("porcentajeRecaudo");
                }
            }
        }
        private Nullable<double> _porcentajeRecaudo;
    
        [DataMember]
        public Nullable<int> plan_id
        {
            get { return _plan_id; }
            set
            {
                if (_plan_id != value)
                {
                    ChangeTracker.RecordOriginalValue("plan_id", _plan_id);
                    if (!IsDeserializing)
                    {
                        if (Plan != null && Plan.id != value)
                        {
                            Plan = null;
                        }
                    }
                    _plan_id = value;
                    OnPropertyChanged("plan_id");
                }
            }
        }
        private Nullable<int> _plan_id;
    
        [DataMember]
        public Nullable<int> modalidadPago_id
        {
            get { return _modalidadPago_id; }
            set
            {
                if (_modalidadPago_id != value)
                {
                    ChangeTracker.RecordOriginalValue("modalidadPago_id", _modalidadPago_id);
                    if (!IsDeserializing)
                    {
                        if (ModalidadPago != null && ModalidadPago.id != value)
                        {
                            ModalidadPago = null;
                        }
                    }
                    _modalidadPago_id = value;
                    OnPropertyChanged("modalidadPago_id");
                }
            }
        }
        private Nullable<int> _modalidadPago_id;
    
        [DataMember]
        public Nullable<int> maestromoneda_id
        {
            get { return _maestromoneda_id; }
            set
            {
                if (_maestromoneda_id != value)
                {
                    ChangeTracker.RecordOriginalValue("maestromoneda_id", _maestromoneda_id);
                    if (!IsDeserializing)
                    {
                        if (MaestroMonedaxNegocio != null && MaestroMonedaxNegocio.id != value)
                        {
                            MaestroMonedaxNegocio = null;
                        }
                    }
                    _maestromoneda_id = value;
                    OnPropertyChanged("maestromoneda_id");
                }
            }
        }
        private Nullable<int> _maestromoneda_id;
    
        [DataMember]
        public Nullable<int> red_id
        {
            get { return _red_id; }
            set
            {
                if (_red_id != value)
                {
                    ChangeTracker.RecordOriginalValue("red_id", _red_id);
                    if (!IsDeserializing)
                    {
                        if (Red != null && Red.id != value)
                        {
                            Red = null;
                        }
                    }
                    _red_id = value;
                    OnPropertyChanged("red_id");
                }
            }
        }
        private Nullable<int> _red_id;
    
        [DataMember]
        public Nullable<int> banco_id
        {
            get { return _banco_id; }
            set
            {
                if (_banco_id != value)
                {
                    ChangeTracker.RecordOriginalValue("banco_id", _banco_id);
                    if (!IsDeserializing)
                    {
                        if (Banco != null && Banco.id != value)
                        {
                            Banco = null;
                        }
                    }
                    _banco_id = value;
                    OnPropertyChanged("banco_id");
                }
            }
        }
        private Nullable<int> _banco_id;
    
        [DataMember]
        public Nullable<int> combo_id
        {
            get { return _combo_id; }
            set
            {
                if (_combo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("combo_id", _combo_id);
                    if (!IsDeserializing)
                    {
                        if (Combo != null && Combo.id != value)
                        {
                            Combo = null;
                        }
                    }
                    _combo_id = value;
                    OnPropertyChanged("combo_id");
                }
            }
        }
        private Nullable<int> _combo_id;
    
        [DataMember]
        public Nullable<int> segmento_id
        {
            get { return _segmento_id; }
            set
            {
                if (_segmento_id != value)
                {
                    ChangeTracker.RecordOriginalValue("segmento_id", _segmento_id);
                    if (!IsDeserializing)
                    {
                        if (Segmento != null && Segmento.id != value)
                        {
                            Segmento = null;
                        }
                    }
                    _segmento_id = value;
                    OnPropertyChanged("segmento_id");
                }
            }
        }
        private Nullable<int> _segmento_id;
    
        [DataMember]
        public Nullable<int> tipoVehiculo_id
        {
            get { return _tipoVehiculo_id; }
            set
            {
                if (_tipoVehiculo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoVehiculo_id", _tipoVehiculo_id);
                    if (!IsDeserializing)
                    {
                        if (TipoVehiculo != null && TipoVehiculo.id != value)
                        {
                            TipoVehiculo = null;
                        }
                    }
                    _tipoVehiculo_id = value;
                    OnPropertyChanged("tipoVehiculo_id");
                }
            }
        }
        private Nullable<int> _tipoVehiculo_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("localidad_id", _localidad_id);
                    if (!IsDeserializing)
                    {
                        if (Localidad != null && Localidad.id != value)
                        {
                            Localidad = null;
                        }
                    }
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public ActividadEconomica ActividadEconomica
        {
            get { return _actividadEconomica; }
            set
            {
                if (!ReferenceEquals(_actividadEconomica, value))
                {
                    var previousValue = _actividadEconomica;
                    _actividadEconomica = value;
                    FixupActividadEconomica(previousValue);
                    OnNavigationPropertyChanged("ActividadEconomica");
                }
            }
        }
        private ActividadEconomica _actividadEconomica;
    
        [DataMember]
        public Amparo Amparo
        {
            get { return _amparo; }
            set
            {
                if (!ReferenceEquals(_amparo, value))
                {
                    var previousValue = _amparo;
                    _amparo = value;
                    FixupAmparo(previousValue);
                    OnNavigationPropertyChanged("Amparo");
                }
            }
        }
        private Amparo _amparo;
    
        [DataMember]
        public Banco Banco
        {
            get { return _banco; }
            set
            {
                if (!ReferenceEquals(_banco, value))
                {
                    var previousValue = _banco;
                    _banco = value;
                    FixupBanco(previousValue);
                    OnNavigationPropertyChanged("Banco");
                }
            }
        }
        private Banco _banco;
    
        [DataMember]
        public Cobertura Cobertura
        {
            get { return _cobertura; }
            set
            {
                if (!ReferenceEquals(_cobertura, value))
                {
                    var previousValue = _cobertura;
                    _cobertura = value;
                    FixupCobertura(previousValue);
                    OnNavigationPropertyChanged("Cobertura");
                }
            }
        }
        private Cobertura _cobertura;
    
        [DataMember]
        public Combo Combo
        {
            get { return _combo; }
            set
            {
                if (!ReferenceEquals(_combo, value))
                {
                    var previousValue = _combo;
                    _combo = value;
                    FixupCombo(previousValue);
                    OnNavigationPropertyChanged("Combo");
                }
            }
        }
        private Combo _combo;
    
        [DataMember]
        public Concurso Concurso
        {
            get { return _concurso; }
            set
            {
                if (!ReferenceEquals(_concurso, value))
                {
                    var previousValue = _concurso;
                    _concurso = value;
                    FixupConcurso(previousValue);
                    OnNavigationPropertyChanged("Concurso");
                }
            }
        }
        private Concurso _concurso;
    
        [DataMember]
        public LineaNegocio LineaNegocio
        {
            get { return _lineaNegocio; }
            set
            {
                if (!ReferenceEquals(_lineaNegocio, value))
                {
                    var previousValue = _lineaNegocio;
                    _lineaNegocio = value;
                    FixupLineaNegocio(previousValue);
                    OnNavigationPropertyChanged("LineaNegocio");
                }
            }
        }
        private LineaNegocio _lineaNegocio;
    
        [DataMember]
        public Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                    OnNavigationPropertyChanged("Localidad");
                }
            }
        }
        private Localidad _localidad;
    
        [DataMember]
        public MaestroMonedaxNegocio MaestroMonedaxNegocio
        {
            get { return _maestroMonedaxNegocio; }
            set
            {
                if (!ReferenceEquals(_maestroMonedaxNegocio, value))
                {
                    var previousValue = _maestroMonedaxNegocio;
                    _maestroMonedaxNegocio = value;
                    FixupMaestroMonedaxNegocio(previousValue);
                    OnNavigationPropertyChanged("MaestroMonedaxNegocio");
                }
            }
        }
        private MaestroMonedaxNegocio _maestroMonedaxNegocio;
    
        [DataMember]
        public ModalidadPago ModalidadPago
        {
            get { return _modalidadPago; }
            set
            {
                if (!ReferenceEquals(_modalidadPago, value))
                {
                    var previousValue = _modalidadPago;
                    _modalidadPago = value;
                    FixupModalidadPago(previousValue);
                    OnNavigationPropertyChanged("ModalidadPago");
                }
            }
        }
        private ModalidadPago _modalidadPago;
    
        [DataMember]
        public Moneda Moneda
        {
            get { return _moneda; }
            set
            {
                if (!ReferenceEquals(_moneda, value))
                {
                    var previousValue = _moneda;
                    _moneda = value;
                    FixupMoneda(previousValue);
                    OnNavigationPropertyChanged("Moneda");
                }
            }
        }
        private Moneda _moneda;
    
        [DataMember]
        public Plan Plan
        {
            get { return _plan; }
            set
            {
                if (!ReferenceEquals(_plan, value))
                {
                    var previousValue = _plan;
                    _plan = value;
                    FixupPlan(previousValue);
                    OnNavigationPropertyChanged("Plan");
                }
            }
        }
        private Plan _plan;
    
        [DataMember]
        public Producto Producto
        {
            get { return _producto; }
            set
            {
                if (!ReferenceEquals(_producto, value))
                {
                    var previousValue = _producto;
                    _producto = value;
                    FixupProducto(previousValue);
                    OnNavigationPropertyChanged("Producto");
                }
            }
        }
        private Producto _producto;
    
        [DataMember]
        public Ramo Ramo
        {
            get { return _ramo; }
            set
            {
                if (!ReferenceEquals(_ramo, value))
                {
                    var previousValue = _ramo;
                    _ramo = value;
                    FixupRamo(previousValue);
                    OnNavigationPropertyChanged("Ramo");
                }
            }
        }
        private Ramo _ramo;
    
        [DataMember]
        public Red Red
        {
            get { return _red; }
            set
            {
                if (!ReferenceEquals(_red, value))
                {
                    var previousValue = _red;
                    _red = value;
                    FixupRed(previousValue);
                    OnNavigationPropertyChanged("Red");
                }
            }
        }
        private Red _red;
    
        [DataMember]
        public Segmento Segmento
        {
            get { return _segmento; }
            set
            {
                if (!ReferenceEquals(_segmento, value))
                {
                    var previousValue = _segmento;
                    _segmento = value;
                    FixupSegmento(previousValue);
                    OnNavigationPropertyChanged("Segmento");
                }
            }
        }
        private Segmento _segmento;
    
        [DataMember]
        public TipoVehiculo TipoVehiculo
        {
            get { return _tipoVehiculo; }
            set
            {
                if (!ReferenceEquals(_tipoVehiculo, value))
                {
                    var previousValue = _tipoVehiculo;
                    _tipoVehiculo = value;
                    FixupTipoVehiculo(previousValue);
                    OnNavigationPropertyChanged("TipoVehiculo");
                }
            }
        }
        private TipoVehiculo _tipoVehiculo;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            ActividadEconomica = null;
            Amparo = null;
            Banco = null;
            Cobertura = null;
            Combo = null;
            Concurso = null;
            LineaNegocio = null;
            Localidad = null;
            MaestroMonedaxNegocio = null;
            ModalidadPago = null;
            Moneda = null;
            Plan = null;
            Producto = null;
            Ramo = null;
            Red = null;
            Segmento = null;
            TipoVehiculo = null;
            Zona = null;
            Compania = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupActividadEconomica(ActividadEconomica previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (ActividadEconomica != null)
            {
                if (!ActividadEconomica.MonedaxNegocios.Contains(this))
                {
                    ActividadEconomica.MonedaxNegocios.Add(this);
                }
    
                actividadeconomica_id = ActividadEconomica.id;
            }
            else if (!skipKeys)
            {
                actividadeconomica_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ActividadEconomica")
                    && (ChangeTracker.OriginalValues["ActividadEconomica"] == ActividadEconomica))
                {
                    ChangeTracker.OriginalValues.Remove("ActividadEconomica");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ActividadEconomica", previousValue);
                }
                if (ActividadEconomica != null && !ActividadEconomica.ChangeTracker.ChangeTrackingEnabled)
                {
                    ActividadEconomica.StartTracking();
                }
            }
        }
    
        private void FixupAmparo(Amparo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Amparo != null)
            {
                if (!Amparo.MonedaxNegocios.Contains(this))
                {
                    Amparo.MonedaxNegocios.Add(this);
                }
    
                amparo_id = Amparo.id;
            }
            else if (!skipKeys)
            {
                amparo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Amparo")
                    && (ChangeTracker.OriginalValues["Amparo"] == Amparo))
                {
                    ChangeTracker.OriginalValues.Remove("Amparo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Amparo", previousValue);
                }
                if (Amparo != null && !Amparo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Amparo.StartTracking();
                }
            }
        }
    
        private void FixupBanco(Banco previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Banco != null)
            {
                if (!Banco.MonedaxNegocios.Contains(this))
                {
                    Banco.MonedaxNegocios.Add(this);
                }
    
                banco_id = Banco.id;
            }
            else if (!skipKeys)
            {
                banco_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Banco")
                    && (ChangeTracker.OriginalValues["Banco"] == Banco))
                {
                    ChangeTracker.OriginalValues.Remove("Banco");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Banco", previousValue);
                }
                if (Banco != null && !Banco.ChangeTracker.ChangeTrackingEnabled)
                {
                    Banco.StartTracking();
                }
            }
        }
    
        private void FixupCobertura(Cobertura previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Cobertura != null)
            {
                if (!Cobertura.MonedaxNegocios.Contains(this))
                {
                    Cobertura.MonedaxNegocios.Add(this);
                }
    
                cobertura_id = Cobertura.id;
            }
            else if (!skipKeys)
            {
                cobertura_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Cobertura")
                    && (ChangeTracker.OriginalValues["Cobertura"] == Cobertura))
                {
                    ChangeTracker.OriginalValues.Remove("Cobertura");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Cobertura", previousValue);
                }
                if (Cobertura != null && !Cobertura.ChangeTracker.ChangeTrackingEnabled)
                {
                    Cobertura.StartTracking();
                }
            }
        }
    
        private void FixupCombo(Combo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Combo != null)
            {
                if (!Combo.MonedaxNegocios.Contains(this))
                {
                    Combo.MonedaxNegocios.Add(this);
                }
    
                combo_id = Combo.id;
            }
            else if (!skipKeys)
            {
                combo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Combo")
                    && (ChangeTracker.OriginalValues["Combo"] == Combo))
                {
                    ChangeTracker.OriginalValues.Remove("Combo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Combo", previousValue);
                }
                if (Combo != null && !Combo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Combo.StartTracking();
                }
            }
        }
    
        private void FixupConcurso(Concurso previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Concurso != null)
            {
                if (!Concurso.MonedaxNegocios.Contains(this))
                {
                    Concurso.MonedaxNegocios.Add(this);
                }
    
                concurso_id = Concurso.id;
            }
            else if (!skipKeys)
            {
                concurso_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Concurso")
                    && (ChangeTracker.OriginalValues["Concurso"] == Concurso))
                {
                    ChangeTracker.OriginalValues.Remove("Concurso");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Concurso", previousValue);
                }
                if (Concurso != null && !Concurso.ChangeTracker.ChangeTrackingEnabled)
                {
                    Concurso.StartTracking();
                }
            }
        }
    
        private void FixupLineaNegocio(LineaNegocio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (LineaNegocio != null)
            {
                if (!LineaNegocio.MonedaxNegocios.Contains(this))
                {
                    LineaNegocio.MonedaxNegocios.Add(this);
                }
    
                lineaNegocio_id = LineaNegocio.id;
            }
            else if (!skipKeys)
            {
                lineaNegocio_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LineaNegocio")
                    && (ChangeTracker.OriginalValues["LineaNegocio"] == LineaNegocio))
                {
                    ChangeTracker.OriginalValues.Remove("LineaNegocio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LineaNegocio", previousValue);
                }
                if (LineaNegocio != null && !LineaNegocio.ChangeTracker.ChangeTrackingEnabled)
                {
                    LineaNegocio.StartTracking();
                }
            }
        }
    
        private void FixupLocalidad(Localidad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.MonedaxNegocios.Contains(this))
                {
                    Localidad.MonedaxNegocios.Add(this);
                }
    
                localidad_id = Localidad.id;
            }
            else if (!skipKeys)
            {
                localidad_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localidad")
                    && (ChangeTracker.OriginalValues["Localidad"] == Localidad))
                {
                    ChangeTracker.OriginalValues.Remove("Localidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localidad", previousValue);
                }
                if (Localidad != null && !Localidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localidad.StartTracking();
                }
            }
        }
    
        private void FixupMaestroMonedaxNegocio(MaestroMonedaxNegocio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (MaestroMonedaxNegocio != null)
            {
                if (!MaestroMonedaxNegocio.MonedaxNegocios.Contains(this))
                {
                    MaestroMonedaxNegocio.MonedaxNegocios.Add(this);
                }
    
                maestromoneda_id = MaestroMonedaxNegocio.id;
            }
            else if (!skipKeys)
            {
                maestromoneda_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("MaestroMonedaxNegocio")
                    && (ChangeTracker.OriginalValues["MaestroMonedaxNegocio"] == MaestroMonedaxNegocio))
                {
                    ChangeTracker.OriginalValues.Remove("MaestroMonedaxNegocio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("MaestroMonedaxNegocio", previousValue);
                }
                if (MaestroMonedaxNegocio != null && !MaestroMonedaxNegocio.ChangeTracker.ChangeTrackingEnabled)
                {
                    MaestroMonedaxNegocio.StartTracking();
                }
            }
        }
    
        private void FixupModalidadPago(ModalidadPago previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (ModalidadPago != null)
            {
                if (!ModalidadPago.MonedaxNegocios.Contains(this))
                {
                    ModalidadPago.MonedaxNegocios.Add(this);
                }
    
                modalidadPago_id = ModalidadPago.id;
            }
            else if (!skipKeys)
            {
                modalidadPago_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ModalidadPago")
                    && (ChangeTracker.OriginalValues["ModalidadPago"] == ModalidadPago))
                {
                    ChangeTracker.OriginalValues.Remove("ModalidadPago");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ModalidadPago", previousValue);
                }
                if (ModalidadPago != null && !ModalidadPago.ChangeTracker.ChangeTrackingEnabled)
                {
                    ModalidadPago.StartTracking();
                }
            }
        }
    
        private void FixupMoneda(Moneda previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Moneda != null)
            {
                if (!Moneda.MonedaxNegocios.Contains(this))
                {
                    Moneda.MonedaxNegocios.Add(this);
                }
    
                moneda_id = Moneda.id;
            }
            else if (!skipKeys)
            {
                moneda_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Moneda")
                    && (ChangeTracker.OriginalValues["Moneda"] == Moneda))
                {
                    ChangeTracker.OriginalValues.Remove("Moneda");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Moneda", previousValue);
                }
                if (Moneda != null && !Moneda.ChangeTracker.ChangeTrackingEnabled)
                {
                    Moneda.StartTracking();
                }
            }
        }
    
        private void FixupPlan(Plan previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Plan != null)
            {
                if (!Plan.MonedaxNegocios.Contains(this))
                {
                    Plan.MonedaxNegocios.Add(this);
                }
    
                plan_id = Plan.id;
            }
            else if (!skipKeys)
            {
                plan_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Plan")
                    && (ChangeTracker.OriginalValues["Plan"] == Plan))
                {
                    ChangeTracker.OriginalValues.Remove("Plan");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Plan", previousValue);
                }
                if (Plan != null && !Plan.ChangeTracker.ChangeTrackingEnabled)
                {
                    Plan.StartTracking();
                }
            }
        }
    
        private void FixupProducto(Producto previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Producto != null)
            {
                if (!Producto.MonedaxNegocios.Contains(this))
                {
                    Producto.MonedaxNegocios.Add(this);
                }
    
                producto_id = Producto.id;
            }
            else if (!skipKeys)
            {
                producto_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Producto")
                    && (ChangeTracker.OriginalValues["Producto"] == Producto))
                {
                    ChangeTracker.OriginalValues.Remove("Producto");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Producto", previousValue);
                }
                if (Producto != null && !Producto.ChangeTracker.ChangeTrackingEnabled)
                {
                    Producto.StartTracking();
                }
            }
        }
    
        private void FixupRamo(Ramo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Ramo != null)
            {
                if (!Ramo.MonedaxNegocios.Contains(this))
                {
                    Ramo.MonedaxNegocios.Add(this);
                }
    
                ramo_id = Ramo.id;
            }
            else if (!skipKeys)
            {
                ramo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Ramo")
                    && (ChangeTracker.OriginalValues["Ramo"] == Ramo))
                {
                    ChangeTracker.OriginalValues.Remove("Ramo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Ramo", previousValue);
                }
                if (Ramo != null && !Ramo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Ramo.StartTracking();
                }
            }
        }
    
        private void FixupRed(Red previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Red != null)
            {
                if (!Red.MonedaxNegocios.Contains(this))
                {
                    Red.MonedaxNegocios.Add(this);
                }
    
                red_id = Red.id;
            }
            else if (!skipKeys)
            {
                red_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Red")
                    && (ChangeTracker.OriginalValues["Red"] == Red))
                {
                    ChangeTracker.OriginalValues.Remove("Red");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Red", previousValue);
                }
                if (Red != null && !Red.ChangeTracker.ChangeTrackingEnabled)
                {
                    Red.StartTracking();
                }
            }
        }
    
        private void FixupSegmento(Segmento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Segmento != null)
            {
                if (!Segmento.MonedaxNegocios.Contains(this))
                {
                    Segmento.MonedaxNegocios.Add(this);
                }
    
                segmento_id = Segmento.id;
            }
            else if (!skipKeys)
            {
                segmento_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Segmento")
                    && (ChangeTracker.OriginalValues["Segmento"] == Segmento))
                {
                    ChangeTracker.OriginalValues.Remove("Segmento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Segmento", previousValue);
                }
                if (Segmento != null && !Segmento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Segmento.StartTracking();
                }
            }
        }
    
        private void FixupTipoVehiculo(TipoVehiculo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (TipoVehiculo != null)
            {
                if (!TipoVehiculo.MonedaxNegocios.Contains(this))
                {
                    TipoVehiculo.MonedaxNegocios.Add(this);
                }
    
                tipoVehiculo_id = TipoVehiculo.id;
            }
            else if (!skipKeys)
            {
                tipoVehiculo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoVehiculo")
                    && (ChangeTracker.OriginalValues["TipoVehiculo"] == TipoVehiculo))
                {
                    ChangeTracker.OriginalValues.Remove("TipoVehiculo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoVehiculo", previousValue);
                }
                if (TipoVehiculo != null && !TipoVehiculo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoVehiculo.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.MonedaxNegocios.Contains(this))
                {
                    Zona.MonedaxNegocios.Add(this);
                }
    
                zona_id = Zona.id;
            }
            else if (!skipKeys)
            {
                zona_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.MonedaxNegocios.Contains(this))
            {
                previousValue.MonedaxNegocios.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.MonedaxNegocios.Contains(this))
                {
                    Compania.MonedaxNegocios.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }

        #endregion
    }
}
