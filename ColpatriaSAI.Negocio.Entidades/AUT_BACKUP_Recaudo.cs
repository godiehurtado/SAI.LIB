//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    public partial class AUT_BACKUP_Recaudo: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id_ejecucion
        {
            get { return _id_ejecucion; }
            set
            {
                if (_id_ejecucion != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id_ejecucion' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id_ejecucion = value;
                    OnPropertyChanged("id_ejecucion");
                }
            }
        }
        private int _id_ejecucion;
    
        [DataMember]
        public long id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private long _id;
    
        [DataMember]
        public Nullable<int> segmento_id
        {
            get { return _segmento_id; }
            set
            {
                if (_segmento_id != value)
                {
                    _segmento_id = value;
                    OnPropertyChanged("segmento_id");
                }
            }
        }
        private Nullable<int> _segmento_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> ramoDetalle_id
        {
            get { return _ramoDetalle_id; }
            set
            {
                if (_ramoDetalle_id != value)
                {
                    _ramoDetalle_id = value;
                    OnPropertyChanged("ramoDetalle_id");
                }
            }
        }
        private Nullable<int> _ramoDetalle_id;
    
        [DataMember]
        public Nullable<int> productoDetalle_id
        {
            get { return _productoDetalle_id; }
            set
            {
                if (_productoDetalle_id != value)
                {
                    _productoDetalle_id = value;
                    OnPropertyChanged("productoDetalle_id");
                }
            }
        }
        private Nullable<int> _productoDetalle_id;
    
        [DataMember]
        public Nullable<int> planDetalle_id
        {
            get { return _planDetalle_id; }
            set
            {
                if (_planDetalle_id != value)
                {
                    _planDetalle_id = value;
                    OnPropertyChanged("planDetalle_id");
                }
            }
        }
        private Nullable<int> _planDetalle_id;
    
        [DataMember]
        public Nullable<int> amparo_id
        {
            get { return _amparo_id; }
            set
            {
                if (_amparo_id != value)
                {
                    _amparo_id = value;
                    OnPropertyChanged("amparo_id");
                }
            }
        }
        private Nullable<int> _amparo_id;
    
        [DataMember]
        public Nullable<int> cobertura_id
        {
            get { return _cobertura_id; }
            set
            {
                if (_cobertura_id != value)
                {
                    _cobertura_id = value;
                    OnPropertyChanged("cobertura_id");
                }
            }
        }
        private Nullable<int> _cobertura_id;
    
        [DataMember]
        public Nullable<int> modalidadpago_id
        {
            get { return _modalidadpago_id; }
            set
            {
                if (_modalidadpago_id != value)
                {
                    _modalidadpago_id = value;
                    OnPropertyChanged("modalidadpago_id");
                }
            }
        }
        private Nullable<int> _modalidadpago_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> formaPago_id
        {
            get { return _formaPago_id; }
            set
            {
                if (_formaPago_id != value)
                {
                    _formaPago_id = value;
                    OnPropertyChanged("formaPago_id");
                }
            }
        }
        private Nullable<int> _formaPago_id;
    
        [DataMember]
        public Nullable<int> redDetalle_id
        {
            get { return _redDetalle_id; }
            set
            {
                if (_redDetalle_id != value)
                {
                    _redDetalle_id = value;
                    OnPropertyChanged("redDetalle_id");
                }
            }
        }
        private Nullable<int> _redDetalle_id;
    
        [DataMember]
        public Nullable<int> bancoDetalle_id
        {
            get { return _bancoDetalle_id; }
            set
            {
                if (_bancoDetalle_id != value)
                {
                    _bancoDetalle_id = value;
                    OnPropertyChanged("bancoDetalle_id");
                }
            }
        }
        private Nullable<int> _bancoDetalle_id;
    
        [DataMember]
        public Nullable<int> participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private Nullable<int> _participante_id;
    
        [DataMember]
        public string clave
        {
            get { return _clave; }
            set
            {
                if (_clave != value)
                {
                    _clave = value;
                    OnPropertyChanged("clave");
                }
            }
        }
        private string _clave;
    
        [DataMember]
        public Nullable<int> tipoRecaudo_id
        {
            get { return _tipoRecaudo_id; }
            set
            {
                if (_tipoRecaudo_id != value)
                {
                    _tipoRecaudo_id = value;
                    OnPropertyChanged("tipoRecaudo_id");
                }
            }
        }
        private Nullable<int> _tipoRecaudo_id;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public Nullable<System.DateTime> fechaRecaudo
        {
            get { return _fechaRecaudo; }
            set
            {
                if (_fechaRecaudo != value)
                {
                    _fechaRecaudo = value;
                    OnPropertyChanged("fechaRecaudo");
                }
            }
        }
        private Nullable<System.DateTime> _fechaRecaudo;
    
        [DataMember]
        public Nullable<System.DateTime> fechaGrabacion
        {
            get { return _fechaGrabacion; }
            set
            {
                if (_fechaGrabacion != value)
                {
                    _fechaGrabacion = value;
                    OnPropertyChanged("fechaGrabacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaGrabacion;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCobranza
        {
            get { return _fechaCobranza; }
            set
            {
                if (_fechaCobranza != value)
                {
                    _fechaCobranza = value;
                    OnPropertyChanged("fechaCobranza");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCobranza;
    
        [DataMember]
        public Nullable<double> valorRecaudo
        {
            get { return _valorRecaudo; }
            set
            {
                if (_valorRecaudo != value)
                {
                    _valorRecaudo = value;
                    OnPropertyChanged("valorRecaudo");
                }
            }
        }
        private Nullable<double> _valorRecaudo;
    
        [DataMember]
        public Nullable<double> porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private Nullable<double> _porcentajeParticipacion;
    
        [DataMember]
        public string numeroRecibo
        {
            get { return _numeroRecibo; }
            set
            {
                if (_numeroRecibo != value)
                {
                    _numeroRecibo = value;
                    OnPropertyChanged("numeroRecibo");
                }
            }
        }
        private string _numeroRecibo;
    
        [DataMember]
        public Nullable<int> periodoFacturado
        {
            get { return _periodoFacturado; }
            set
            {
                if (_periodoFacturado != value)
                {
                    _periodoFacturado = value;
                    OnPropertyChanged("periodoFacturado");
                }
            }
        }
        private Nullable<int> _periodoFacturado;
    
        [DataMember]
        public Nullable<int> Altura
        {
            get { return _altura; }
            set
            {
                if (_altura != value)
                {
                    _altura = value;
                    OnPropertyChanged("Altura");
                }
            }
        }
        private Nullable<int> _altura;
    
        [DataMember]
        public string Concepto
        {
            get { return _concepto; }
            set
            {
                if (_concepto != value)
                {
                    _concepto = value;
                    OnPropertyChanged("Concepto");
                }
            }
        }
        private string _concepto;
    
        [DataMember]
        public Nullable<double> porcentajeAhorro_Inversion
        {
            get { return _porcentajeAhorro_Inversion; }
            set
            {
                if (_porcentajeAhorro_Inversion != value)
                {
                    _porcentajeAhorro_Inversion = value;
                    OnPropertyChanged("porcentajeAhorro_Inversion");
                }
            }
        }
        private Nullable<double> _porcentajeAhorro_Inversion;
    
        [DataMember]
        public string sistema
        {
            get { return _sistema; }
            set
            {
                if (_sistema != value)
                {
                    _sistema = value;
                    OnPropertyChanged("sistema");
                }
            }
        }
        private string _sistema;
    
        [DataMember]
        public string codigoOcupacion
        {
            get { return _codigoOcupacion; }
            set
            {
                if (_codigoOcupacion != value)
                {
                    _codigoOcupacion = value;
                    OnPropertyChanged("codigoOcupacion");
                }
            }
        }
        private string _codigoOcupacion;
    
        [DataMember]
        public Nullable<double> Colquines
        {
            get { return _colquines; }
            set
            {
                if (_colquines != value)
                {
                    _colquines = value;
                    OnPropertyChanged("Colquines");
                }
            }
        }
        private Nullable<double> _colquines;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCarga
        {
            get { return _fechaCarga; }
            set
            {
                if (_fechaCarga != value)
                {
                    _fechaCarga = value;
                    OnPropertyChanged("fechaCarga");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCarga;
    
        [DataMember]
        public Nullable<int> estadoCierre
        {
            get { return _estadoCierre; }
            set
            {
                if (_estadoCierre != value)
                {
                    _estadoCierre = value;
                    OnPropertyChanged("estadoCierre");
                }
            }
        }
        private Nullable<int> _estadoCierre;
    
        [DataMember]
        public Nullable<int> mesCierre
        {
            get { return _mesCierre; }
            set
            {
                if (_mesCierre != value)
                {
                    _mesCierre = value;
                    OnPropertyChanged("mesCierre");
                }
            }
        }
        private Nullable<int> _mesCierre;
    
        [DataMember]
        public Nullable<int> anioCierre
        {
            get { return _anioCierre; }
            set
            {
                if (_anioCierre != value)
                {
                    _anioCierre = value;
                    OnPropertyChanged("anioCierre");
                }
            }
        }
        private Nullable<int> _anioCierre;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
