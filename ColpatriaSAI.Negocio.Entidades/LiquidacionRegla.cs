//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(DetalleLiquidacion))]
    [KnownType(typeof(EstadoLiquidacion))]
    [KnownType(typeof(LiquidacionReglaxParticipante))]
    [KnownType(typeof(Regla))]
    [KnownType(typeof(LiquidacionReglaPremio))]
    [KnownType(typeof(LiquidacionReglaDetalleCondicion))]
    public partial class LiquidacionRegla: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> regla_id
        {
            get { return _regla_id; }
            set
            {
                if (_regla_id != value)
                {
                    ChangeTracker.RecordOriginalValue("regla_id", _regla_id);
                    if (!IsDeserializing)
                    {
                        if (Regla != null && Regla.id != value)
                        {
                            Regla = null;
                        }
                    }
                    _regla_id = value;
                    OnPropertyChanged("regla_id");
                }
            }
        }
        private Nullable<int> _regla_id;
    
        [DataMember]
        public Nullable<System.DateTime> fecha_liquidacion
        {
            get { return _fecha_liquidacion; }
            set
            {
                if (_fecha_liquidacion != value)
                {
                    _fecha_liquidacion = value;
                    OnPropertyChanged("fecha_liquidacion");
                }
            }
        }
        private Nullable<System.DateTime> _fecha_liquidacion;
    
        [DataMember]
        public Nullable<System.DateTime> fecha_inicial
        {
            get { return _fecha_inicial; }
            set
            {
                if (_fecha_inicial != value)
                {
                    _fecha_inicial = value;
                    OnPropertyChanged("fecha_inicial");
                }
            }
        }
        private Nullable<System.DateTime> _fecha_inicial;
    
        [DataMember]
        public Nullable<System.DateTime> fecha_final
        {
            get { return _fecha_final; }
            set
            {
                if (_fecha_final != value)
                {
                    _fecha_final = value;
                    OnPropertyChanged("fecha_final");
                }
            }
        }
        private Nullable<System.DateTime> _fecha_final;
    
        [DataMember]
        public Nullable<int> estado
        {
            get { return _estado; }
            set
            {
                if (_estado != value)
                {
                    ChangeTracker.RecordOriginalValue("estado", _estado);
                    if (!IsDeserializing)
                    {
                        if (EstadoLiquidacion != null && EstadoLiquidacion.id != value)
                        {
                            EstadoLiquidacion = null;
                        }
                    }
                    _estado = value;
                    OnPropertyChanged("estado");
                }
            }
        }
        private Nullable<int> _estado;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<DetalleLiquidacion> DetalleLiquidacions
        {
            get
            {
                if (_detalleLiquidacions == null)
                {
                    _detalleLiquidacions = new TrackableCollection<DetalleLiquidacion>();
                    _detalleLiquidacions.CollectionChanged += FixupDetalleLiquidacions;
                }
                return _detalleLiquidacions;
            }
            set
            {
                if (!ReferenceEquals(_detalleLiquidacions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_detalleLiquidacions != null)
                    {
                        _detalleLiquidacions.CollectionChanged -= FixupDetalleLiquidacions;
                    }
                    _detalleLiquidacions = value;
                    if (_detalleLiquidacions != null)
                    {
                        _detalleLiquidacions.CollectionChanged += FixupDetalleLiquidacions;
                    }
                    OnNavigationPropertyChanged("DetalleLiquidacions");
                }
            }
        }
        private TrackableCollection<DetalleLiquidacion> _detalleLiquidacions;
    
        [DataMember]
        public EstadoLiquidacion EstadoLiquidacion
        {
            get { return _estadoLiquidacion; }
            set
            {
                if (!ReferenceEquals(_estadoLiquidacion, value))
                {
                    var previousValue = _estadoLiquidacion;
                    _estadoLiquidacion = value;
                    FixupEstadoLiquidacion(previousValue);
                    OnNavigationPropertyChanged("EstadoLiquidacion");
                }
            }
        }
        private EstadoLiquidacion _estadoLiquidacion;
    
        [DataMember]
        public TrackableCollection<LiquidacionReglaxParticipante> LiquidacionReglaxParticipantes
        {
            get
            {
                if (_liquidacionReglaxParticipantes == null)
                {
                    _liquidacionReglaxParticipantes = new TrackableCollection<LiquidacionReglaxParticipante>();
                    _liquidacionReglaxParticipantes.CollectionChanged += FixupLiquidacionReglaxParticipantes;
                }
                return _liquidacionReglaxParticipantes;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionReglaxParticipantes, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionReglaxParticipantes != null)
                    {
                        _liquidacionReglaxParticipantes.CollectionChanged -= FixupLiquidacionReglaxParticipantes;
                    }
                    _liquidacionReglaxParticipantes = value;
                    if (_liquidacionReglaxParticipantes != null)
                    {
                        _liquidacionReglaxParticipantes.CollectionChanged += FixupLiquidacionReglaxParticipantes;
                    }
                    OnNavigationPropertyChanged("LiquidacionReglaxParticipantes");
                }
            }
        }
        private TrackableCollection<LiquidacionReglaxParticipante> _liquidacionReglaxParticipantes;
    
        [DataMember]
        public Regla Regla
        {
            get { return _regla; }
            set
            {
                if (!ReferenceEquals(_regla, value))
                {
                    var previousValue = _regla;
                    _regla = value;
                    FixupRegla(previousValue);
                    OnNavigationPropertyChanged("Regla");
                }
            }
        }
        private Regla _regla;
    
        [DataMember]
        public TrackableCollection<LiquidacionReglaPremio> LiquidacionReglaPremios
        {
            get
            {
                if (_liquidacionReglaPremios == null)
                {
                    _liquidacionReglaPremios = new TrackableCollection<LiquidacionReglaPremio>();
                    _liquidacionReglaPremios.CollectionChanged += FixupLiquidacionReglaPremios;
                }
                return _liquidacionReglaPremios;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionReglaPremios, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionReglaPremios != null)
                    {
                        _liquidacionReglaPremios.CollectionChanged -= FixupLiquidacionReglaPremios;
                    }
                    _liquidacionReglaPremios = value;
                    if (_liquidacionReglaPremios != null)
                    {
                        _liquidacionReglaPremios.CollectionChanged += FixupLiquidacionReglaPremios;
                    }
                    OnNavigationPropertyChanged("LiquidacionReglaPremios");
                }
            }
        }
        private TrackableCollection<LiquidacionReglaPremio> _liquidacionReglaPremios;
    
        [DataMember]
        public TrackableCollection<LiquidacionReglaDetalleCondicion> LiquidacionReglaDetalleCondicions
        {
            get
            {
                if (_liquidacionReglaDetalleCondicions == null)
                {
                    _liquidacionReglaDetalleCondicions = new TrackableCollection<LiquidacionReglaDetalleCondicion>();
                    _liquidacionReglaDetalleCondicions.CollectionChanged += FixupLiquidacionReglaDetalleCondicions;
                }
                return _liquidacionReglaDetalleCondicions;
            }
            set
            {
                if (!ReferenceEquals(_liquidacionReglaDetalleCondicions, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_liquidacionReglaDetalleCondicions != null)
                    {
                        _liquidacionReglaDetalleCondicions.CollectionChanged -= FixupLiquidacionReglaDetalleCondicions;
                    }
                    _liquidacionReglaDetalleCondicions = value;
                    if (_liquidacionReglaDetalleCondicions != null)
                    {
                        _liquidacionReglaDetalleCondicions.CollectionChanged += FixupLiquidacionReglaDetalleCondicions;
                    }
                    OnNavigationPropertyChanged("LiquidacionReglaDetalleCondicions");
                }
            }
        }
        private TrackableCollection<LiquidacionReglaDetalleCondicion> _liquidacionReglaDetalleCondicions;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            DetalleLiquidacions.Clear();
            EstadoLiquidacion = null;
            LiquidacionReglaxParticipantes.Clear();
            Regla = null;
            LiquidacionReglaPremios.Clear();
            LiquidacionReglaDetalleCondicions.Clear();
        }

        #endregion
        #region Association Fixup
    
        private void FixupEstadoLiquidacion(EstadoLiquidacion previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.LiquidacionReglas.Contains(this))
            {
                previousValue.LiquidacionReglas.Remove(this);
            }
    
            if (EstadoLiquidacion != null)
            {
                if (!EstadoLiquidacion.LiquidacionReglas.Contains(this))
                {
                    EstadoLiquidacion.LiquidacionReglas.Add(this);
                }
    
                estado = EstadoLiquidacion.id;
            }
            else if (!skipKeys)
            {
                estado = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("EstadoLiquidacion")
                    && (ChangeTracker.OriginalValues["EstadoLiquidacion"] == EstadoLiquidacion))
                {
                    ChangeTracker.OriginalValues.Remove("EstadoLiquidacion");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("EstadoLiquidacion", previousValue);
                }
                if (EstadoLiquidacion != null && !EstadoLiquidacion.ChangeTracker.ChangeTrackingEnabled)
                {
                    EstadoLiquidacion.StartTracking();
                }
            }
        }
    
        private void FixupRegla(Regla previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.LiquidacionReglas.Contains(this))
            {
                previousValue.LiquidacionReglas.Remove(this);
            }
    
            if (Regla != null)
            {
                if (!Regla.LiquidacionReglas.Contains(this))
                {
                    Regla.LiquidacionReglas.Add(this);
                }
    
                regla_id = Regla.id;
            }
            else if (!skipKeys)
            {
                regla_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Regla")
                    && (ChangeTracker.OriginalValues["Regla"] == Regla))
                {
                    ChangeTracker.OriginalValues.Remove("Regla");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Regla", previousValue);
                }
                if (Regla != null && !Regla.ChangeTracker.ChangeTrackingEnabled)
                {
                    Regla.StartTracking();
                }
            }
        }
    
        private void FixupDetalleLiquidacions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (DetalleLiquidacion item in e.NewItems)
                {
                    item.LiquidacionRegla = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("DetalleLiquidacions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (DetalleLiquidacion item in e.OldItems)
                {
                    if (ReferenceEquals(item.LiquidacionRegla, this))
                    {
                        item.LiquidacionRegla = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("DetalleLiquidacions", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionReglaxParticipantes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionReglaxParticipante item in e.NewItems)
                {
                    item.LiquidacionRegla = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionReglaxParticipantes", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionReglaxParticipante item in e.OldItems)
                {
                    if (ReferenceEquals(item.LiquidacionRegla, this))
                    {
                        item.LiquidacionRegla = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionReglaxParticipantes", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionReglaPremios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionReglaPremio item in e.NewItems)
                {
                    item.LiquidacionRegla = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionReglaPremios", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionReglaPremio item in e.OldItems)
                {
                    if (ReferenceEquals(item.LiquidacionRegla, this))
                    {
                        item.LiquidacionRegla = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionReglaPremios", item);
                    }
                }
            }
        }
    
        private void FixupLiquidacionReglaDetalleCondicions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (LiquidacionReglaDetalleCondicion item in e.NewItems)
                {
                    item.LiquidacionRegla = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("LiquidacionReglaDetalleCondicions", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (LiquidacionReglaDetalleCondicion item in e.OldItems)
                {
                    if (ReferenceEquals(item.LiquidacionRegla, this))
                    {
                        item.LiquidacionRegla = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("LiquidacionReglaDetalleCondicions", item);
                    }
                }
            }
        }

        #endregion
    }
}
