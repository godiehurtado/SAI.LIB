//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Canal))]
    [KnownType(typeof(Categoria))]
    [KnownType(typeof(Concurso))]
    [KnownType(typeof(Localidad))]
    [KnownType(typeof(Nivel))]
    [KnownType(typeof(Segmento))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(JerarquiaDetalle))]
    [KnownType(typeof(Compania))]
    [KnownType(typeof(Participante))]
    public partial class ParticipanteConcurso: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> categoria_id
        {
            get { return _categoria_id; }
            set
            {
                if (_categoria_id != value)
                {
                    ChangeTracker.RecordOriginalValue("categoria_id", _categoria_id);
                    if (!IsDeserializing)
                    {
                        if (Categoria != null && Categoria.id != value)
                        {
                            Categoria = null;
                        }
                    }
                    _categoria_id = value;
                    OnPropertyChanged("categoria_id");
                }
            }
        }
        private Nullable<int> _categoria_id;
    
        [DataMember]
        public Nullable<int> concurso_id
        {
            get { return _concurso_id; }
            set
            {
                if (_concurso_id != value)
                {
                    ChangeTracker.RecordOriginalValue("concurso_id", _concurso_id);
                    if (!IsDeserializing)
                    {
                        if (Concurso != null && Concurso.id != value)
                        {
                            Concurso = null;
                        }
                    }
                    _concurso_id = value;
                    OnPropertyChanged("concurso_id");
                }
            }
        }
        private Nullable<int> _concurso_id;
    
        [DataMember]
        public Nullable<int> participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    ChangeTracker.RecordOriginalValue("participante_id", _participante_id);
                    if (!IsDeserializing)
                    {
                        if (Participante != null && Participante.id != value)
                        {
                            Participante = null;
                        }
                    }
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private Nullable<int> _participante_id;
    
        [DataMember]
        public Nullable<int> segmento_id
        {
            get { return _segmento_id; }
            set
            {
                if (_segmento_id != value)
                {
                    ChangeTracker.RecordOriginalValue("segmento_id", _segmento_id);
                    if (!IsDeserializing)
                    {
                        if (Segmento != null && Segmento.id != value)
                        {
                            Segmento = null;
                        }
                    }
                    _segmento_id = value;
                    OnPropertyChanged("segmento_id");
                }
            }
        }
        private Nullable<int> _segmento_id;
    
        [DataMember]
        public Nullable<int> canal_id
        {
            get { return _canal_id; }
            set
            {
                if (_canal_id != value)
                {
                    ChangeTracker.RecordOriginalValue("canal_id", _canal_id);
                    if (!IsDeserializing)
                    {
                        if (Canal != null && Canal.id != value)
                        {
                            Canal = null;
                        }
                    }
                    _canal_id = value;
                    OnPropertyChanged("canal_id");
                }
            }
        }
        private Nullable<int> _canal_id;
    
        [DataMember]
        public Nullable<int> nivel_id
        {
            get { return _nivel_id; }
            set
            {
                if (_nivel_id != value)
                {
                    ChangeTracker.RecordOriginalValue("nivel_id", _nivel_id);
                    if (!IsDeserializing)
                    {
                        if (Nivel != null && Nivel.id != value)
                        {
                            Nivel = null;
                        }
                    }
                    _nivel_id = value;
                    OnPropertyChanged("nivel_id");
                }
            }
        }
        private Nullable<int> _nivel_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("localidad_id", _localidad_id);
                    if (!IsDeserializing)
                    {
                        if (Localidad != null && Localidad.id != value)
                        {
                            Localidad = null;
                        }
                    }
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> jerarquiaDetalle_id
        {
            get { return _jerarquiaDetalle_id; }
            set
            {
                if (_jerarquiaDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("jerarquiaDetalle_id", _jerarquiaDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (JerarquiaDetalle != null && JerarquiaDetalle.id != value)
                        {
                            JerarquiaDetalle = null;
                        }
                    }
                    _jerarquiaDetalle_id = value;
                    OnPropertyChanged("jerarquiaDetalle_id");
                }
            }
        }
        private Nullable<int> _jerarquiaDetalle_id;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Canal Canal
        {
            get { return _canal; }
            set
            {
                if (!ReferenceEquals(_canal, value))
                {
                    var previousValue = _canal;
                    _canal = value;
                    FixupCanal(previousValue);
                    OnNavigationPropertyChanged("Canal");
                }
            }
        }
        private Canal _canal;
    
        [DataMember]
        public Categoria Categoria
        {
            get { return _categoria; }
            set
            {
                if (!ReferenceEquals(_categoria, value))
                {
                    var previousValue = _categoria;
                    _categoria = value;
                    FixupCategoria(previousValue);
                    OnNavigationPropertyChanged("Categoria");
                }
            }
        }
        private Categoria _categoria;
    
        [DataMember]
        public Concurso Concurso
        {
            get { return _concurso; }
            set
            {
                if (!ReferenceEquals(_concurso, value))
                {
                    var previousValue = _concurso;
                    _concurso = value;
                    FixupConcurso(previousValue);
                    OnNavigationPropertyChanged("Concurso");
                }
            }
        }
        private Concurso _concurso;
    
        [DataMember]
        public Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                    OnNavigationPropertyChanged("Localidad");
                }
            }
        }
        private Localidad _localidad;
    
        [DataMember]
        public Nivel Nivel
        {
            get { return _nivel; }
            set
            {
                if (!ReferenceEquals(_nivel, value))
                {
                    var previousValue = _nivel;
                    _nivel = value;
                    FixupNivel(previousValue);
                    OnNavigationPropertyChanged("Nivel");
                }
            }
        }
        private Nivel _nivel;
    
        [DataMember]
        public Segmento Segmento
        {
            get { return _segmento; }
            set
            {
                if (!ReferenceEquals(_segmento, value))
                {
                    var previousValue = _segmento;
                    _segmento = value;
                    FixupSegmento(previousValue);
                    OnNavigationPropertyChanged("Segmento");
                }
            }
        }
        private Segmento _segmento;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public JerarquiaDetalle JerarquiaDetalle
        {
            get { return _jerarquiaDetalle; }
            set
            {
                if (!ReferenceEquals(_jerarquiaDetalle, value))
                {
                    var previousValue = _jerarquiaDetalle;
                    _jerarquiaDetalle = value;
                    FixupJerarquiaDetalle(previousValue);
                    OnNavigationPropertyChanged("JerarquiaDetalle");
                }
            }
        }
        private JerarquiaDetalle _jerarquiaDetalle;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;
    
        [DataMember]
        public Participante Participante
        {
            get { return _participante; }
            set
            {
                if (!ReferenceEquals(_participante, value))
                {
                    var previousValue = _participante;
                    _participante = value;
                    FixupParticipante(previousValue);
                    OnNavigationPropertyChanged("Participante");
                }
            }
        }
        private Participante _participante;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Canal = null;
            Categoria = null;
            Concurso = null;
            Localidad = null;
            Nivel = null;
            Segmento = null;
            Zona = null;
            JerarquiaDetalle = null;
            Compania = null;
            Participante = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupCanal(Canal previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Canal != null)
            {
                if (!Canal.ParticipanteConcursoes.Contains(this))
                {
                    Canal.ParticipanteConcursoes.Add(this);
                }
    
                canal_id = Canal.id;
            }
            else if (!skipKeys)
            {
                canal_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Canal")
                    && (ChangeTracker.OriginalValues["Canal"] == Canal))
                {
                    ChangeTracker.OriginalValues.Remove("Canal");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Canal", previousValue);
                }
                if (Canal != null && !Canal.ChangeTracker.ChangeTrackingEnabled)
                {
                    Canal.StartTracking();
                }
            }
        }
    
        private void FixupCategoria(Categoria previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Categoria != null)
            {
                if (!Categoria.ParticipanteConcursoes.Contains(this))
                {
                    Categoria.ParticipanteConcursoes.Add(this);
                }
    
                categoria_id = Categoria.id;
            }
            else if (!skipKeys)
            {
                categoria_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Categoria")
                    && (ChangeTracker.OriginalValues["Categoria"] == Categoria))
                {
                    ChangeTracker.OriginalValues.Remove("Categoria");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Categoria", previousValue);
                }
                if (Categoria != null && !Categoria.ChangeTracker.ChangeTrackingEnabled)
                {
                    Categoria.StartTracking();
                }
            }
        }
    
        private void FixupConcurso(Concurso previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Concurso != null)
            {
                if (!Concurso.ParticipanteConcursoes.Contains(this))
                {
                    Concurso.ParticipanteConcursoes.Add(this);
                }
    
                concurso_id = Concurso.id;
            }
            else if (!skipKeys)
            {
                concurso_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Concurso")
                    && (ChangeTracker.OriginalValues["Concurso"] == Concurso))
                {
                    ChangeTracker.OriginalValues.Remove("Concurso");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Concurso", previousValue);
                }
                if (Concurso != null && !Concurso.ChangeTracker.ChangeTrackingEnabled)
                {
                    Concurso.StartTracking();
                }
            }
        }
    
        private void FixupLocalidad(Localidad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.ParticipanteConcursoes.Contains(this))
                {
                    Localidad.ParticipanteConcursoes.Add(this);
                }
    
                localidad_id = Localidad.id;
            }
            else if (!skipKeys)
            {
                localidad_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localidad")
                    && (ChangeTracker.OriginalValues["Localidad"] == Localidad))
                {
                    ChangeTracker.OriginalValues.Remove("Localidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localidad", previousValue);
                }
                if (Localidad != null && !Localidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localidad.StartTracking();
                }
            }
        }
    
        private void FixupNivel(Nivel previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Nivel != null)
            {
                if (!Nivel.ParticipanteConcursoes.Contains(this))
                {
                    Nivel.ParticipanteConcursoes.Add(this);
                }
    
                nivel_id = Nivel.id;
            }
            else if (!skipKeys)
            {
                nivel_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Nivel")
                    && (ChangeTracker.OriginalValues["Nivel"] == Nivel))
                {
                    ChangeTracker.OriginalValues.Remove("Nivel");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Nivel", previousValue);
                }
                if (Nivel != null && !Nivel.ChangeTracker.ChangeTrackingEnabled)
                {
                    Nivel.StartTracking();
                }
            }
        }
    
        private void FixupSegmento(Segmento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Segmento != null)
            {
                if (!Segmento.ParticipanteConcursoes.Contains(this))
                {
                    Segmento.ParticipanteConcursoes.Add(this);
                }
    
                segmento_id = Segmento.id;
            }
            else if (!skipKeys)
            {
                segmento_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Segmento")
                    && (ChangeTracker.OriginalValues["Segmento"] == Segmento))
                {
                    ChangeTracker.OriginalValues.Remove("Segmento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Segmento", previousValue);
                }
                if (Segmento != null && !Segmento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Segmento.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.ParticipanteConcursoes.Contains(this))
                {
                    Zona.ParticipanteConcursoes.Add(this);
                }
    
                zona_id = Zona.id;
            }
            else if (!skipKeys)
            {
                zona_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupJerarquiaDetalle(JerarquiaDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (JerarquiaDetalle != null)
            {
                if (!JerarquiaDetalle.ParticipanteConcursoes.Contains(this))
                {
                    JerarquiaDetalle.ParticipanteConcursoes.Add(this);
                }
    
                jerarquiaDetalle_id = JerarquiaDetalle.id;
            }
            else if (!skipKeys)
            {
                jerarquiaDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("JerarquiaDetalle")
                    && (ChangeTracker.OriginalValues["JerarquiaDetalle"] == JerarquiaDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("JerarquiaDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("JerarquiaDetalle", previousValue);
                }
                if (JerarquiaDetalle != null && !JerarquiaDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    JerarquiaDetalle.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.ParticipanteConcursoes.Contains(this))
                {
                    Compania.ParticipanteConcursoes.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }
    
        private void FixupParticipante(Participante previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.ParticipanteConcursoes.Contains(this))
            {
                previousValue.ParticipanteConcursoes.Remove(this);
            }
    
            if (Participante != null)
            {
                if (!Participante.ParticipanteConcursoes.Contains(this))
                {
                    Participante.ParticipanteConcursoes.Add(this);
                }
    
                participante_id = Participante.id;
            }
            else if (!skipKeys)
            {
                participante_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Participante")
                    && (ChangeTracker.OriginalValues["Participante"] == Participante))
                {
                    ChangeTracker.OriginalValues.Remove("Participante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Participante", previousValue);
                }
                if (Participante != null && !Participante.ChangeTracker.ChangeTrackingEnabled)
                {
                    Participante.StartTracking();
                }
            }
        }

        #endregion
    }
}
