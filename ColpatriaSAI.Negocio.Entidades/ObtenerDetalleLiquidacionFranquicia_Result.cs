//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    
    public partial class ObtenerDetalleLiquidacionFranquicia_Result : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    OnComplexPropertyChanging();
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private long _id;
    
        [DataMember]
        public Nullable<double> porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    OnComplexPropertyChanging();
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private Nullable<double> _porcentajeParticipacion;
    
        [DataMember]
        public Nullable<double> totalParticipacion
        {
            get { return _totalParticipacion; }
            set
            {
                if (_totalParticipacion != value)
                {
                    OnComplexPropertyChanging();
                    _totalParticipacion = value;
                    OnPropertyChanged("totalParticipacion");
                }
            }
        }
        private Nullable<double> _totalParticipacion;
    
        [DataMember]
        public Nullable<int> liquidacionFranquicia_id
        {
            get { return _liquidacionFranquicia_id; }
            set
            {
                if (_liquidacionFranquicia_id != value)
                {
                    OnComplexPropertyChanging();
                    _liquidacionFranquicia_id = value;
                    OnPropertyChanged("liquidacionFranquicia_id");
                }
            }
        }
        private Nullable<int> _liquidacionFranquicia_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    OnComplexPropertyChanging();
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    OnComplexPropertyChanging();
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> ramo_id
        {
            get { return _ramo_id; }
            set
            {
                if (_ramo_id != value)
                {
                    OnComplexPropertyChanging();
                    _ramo_id = value;
                    OnPropertyChanged("ramo_id");
                }
            }
        }
        private Nullable<int> _ramo_id;
    
        [DataMember]
        public Nullable<int> producto_id
        {
            get { return _producto_id; }
            set
            {
                if (_producto_id != value)
                {
                    OnComplexPropertyChanging();
                    _producto_id = value;
                    OnPropertyChanged("producto_id");
                }
            }
        }
        private Nullable<int> _producto_id;
    
        [DataMember]
        public Nullable<double> valorRecaudo
        {
            get { return _valorRecaudo; }
            set
            {
                if (_valorRecaudo != value)
                {
                    OnComplexPropertyChanging();
                    _valorRecaudo = value;
                    OnPropertyChanged("valorRecaudo");
                }
            }
        }
        private Nullable<double> _valorRecaudo;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    OnComplexPropertyChanging();
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public string nivelDirector
        {
            get { return _nivelDirector; }
            set
            {
                if (_nivelDirector != value)
                {
                    OnComplexPropertyChanging();
                    _nivelDirector = value;
                    OnPropertyChanged("nivelDirector");
                }
            }
        }
        private string _nivelDirector;
    
        [DataMember]
        public string claveParticipante
        {
            get { return _claveParticipante; }
            set
            {
                if (_claveParticipante != value)
                {
                    OnComplexPropertyChanging();
                    _claveParticipante = value;
                    OnPropertyChanged("claveParticipante");
                }
            }
        }
        private string _claveParticipante;
    
        [DataMember]
        public int modalidadPagoId
        {
            get { return _modalidadPagoId; }
            set
            {
                if (_modalidadPagoId != value)
                {
                    OnComplexPropertyChanging();
                    _modalidadPagoId = value;
                    OnPropertyChanged("modalidadPagoId");
                }
            }
        }
        private int _modalidadPagoId;
    
        [DataMember]
        public string numeroRecibo
        {
            get { return _numeroRecibo; }
            set
            {
                if (_numeroRecibo != value)
                {
                    OnComplexPropertyChanging();
                    _numeroRecibo = value;
                    OnPropertyChanged("numeroRecibo");
                }
            }
        }
        private string _numeroRecibo;
    
        [DataMember]
        public System.DateTime fechaRecaudo
        {
            get { return _fechaRecaudo; }
            set
            {
                if (_fechaRecaudo != value)
                {
                    OnComplexPropertyChanging();
                    _fechaRecaudo = value;
                    OnPropertyChanged("fechaRecaudo");
                }
            }
        }
        private System.DateTime _fechaRecaudo;
    
        [DataMember]
        public Nullable<System.DateTime> fechaContabl
        {
            get { return _fechaContabl; }
            set
            {
                if (_fechaContabl != value)
                {
                    OnComplexPropertyChanging();
                    _fechaContabl = value;
                    OnPropertyChanged("fechaContabl");
                }
            }
        }
        private Nullable<System.DateTime> _fechaContabl;
    
        [DataMember]
        public Nullable<int> amparo_Id
        {
            get { return _amparo_Id; }
            set
            {
                if (_amparo_Id != value)
                {
                    OnComplexPropertyChanging();
                    _amparo_Id = value;
                    OnPropertyChanged("amparo_Id");
                }
            }
        }
        private Nullable<int> _amparo_Id;
    
        [DataMember]
        public Nullable<double> colquines
        {
            get { return _colquines; }
            set
            {
                if (_colquines != value)
                {
                    OnComplexPropertyChanging();
                    _colquines = value;
                    OnPropertyChanged("colquines");
                }
            }
        }
        private Nullable<double> _colquines;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    OnComplexPropertyChanging();
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    OnComplexPropertyChanging();
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public string codigo_agrupador
        {
            get { return _codigo_agrupador; }
            set
            {
                if (_codigo_agrupador != value)
                {
                    OnComplexPropertyChanging();
                    _codigo_agrupador = value;
                    OnPropertyChanged("codigo_agrupador");
                }
            }
        }
        private string _codigo_agrupador;
    
        [DataMember]
        public string tipoVehiculo
        {
            get { return _tipoVehiculo; }
            set
            {
                if (_tipoVehiculo != value)
                {
                    OnComplexPropertyChanging();
                    _tipoVehiculo = value;
                    OnPropertyChanged("tipoVehiculo");
                }
            }
        }
        private string _tipoVehiculo;
    
        [DataMember]
        public Nullable<int> liquidadoPor
        {
            get { return _liquidadoPor; }
            set
            {
                if (_liquidadoPor != value)
                {
                    OnComplexPropertyChanging();
                    _liquidadoPor = value;
                    OnPropertyChanged("liquidadoPor");
                }
            }
        }
        private Nullable<int> _liquidadoPor;
    
        [DataMember]
        public Nullable<int> ramo_id_agrupado
        {
            get { return _ramo_id_agrupado; }
            set
            {
                if (_ramo_id_agrupado != value)
                {
                    OnComplexPropertyChanging();
                    _ramo_id_agrupado = value;
                    OnPropertyChanged("ramo_id_agrupado");
                }
            }
        }
        private Nullable<int> _ramo_id_agrupado;
    
        [DataMember]
        public Nullable<int> producto_id_agrupado
        {
            get { return _producto_id_agrupado; }
            set
            {
                if (_producto_id_agrupado != value)
                {
                    OnComplexPropertyChanging();
                    _producto_id_agrupado = value;
                    OnPropertyChanged("producto_id_agrupado");
                }
            }
        }
        private Nullable<int> _producto_id_agrupado;

        #endregion
        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, ObtenerDetalleLiquidacionFranquicia_Result complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.id", parentPropertyName), complexObject == null ? null : (object)complexObject.id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.porcentajeParticipacion", parentPropertyName), complexObject == null ? null : (object)complexObject.porcentajeParticipacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.totalParticipacion", parentPropertyName), complexObject == null ? null : (object)complexObject.totalParticipacion);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.liquidacionFranquicia_id", parentPropertyName), complexObject == null ? null : (object)complexObject.liquidacionFranquicia_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.localidad_id", parentPropertyName), complexObject == null ? null : (object)complexObject.localidad_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.compania_id", parentPropertyName), complexObject == null ? null : (object)complexObject.compania_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ramo_id", parentPropertyName), complexObject == null ? null : (object)complexObject.ramo_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.producto_id", parentPropertyName), complexObject == null ? null : (object)complexObject.producto_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.valorRecaudo", parentPropertyName), complexObject == null ? null : (object)complexObject.valorRecaudo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.numeroNegocio", parentPropertyName), complexObject == null ? null : (object)complexObject.numeroNegocio);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.nivelDirector", parentPropertyName), complexObject == null ? null : (object)complexObject.nivelDirector);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.claveParticipante", parentPropertyName), complexObject == null ? null : (object)complexObject.claveParticipante);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.modalidadPagoId", parentPropertyName), complexObject == null ? null : (object)complexObject.modalidadPagoId);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.numeroRecibo", parentPropertyName), complexObject == null ? null : (object)complexObject.numeroRecibo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fechaRecaudo", parentPropertyName), complexObject == null ? null : (object)complexObject.fechaRecaudo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.fechaContabl", parentPropertyName), complexObject == null ? null : (object)complexObject.fechaContabl);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.amparo_Id", parentPropertyName), complexObject == null ? null : (object)complexObject.amparo_Id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.colquines", parentPropertyName), complexObject == null ? null : (object)complexObject.colquines);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.lineaNegocio_id", parentPropertyName), complexObject == null ? null : (object)complexObject.lineaNegocio_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.zona_id", parentPropertyName), complexObject == null ? null : (object)complexObject.zona_id);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.codigo_agrupador", parentPropertyName), complexObject == null ? null : (object)complexObject.codigo_agrupador);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.tipoVehiculo", parentPropertyName), complexObject == null ? null : (object)complexObject.tipoVehiculo);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.liquidadoPor", parentPropertyName), complexObject == null ? null : (object)complexObject.liquidadoPor);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ramo_id_agrupado", parentPropertyName), complexObject == null ? null : (object)complexObject.ramo_id_agrupado);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.producto_id_agrupado", parentPropertyName), complexObject == null ? null : (object)complexObject.producto_id_agrupado);
        }

        #endregion
    }
}
