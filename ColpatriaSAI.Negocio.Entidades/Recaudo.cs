//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace ColpatriaSAI.Negocio.Entidades
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Amparo))]
    [KnownType(typeof(BancoDetalle))]
    [KnownType(typeof(Cobertura))]
    [KnownType(typeof(FormaPago))]
    [KnownType(typeof(LineaNegocio))]
    [KnownType(typeof(Localidad))]
    [KnownType(typeof(ModalidadPago))]
    [KnownType(typeof(PlanDetalle))]
    [KnownType(typeof(ProductoDetalle))]
    [KnownType(typeof(RamoDetalle))]
    [KnownType(typeof(RedDetalle))]
    [KnownType(typeof(Segmento))]
    [KnownType(typeof(TipoRecaudo))]
    [KnownType(typeof(Zona))]
    [KnownType(typeof(Compania))]
    [KnownType(typeof(Participante))]
    public partial class Recaudo: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public long id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("id");
                }
            }
        }
        private long _id;
    
        [DataMember]
        public Nullable<int> segmento_id
        {
            get { return _segmento_id; }
            set
            {
                if (_segmento_id != value)
                {
                    ChangeTracker.RecordOriginalValue("segmento_id", _segmento_id);
                    if (!IsDeserializing)
                    {
                        if (Segmento != null && Segmento.id != value)
                        {
                            Segmento = null;
                        }
                    }
                    _segmento_id = value;
                    OnPropertyChanged("segmento_id");
                }
            }
        }
        private Nullable<int> _segmento_id;
    
        [DataMember]
        public Nullable<int> compania_id
        {
            get { return _compania_id; }
            set
            {
                if (_compania_id != value)
                {
                    ChangeTracker.RecordOriginalValue("compania_id", _compania_id);
                    if (!IsDeserializing)
                    {
                        if (Compania != null && Compania.id != value)
                        {
                            Compania = null;
                        }
                    }
                    _compania_id = value;
                    OnPropertyChanged("compania_id");
                }
            }
        }
        private Nullable<int> _compania_id;
    
        [DataMember]
        public Nullable<int> lineaNegocio_id
        {
            get { return _lineaNegocio_id; }
            set
            {
                if (_lineaNegocio_id != value)
                {
                    ChangeTracker.RecordOriginalValue("lineaNegocio_id", _lineaNegocio_id);
                    if (!IsDeserializing)
                    {
                        if (LineaNegocio != null && LineaNegocio.id != value)
                        {
                            LineaNegocio = null;
                        }
                    }
                    _lineaNegocio_id = value;
                    OnPropertyChanged("lineaNegocio_id");
                }
            }
        }
        private Nullable<int> _lineaNegocio_id;
    
        [DataMember]
        public Nullable<int> ramoDetalle_id
        {
            get { return _ramoDetalle_id; }
            set
            {
                if (_ramoDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("ramoDetalle_id", _ramoDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (RamoDetalle != null && RamoDetalle.id != value)
                        {
                            RamoDetalle = null;
                        }
                    }
                    _ramoDetalle_id = value;
                    OnPropertyChanged("ramoDetalle_id");
                }
            }
        }
        private Nullable<int> _ramoDetalle_id;
    
        [DataMember]
        public Nullable<int> productoDetalle_id
        {
            get { return _productoDetalle_id; }
            set
            {
                if (_productoDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("productoDetalle_id", _productoDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (ProductoDetalle != null && ProductoDetalle.id != value)
                        {
                            ProductoDetalle = null;
                        }
                    }
                    _productoDetalle_id = value;
                    OnPropertyChanged("productoDetalle_id");
                }
            }
        }
        private Nullable<int> _productoDetalle_id;
    
        [DataMember]
        public Nullable<int> planDetalle_id
        {
            get { return _planDetalle_id; }
            set
            {
                if (_planDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("planDetalle_id", _planDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (PlanDetalle != null && PlanDetalle.id != value)
                        {
                            PlanDetalle = null;
                        }
                    }
                    _planDetalle_id = value;
                    OnPropertyChanged("planDetalle_id");
                }
            }
        }
        private Nullable<int> _planDetalle_id;
    
        [DataMember]
        public Nullable<int> amparo_id
        {
            get { return _amparo_id; }
            set
            {
                if (_amparo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("amparo_id", _amparo_id);
                    if (!IsDeserializing)
                    {
                        if (Amparo != null && Amparo.id != value)
                        {
                            Amparo = null;
                        }
                    }
                    _amparo_id = value;
                    OnPropertyChanged("amparo_id");
                }
            }
        }
        private Nullable<int> _amparo_id;
    
        [DataMember]
        public Nullable<int> cobertura_id
        {
            get { return _cobertura_id; }
            set
            {
                if (_cobertura_id != value)
                {
                    ChangeTracker.RecordOriginalValue("cobertura_id", _cobertura_id);
                    if (!IsDeserializing)
                    {
                        if (Cobertura != null && Cobertura.id != value)
                        {
                            Cobertura = null;
                        }
                    }
                    _cobertura_id = value;
                    OnPropertyChanged("cobertura_id");
                }
            }
        }
        private Nullable<int> _cobertura_id;
    
        [DataMember]
        public Nullable<int> modalidadpago_id
        {
            get { return _modalidadpago_id; }
            set
            {
                if (_modalidadpago_id != value)
                {
                    ChangeTracker.RecordOriginalValue("modalidadpago_id", _modalidadpago_id);
                    if (!IsDeserializing)
                    {
                        if (ModalidadPago != null && ModalidadPago.id != value)
                        {
                            ModalidadPago = null;
                        }
                    }
                    _modalidadpago_id = value;
                    OnPropertyChanged("modalidadpago_id");
                }
            }
        }
        private Nullable<int> _modalidadpago_id;
    
        [DataMember]
        public Nullable<int> localidad_id
        {
            get { return _localidad_id; }
            set
            {
                if (_localidad_id != value)
                {
                    ChangeTracker.RecordOriginalValue("localidad_id", _localidad_id);
                    if (!IsDeserializing)
                    {
                        if (Localidad != null && Localidad.id != value)
                        {
                            Localidad = null;
                        }
                    }
                    _localidad_id = value;
                    OnPropertyChanged("localidad_id");
                }
            }
        }
        private Nullable<int> _localidad_id;
    
        [DataMember]
        public Nullable<int> zona_id
        {
            get { return _zona_id; }
            set
            {
                if (_zona_id != value)
                {
                    ChangeTracker.RecordOriginalValue("zona_id", _zona_id);
                    if (!IsDeserializing)
                    {
                        if (Zona != null && Zona.id != value)
                        {
                            Zona = null;
                        }
                    }
                    _zona_id = value;
                    OnPropertyChanged("zona_id");
                }
            }
        }
        private Nullable<int> _zona_id;
    
        [DataMember]
        public Nullable<int> formaPago_id
        {
            get { return _formaPago_id; }
            set
            {
                if (_formaPago_id != value)
                {
                    ChangeTracker.RecordOriginalValue("formaPago_id", _formaPago_id);
                    if (!IsDeserializing)
                    {
                        if (FormaPago != null && FormaPago.id != value)
                        {
                            FormaPago = null;
                        }
                    }
                    _formaPago_id = value;
                    OnPropertyChanged("formaPago_id");
                }
            }
        }
        private Nullable<int> _formaPago_id;
    
        [DataMember]
        public Nullable<int> redDetalle_id
        {
            get { return _redDetalle_id; }
            set
            {
                if (_redDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("redDetalle_id", _redDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (RedDetalle != null && RedDetalle.id != value)
                        {
                            RedDetalle = null;
                        }
                    }
                    _redDetalle_id = value;
                    OnPropertyChanged("redDetalle_id");
                }
            }
        }
        private Nullable<int> _redDetalle_id;
    
        [DataMember]
        public Nullable<int> bancoDetalle_id
        {
            get { return _bancoDetalle_id; }
            set
            {
                if (_bancoDetalle_id != value)
                {
                    ChangeTracker.RecordOriginalValue("bancoDetalle_id", _bancoDetalle_id);
                    if (!IsDeserializing)
                    {
                        if (BancoDetalle != null && BancoDetalle.id != value)
                        {
                            BancoDetalle = null;
                        }
                    }
                    _bancoDetalle_id = value;
                    OnPropertyChanged("bancoDetalle_id");
                }
            }
        }
        private Nullable<int> _bancoDetalle_id;
    
        [DataMember]
        public Nullable<int> participante_id
        {
            get { return _participante_id; }
            set
            {
                if (_participante_id != value)
                {
                    ChangeTracker.RecordOriginalValue("participante_id", _participante_id);
                    if (!IsDeserializing)
                    {
                        if (Participante != null && Participante.id != value)
                        {
                            Participante = null;
                        }
                    }
                    _participante_id = value;
                    OnPropertyChanged("participante_id");
                }
            }
        }
        private Nullable<int> _participante_id;
    
        [DataMember]
        public string clave
        {
            get { return _clave; }
            set
            {
                if (_clave != value)
                {
                    _clave = value;
                    OnPropertyChanged("clave");
                }
            }
        }
        private string _clave;
    
        [DataMember]
        public Nullable<int> tipoRecaudo_id
        {
            get { return _tipoRecaudo_id; }
            set
            {
                if (_tipoRecaudo_id != value)
                {
                    ChangeTracker.RecordOriginalValue("tipoRecaudo_id", _tipoRecaudo_id);
                    if (!IsDeserializing)
                    {
                        if (TipoRecaudo != null && TipoRecaudo.id != value)
                        {
                            TipoRecaudo = null;
                        }
                    }
                    _tipoRecaudo_id = value;
                    OnPropertyChanged("tipoRecaudo_id");
                }
            }
        }
        private Nullable<int> _tipoRecaudo_id;
    
        [DataMember]
        public string numeroNegocio
        {
            get { return _numeroNegocio; }
            set
            {
                if (_numeroNegocio != value)
                {
                    _numeroNegocio = value;
                    OnPropertyChanged("numeroNegocio");
                }
            }
        }
        private string _numeroNegocio;
    
        [DataMember]
        public Nullable<System.DateTime> fechaRecaudo
        {
            get { return _fechaRecaudo; }
            set
            {
                if (_fechaRecaudo != value)
                {
                    _fechaRecaudo = value;
                    OnPropertyChanged("fechaRecaudo");
                }
            }
        }
        private Nullable<System.DateTime> _fechaRecaudo;
    
        [DataMember]
        public Nullable<System.DateTime> fechaGrabacion
        {
            get { return _fechaGrabacion; }
            set
            {
                if (_fechaGrabacion != value)
                {
                    _fechaGrabacion = value;
                    OnPropertyChanged("fechaGrabacion");
                }
            }
        }
        private Nullable<System.DateTime> _fechaGrabacion;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCobranza
        {
            get { return _fechaCobranza; }
            set
            {
                if (_fechaCobranza != value)
                {
                    _fechaCobranza = value;
                    OnPropertyChanged("fechaCobranza");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCobranza;
    
        [DataMember]
        public Nullable<double> valorRecaudo
        {
            get { return _valorRecaudo; }
            set
            {
                if (_valorRecaudo != value)
                {
                    _valorRecaudo = value;
                    OnPropertyChanged("valorRecaudo");
                }
            }
        }
        private Nullable<double> _valorRecaudo;
    
        [DataMember]
        public Nullable<double> porcentajeParticipacion
        {
            get { return _porcentajeParticipacion; }
            set
            {
                if (_porcentajeParticipacion != value)
                {
                    _porcentajeParticipacion = value;
                    OnPropertyChanged("porcentajeParticipacion");
                }
            }
        }
        private Nullable<double> _porcentajeParticipacion;
    
        [DataMember]
        public string numeroRecibo
        {
            get { return _numeroRecibo; }
            set
            {
                if (_numeroRecibo != value)
                {
                    _numeroRecibo = value;
                    OnPropertyChanged("numeroRecibo");
                }
            }
        }
        private string _numeroRecibo;
    
        [DataMember]
        public Nullable<int> periodoFacturado
        {
            get { return _periodoFacturado; }
            set
            {
                if (_periodoFacturado != value)
                {
                    _periodoFacturado = value;
                    OnPropertyChanged("periodoFacturado");
                }
            }
        }
        private Nullable<int> _periodoFacturado;
    
        [DataMember]
        public Nullable<int> Altura
        {
            get { return _altura; }
            set
            {
                if (_altura != value)
                {
                    _altura = value;
                    OnPropertyChanged("Altura");
                }
            }
        }
        private Nullable<int> _altura;
    
        [DataMember]
        public string Concepto
        {
            get { return _concepto; }
            set
            {
                if (_concepto != value)
                {
                    _concepto = value;
                    OnPropertyChanged("Concepto");
                }
            }
        }
        private string _concepto;
    
        [DataMember]
        public Nullable<double> porcentajeAhorro_Inversion
        {
            get { return _porcentajeAhorro_Inversion; }
            set
            {
                if (_porcentajeAhorro_Inversion != value)
                {
                    _porcentajeAhorro_Inversion = value;
                    OnPropertyChanged("porcentajeAhorro_Inversion");
                }
            }
        }
        private Nullable<double> _porcentajeAhorro_Inversion;
    
        [DataMember]
        public string sistema
        {
            get { return _sistema; }
            set
            {
                if (_sistema != value)
                {
                    _sistema = value;
                    OnPropertyChanged("sistema");
                }
            }
        }
        private string _sistema;
    
        [DataMember]
        public string codigoOcupacion
        {
            get { return _codigoOcupacion; }
            set
            {
                if (_codigoOcupacion != value)
                {
                    _codigoOcupacion = value;
                    OnPropertyChanged("codigoOcupacion");
                }
            }
        }
        private string _codigoOcupacion;
    
        [DataMember]
        public Nullable<double> Colquines
        {
            get { return _colquines; }
            set
            {
                if (_colquines != value)
                {
                    _colquines = value;
                    OnPropertyChanged("Colquines");
                }
            }
        }
        private Nullable<double> _colquines;
    
        [DataMember]
        public Nullable<System.DateTime> fechaCarga
        {
            get { return _fechaCarga; }
            set
            {
                if (_fechaCarga != value)
                {
                    _fechaCarga = value;
                    OnPropertyChanged("fechaCarga");
                }
            }
        }
        private Nullable<System.DateTime> _fechaCarga;
    
        [DataMember]
        public Nullable<int> estadoCierre
        {
            get { return _estadoCierre; }
            set
            {
                if (_estadoCierre != value)
                {
                    _estadoCierre = value;
                    OnPropertyChanged("estadoCierre");
                }
            }
        }
        private Nullable<int> _estadoCierre;
    
        [DataMember]
        public Nullable<int> mesCierre
        {
            get { return _mesCierre; }
            set
            {
                if (_mesCierre != value)
                {
                    _mesCierre = value;
                    OnPropertyChanged("mesCierre");
                }
            }
        }
        private Nullable<int> _mesCierre;
    
        [DataMember]
        public Nullable<int> anioCierre
        {
            get { return _anioCierre; }
            set
            {
                if (_anioCierre != value)
                {
                    _anioCierre = value;
                    OnPropertyChanged("anioCierre");
                }
            }
        }
        private Nullable<int> _anioCierre;

        #endregion
        #region Navigation Properties
    
        [DataMember]
        public Amparo Amparo
        {
            get { return _amparo; }
            set
            {
                if (!ReferenceEquals(_amparo, value))
                {
                    var previousValue = _amparo;
                    _amparo = value;
                    FixupAmparo(previousValue);
                    OnNavigationPropertyChanged("Amparo");
                }
            }
        }
        private Amparo _amparo;
    
        [DataMember]
        public BancoDetalle BancoDetalle
        {
            get { return _bancoDetalle; }
            set
            {
                if (!ReferenceEquals(_bancoDetalle, value))
                {
                    var previousValue = _bancoDetalle;
                    _bancoDetalle = value;
                    FixupBancoDetalle(previousValue);
                    OnNavigationPropertyChanged("BancoDetalle");
                }
            }
        }
        private BancoDetalle _bancoDetalle;
    
        [DataMember]
        public Cobertura Cobertura
        {
            get { return _cobertura; }
            set
            {
                if (!ReferenceEquals(_cobertura, value))
                {
                    var previousValue = _cobertura;
                    _cobertura = value;
                    FixupCobertura(previousValue);
                    OnNavigationPropertyChanged("Cobertura");
                }
            }
        }
        private Cobertura _cobertura;
    
        [DataMember]
        public FormaPago FormaPago
        {
            get { return _formaPago; }
            set
            {
                if (!ReferenceEquals(_formaPago, value))
                {
                    var previousValue = _formaPago;
                    _formaPago = value;
                    FixupFormaPago(previousValue);
                    OnNavigationPropertyChanged("FormaPago");
                }
            }
        }
        private FormaPago _formaPago;
    
        [DataMember]
        public LineaNegocio LineaNegocio
        {
            get { return _lineaNegocio; }
            set
            {
                if (!ReferenceEquals(_lineaNegocio, value))
                {
                    var previousValue = _lineaNegocio;
                    _lineaNegocio = value;
                    FixupLineaNegocio(previousValue);
                    OnNavigationPropertyChanged("LineaNegocio");
                }
            }
        }
        private LineaNegocio _lineaNegocio;
    
        [DataMember]
        public Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                    OnNavigationPropertyChanged("Localidad");
                }
            }
        }
        private Localidad _localidad;
    
        [DataMember]
        public ModalidadPago ModalidadPago
        {
            get { return _modalidadPago; }
            set
            {
                if (!ReferenceEquals(_modalidadPago, value))
                {
                    var previousValue = _modalidadPago;
                    _modalidadPago = value;
                    FixupModalidadPago(previousValue);
                    OnNavigationPropertyChanged("ModalidadPago");
                }
            }
        }
        private ModalidadPago _modalidadPago;
    
        [DataMember]
        public PlanDetalle PlanDetalle
        {
            get { return _planDetalle; }
            set
            {
                if (!ReferenceEquals(_planDetalle, value))
                {
                    var previousValue = _planDetalle;
                    _planDetalle = value;
                    FixupPlanDetalle(previousValue);
                    OnNavigationPropertyChanged("PlanDetalle");
                }
            }
        }
        private PlanDetalle _planDetalle;
    
        [DataMember]
        public ProductoDetalle ProductoDetalle
        {
            get { return _productoDetalle; }
            set
            {
                if (!ReferenceEquals(_productoDetalle, value))
                {
                    var previousValue = _productoDetalle;
                    _productoDetalle = value;
                    FixupProductoDetalle(previousValue);
                    OnNavigationPropertyChanged("ProductoDetalle");
                }
            }
        }
        private ProductoDetalle _productoDetalle;
    
        [DataMember]
        public RamoDetalle RamoDetalle
        {
            get { return _ramoDetalle; }
            set
            {
                if (!ReferenceEquals(_ramoDetalle, value))
                {
                    var previousValue = _ramoDetalle;
                    _ramoDetalle = value;
                    FixupRamoDetalle(previousValue);
                    OnNavigationPropertyChanged("RamoDetalle");
                }
            }
        }
        private RamoDetalle _ramoDetalle;
    
        [DataMember]
        public RedDetalle RedDetalle
        {
            get { return _redDetalle; }
            set
            {
                if (!ReferenceEquals(_redDetalle, value))
                {
                    var previousValue = _redDetalle;
                    _redDetalle = value;
                    FixupRedDetalle(previousValue);
                    OnNavigationPropertyChanged("RedDetalle");
                }
            }
        }
        private RedDetalle _redDetalle;
    
        [DataMember]
        public Segmento Segmento
        {
            get { return _segmento; }
            set
            {
                if (!ReferenceEquals(_segmento, value))
                {
                    var previousValue = _segmento;
                    _segmento = value;
                    FixupSegmento(previousValue);
                    OnNavigationPropertyChanged("Segmento");
                }
            }
        }
        private Segmento _segmento;
    
        [DataMember]
        public TipoRecaudo TipoRecaudo
        {
            get { return _tipoRecaudo; }
            set
            {
                if (!ReferenceEquals(_tipoRecaudo, value))
                {
                    var previousValue = _tipoRecaudo;
                    _tipoRecaudo = value;
                    FixupTipoRecaudo(previousValue);
                    OnNavigationPropertyChanged("TipoRecaudo");
                }
            }
        }
        private TipoRecaudo _tipoRecaudo;
    
        [DataMember]
        public Zona Zona
        {
            get { return _zona; }
            set
            {
                if (!ReferenceEquals(_zona, value))
                {
                    var previousValue = _zona;
                    _zona = value;
                    FixupZona(previousValue);
                    OnNavigationPropertyChanged("Zona");
                }
            }
        }
        private Zona _zona;
    
        [DataMember]
        public Compania Compania
        {
            get { return _compania; }
            set
            {
                if (!ReferenceEquals(_compania, value))
                {
                    var previousValue = _compania;
                    _compania = value;
                    FixupCompania(previousValue);
                    OnNavigationPropertyChanged("Compania");
                }
            }
        }
        private Compania _compania;
    
        [DataMember]
        public Participante Participante
        {
            get { return _participante; }
            set
            {
                if (!ReferenceEquals(_participante, value))
                {
                    var previousValue = _participante;
                    _participante = value;
                    FixupParticipante(previousValue);
                    OnNavigationPropertyChanged("Participante");
                }
            }
        }
        private Participante _participante;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Amparo = null;
            BancoDetalle = null;
            Cobertura = null;
            FormaPago = null;
            LineaNegocio = null;
            Localidad = null;
            ModalidadPago = null;
            PlanDetalle = null;
            ProductoDetalle = null;
            RamoDetalle = null;
            RedDetalle = null;
            Segmento = null;
            TipoRecaudo = null;
            Zona = null;
            Compania = null;
            Participante = null;
        }

        #endregion
        #region Association Fixup
    
        private void FixupAmparo(Amparo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (Amparo != null)
            {
                if (!Amparo.Recaudoes.Contains(this))
                {
                    Amparo.Recaudoes.Add(this);
                }
    
                amparo_id = Amparo.id;
            }
            else if (!skipKeys)
            {
                amparo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Amparo")
                    && (ChangeTracker.OriginalValues["Amparo"] == Amparo))
                {
                    ChangeTracker.OriginalValues.Remove("Amparo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Amparo", previousValue);
                }
                if (Amparo != null && !Amparo.ChangeTracker.ChangeTrackingEnabled)
                {
                    Amparo.StartTracking();
                }
            }
        }
    
        private void FixupBancoDetalle(BancoDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (BancoDetalle != null)
            {
                if (!BancoDetalle.Recaudoes.Contains(this))
                {
                    BancoDetalle.Recaudoes.Add(this);
                }
    
                bancoDetalle_id = BancoDetalle.id;
            }
            else if (!skipKeys)
            {
                bancoDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("BancoDetalle")
                    && (ChangeTracker.OriginalValues["BancoDetalle"] == BancoDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("BancoDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("BancoDetalle", previousValue);
                }
                if (BancoDetalle != null && !BancoDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    BancoDetalle.StartTracking();
                }
            }
        }
    
        private void FixupCobertura(Cobertura previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (Cobertura != null)
            {
                if (!Cobertura.Recaudoes.Contains(this))
                {
                    Cobertura.Recaudoes.Add(this);
                }
    
                cobertura_id = Cobertura.id;
            }
            else if (!skipKeys)
            {
                cobertura_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Cobertura")
                    && (ChangeTracker.OriginalValues["Cobertura"] == Cobertura))
                {
                    ChangeTracker.OriginalValues.Remove("Cobertura");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Cobertura", previousValue);
                }
                if (Cobertura != null && !Cobertura.ChangeTracker.ChangeTrackingEnabled)
                {
                    Cobertura.StartTracking();
                }
            }
        }
    
        private void FixupFormaPago(FormaPago previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (FormaPago != null)
            {
                if (!FormaPago.Recaudoes.Contains(this))
                {
                    FormaPago.Recaudoes.Add(this);
                }
    
                formaPago_id = FormaPago.id;
            }
            else if (!skipKeys)
            {
                formaPago_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("FormaPago")
                    && (ChangeTracker.OriginalValues["FormaPago"] == FormaPago))
                {
                    ChangeTracker.OriginalValues.Remove("FormaPago");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("FormaPago", previousValue);
                }
                if (FormaPago != null && !FormaPago.ChangeTracker.ChangeTrackingEnabled)
                {
                    FormaPago.StartTracking();
                }
            }
        }
    
        private void FixupLineaNegocio(LineaNegocio previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (LineaNegocio != null)
            {
                if (!LineaNegocio.Recaudoes.Contains(this))
                {
                    LineaNegocio.Recaudoes.Add(this);
                }
    
                lineaNegocio_id = LineaNegocio.id;
            }
            else if (!skipKeys)
            {
                lineaNegocio_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("LineaNegocio")
                    && (ChangeTracker.OriginalValues["LineaNegocio"] == LineaNegocio))
                {
                    ChangeTracker.OriginalValues.Remove("LineaNegocio");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("LineaNegocio", previousValue);
                }
                if (LineaNegocio != null && !LineaNegocio.ChangeTracker.ChangeTrackingEnabled)
                {
                    LineaNegocio.StartTracking();
                }
            }
        }
    
        private void FixupLocalidad(Localidad previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.Recaudoes.Contains(this))
                {
                    Localidad.Recaudoes.Add(this);
                }
    
                localidad_id = Localidad.id;
            }
            else if (!skipKeys)
            {
                localidad_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Localidad")
                    && (ChangeTracker.OriginalValues["Localidad"] == Localidad))
                {
                    ChangeTracker.OriginalValues.Remove("Localidad");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Localidad", previousValue);
                }
                if (Localidad != null && !Localidad.ChangeTracker.ChangeTrackingEnabled)
                {
                    Localidad.StartTracking();
                }
            }
        }
    
        private void FixupModalidadPago(ModalidadPago previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (ModalidadPago != null)
            {
                if (!ModalidadPago.Recaudoes.Contains(this))
                {
                    ModalidadPago.Recaudoes.Add(this);
                }
    
                modalidadpago_id = ModalidadPago.id;
            }
            else if (!skipKeys)
            {
                modalidadpago_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ModalidadPago")
                    && (ChangeTracker.OriginalValues["ModalidadPago"] == ModalidadPago))
                {
                    ChangeTracker.OriginalValues.Remove("ModalidadPago");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ModalidadPago", previousValue);
                }
                if (ModalidadPago != null && !ModalidadPago.ChangeTracker.ChangeTrackingEnabled)
                {
                    ModalidadPago.StartTracking();
                }
            }
        }
    
        private void FixupPlanDetalle(PlanDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (PlanDetalle != null)
            {
                if (!PlanDetalle.Recaudoes.Contains(this))
                {
                    PlanDetalle.Recaudoes.Add(this);
                }
    
                planDetalle_id = PlanDetalle.id;
            }
            else if (!skipKeys)
            {
                planDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("PlanDetalle")
                    && (ChangeTracker.OriginalValues["PlanDetalle"] == PlanDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("PlanDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("PlanDetalle", previousValue);
                }
                if (PlanDetalle != null && !PlanDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    PlanDetalle.StartTracking();
                }
            }
        }
    
        private void FixupProductoDetalle(ProductoDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (ProductoDetalle != null)
            {
                if (!ProductoDetalle.Recaudoes.Contains(this))
                {
                    ProductoDetalle.Recaudoes.Add(this);
                }
    
                productoDetalle_id = ProductoDetalle.id;
            }
            else if (!skipKeys)
            {
                productoDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("ProductoDetalle")
                    && (ChangeTracker.OriginalValues["ProductoDetalle"] == ProductoDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("ProductoDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("ProductoDetalle", previousValue);
                }
                if (ProductoDetalle != null && !ProductoDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    ProductoDetalle.StartTracking();
                }
            }
        }
    
        private void FixupRamoDetalle(RamoDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (RamoDetalle != null)
            {
                if (!RamoDetalle.Recaudoes.Contains(this))
                {
                    RamoDetalle.Recaudoes.Add(this);
                }
    
                ramoDetalle_id = RamoDetalle.id;
            }
            else if (!skipKeys)
            {
                ramoDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RamoDetalle")
                    && (ChangeTracker.OriginalValues["RamoDetalle"] == RamoDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("RamoDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RamoDetalle", previousValue);
                }
                if (RamoDetalle != null && !RamoDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    RamoDetalle.StartTracking();
                }
            }
        }
    
        private void FixupRedDetalle(RedDetalle previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (RedDetalle != null)
            {
                if (!RedDetalle.Recaudoes.Contains(this))
                {
                    RedDetalle.Recaudoes.Add(this);
                }
    
                redDetalle_id = RedDetalle.id;
            }
            else if (!skipKeys)
            {
                redDetalle_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("RedDetalle")
                    && (ChangeTracker.OriginalValues["RedDetalle"] == RedDetalle))
                {
                    ChangeTracker.OriginalValues.Remove("RedDetalle");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("RedDetalle", previousValue);
                }
                if (RedDetalle != null && !RedDetalle.ChangeTracker.ChangeTrackingEnabled)
                {
                    RedDetalle.StartTracking();
                }
            }
        }
    
        private void FixupSegmento(Segmento previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (Segmento != null)
            {
                if (!Segmento.Recaudoes.Contains(this))
                {
                    Segmento.Recaudoes.Add(this);
                }
    
                segmento_id = Segmento.id;
            }
            else if (!skipKeys)
            {
                segmento_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Segmento")
                    && (ChangeTracker.OriginalValues["Segmento"] == Segmento))
                {
                    ChangeTracker.OriginalValues.Remove("Segmento");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Segmento", previousValue);
                }
                if (Segmento != null && !Segmento.ChangeTracker.ChangeTrackingEnabled)
                {
                    Segmento.StartTracking();
                }
            }
        }
    
        private void FixupTipoRecaudo(TipoRecaudo previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (TipoRecaudo != null)
            {
                if (!TipoRecaudo.Recaudoes.Contains(this))
                {
                    TipoRecaudo.Recaudoes.Add(this);
                }
    
                tipoRecaudo_id = TipoRecaudo.id;
            }
            else if (!skipKeys)
            {
                tipoRecaudo_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("TipoRecaudo")
                    && (ChangeTracker.OriginalValues["TipoRecaudo"] == TipoRecaudo))
                {
                    ChangeTracker.OriginalValues.Remove("TipoRecaudo");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("TipoRecaudo", previousValue);
                }
                if (TipoRecaudo != null && !TipoRecaudo.ChangeTracker.ChangeTrackingEnabled)
                {
                    TipoRecaudo.StartTracking();
                }
            }
        }
    
        private void FixupZona(Zona previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (Zona != null)
            {
                if (!Zona.Recaudoes.Contains(this))
                {
                    Zona.Recaudoes.Add(this);
                }
    
                zona_id = Zona.id;
            }
            else if (!skipKeys)
            {
                zona_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Zona")
                    && (ChangeTracker.OriginalValues["Zona"] == Zona))
                {
                    ChangeTracker.OriginalValues.Remove("Zona");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Zona", previousValue);
                }
                if (Zona != null && !Zona.ChangeTracker.ChangeTrackingEnabled)
                {
                    Zona.StartTracking();
                }
            }
        }
    
        private void FixupCompania(Compania previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (Compania != null)
            {
                if (!Compania.Recaudoes.Contains(this))
                {
                    Compania.Recaudoes.Add(this);
                }
    
                compania_id = Compania.id;
            }
            else if (!skipKeys)
            {
                compania_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Compania")
                    && (ChangeTracker.OriginalValues["Compania"] == Compania))
                {
                    ChangeTracker.OriginalValues.Remove("Compania");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Compania", previousValue);
                }
                if (Compania != null && !Compania.ChangeTracker.ChangeTrackingEnabled)
                {
                    Compania.StartTracking();
                }
            }
        }
    
        private void FixupParticipante(Participante previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Recaudoes.Contains(this))
            {
                previousValue.Recaudoes.Remove(this);
            }
    
            if (Participante != null)
            {
                if (!Participante.Recaudoes.Contains(this))
                {
                    Participante.Recaudoes.Add(this);
                }
    
                participante_id = Participante.id;
            }
            else if (!skipKeys)
            {
                participante_id = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Participante")
                    && (ChangeTracker.OriginalValues["Participante"] == Participante))
                {
                    ChangeTracker.OriginalValues.Remove("Participante");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Participante", previousValue);
                }
                if (Participante != null && !Participante.ChangeTracker.ChangeTrackingEnabled)
                {
                    Participante.StartTracking();
                }
            }
        }

        #endregion
    }
}
